{"version":3,"file":"464eac91-b0e66191deb898bcf626.js","mappings":"mPAeO,IAAMA,EAA6B,SAACC,GACzC,IAAMC,GAAWC,EAAAA,EAAAA,eACTC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KACf,GAA4BC,EAAAA,EAAAA,WAAS,WACnC,MAAsB,oBAAXC,OAA+B,GAEnCA,OAAOC,aAAaC,QAAQ,WAAa,MAH3CC,EAAP,KAAeC,EAAf,KAKA,GAAgCL,EAAAA,EAAAA,WAA0B,WACxD,MAAsB,oBAAXC,OAA+B,OAClCA,OAAOC,aAAaC,QAAQ,aAAmC,UAFlEG,EAAP,KAAiBC,EAAjB,KAIMC,GAAMC,EAAAA,EAAAA,QAAuB,MACnC,GAAwDT,EAAAA,EAAAA,WAAS,GAA1DU,EAAP,KAA6BC,EAA7B,KAEMC,GAAgBC,EAAAA,EAAAA,UAAQ,kBAAMf,EAAMgB,QAAO,SAACC,GAAD,OAAQA,EAAGC,KAAKC,SAASb,QAAU,CAACA,EAAQN,KAE7FoB,EAAAA,EAAAA,YAAU,WAAO,IAAD,QACdP,GAAwB,oBAACH,EAAIW,eAAL,aAAC,EAAaC,oBAAd,QAA8B,IAA9B,oBAAoCZ,EAAIW,eAAxC,aAAoC,EAAaE,oBAAjD,QAAiE,MACxF,CAACjB,EAAQN,EAAOQ,IAEnB,IAAMgB,GAAOT,EAAAA,EAAAA,UAAQ,iBAAoB,SAAbP,EAAsBiB,EAAYC,IAAY,CAAClB,IACrEmB,GAAWZ,EAAAA,EAAAA,UAAQ,iBAAoB,SAAbP,EAAsBoB,EAAgBC,IAAgB,CAACrB,IAEvF,OACE,UAACsB,EAAD,CAAkBpB,IAAKA,EAAKE,qBAAsBA,EAAsBX,KAAMA,EAA9E,WACE,UAAC8B,EAAD,YACE,UAACC,EAAD,YACE,UAAC,KAAD,eACI,KACF,UAAC,KAAD,CAAMC,GAAG,OAAOC,MAAOC,EAAAA,GAAAA,QAAAA,SAAvB,cACInC,EAAMoC,OADV,aAIF,SAACC,EAAD,CAAQC,QA4FhB,WACE,IAAMC,EAAoB,SAAb/B,EAAsB,OAAS,OAC5CL,OAAOC,aAAaoC,QAAQ,WAAYD,GACxC9B,EAAY8B,IA/FN,SACgB,SAAb/B,GACC,iBACEiC,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,OAAO,eACPC,YAAY,MACZC,cAAc,QACdC,eAAe,QACfC,KAAK,OACLC,eAAe,qBATjB,WAWE,iBAAMC,EAAE,cACR,iBAAMA,EAAE,aACR,iBAAMA,EAAE,cACR,iBAAMA,EAAE,iBAGV,iBACET,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,OAAO,eACPC,YAAY,MACZC,cAAc,QACdC,eAAe,QACfC,KAAK,OACLC,eAAe,qBATjB,WAWE,iBAAME,EAAE,IAAIC,EAAE,IAAIV,MAAM,KAAKC,OAAO,KAAKU,GAAG,IAAIC,GAAG,OACnD,iBAAMJ,EAAE,sBAKhB,SAACK,EAAD,WACE,SAAC,IAAD,CAAQC,MAAOlD,EAAQmD,SAAU,SAACC,GAAD,OA8CvCnD,EADmBoD,EA7CuCD,QA+C1DvD,OAAOC,aAAaoC,QAAQ,SAAUmB,GAFxC,IAAqBA,WA1CjB,SAACC,EAAD,WACE,SAAC,KAAD,WACE,SAACpC,EAAD,UACGV,EAAc+C,KAAI,SAAC5C,GAAD,OACjB,UAACU,EAAD,CAEEW,QAAS,kBAgCCqB,EAhCoB1C,EAAG6C,UAiC7CC,EAAAA,EAAAA,UAASJ,GADX,IAAwBA,GA/BVK,MAAO/C,EAAG+C,MACVC,KAAMhD,EAAGC,KACTgD,UAiDIP,EAjDe1C,EAAG6C,KAkD3BK,mBAAmBrE,EAASsE,UAAUjD,SAASwC,EAAOU,MAAM,GAAI,KAvD7D,WAOE,yBACgB,SAAb7D,IACC,iBACEiC,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,OAAO,eACPC,YAAY,MACZC,cAAc,QACdC,eAAe,QACfC,KAAK,OACLC,eAAe,qBATjB,WAWE,iBAAMC,EAAE,2DACR,iBAAMA,EAAE,mBAIA,SAAb1C,IAAuB,SAAC,KAAD,UAAOS,EAAGC,SAxB7BD,EAAGC,MAqDtB,IAAkByC,eApIb,gHAyID7B,GAAgB,mIASlB,gBAAGwC,EAAH,EAAGA,MAAO1D,EAAV,EAAUA,qBAAsBX,EAAhC,EAAgCA,KAAhC,OAA2CsE,EAAAA,EAAAA,IAA1C,WACUD,EAAME,OAAOC,eAAiB,EADzC,eAEcH,EAAMI,OAAOC,QAAQC,SAFnC,eAGcN,EAAMO,QAAQC,MAH5B,IAKElE,GAAoB,EALtB,IAYEX,GAAI,EAZN,UATkB,uUAqDhB8B,GAAM,6HAOR,gBAAGuC,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,WACUD,EAAME,OAAOC,eAAiB,EADzC,eAEcH,EAAMI,OAAOC,QAAQC,SAFnC,UAPQ,KAaNvC,GAAM,oKAQR,gBAAGiC,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,SACQD,EAAMI,OAAOC,QAAQI,SAD9B,kBAGWT,EAAMI,OAAOC,QAAQK,WAHhC,WARQ,KAgBNhD,GAAK,0LAULuB,GAAS,yHAOTK,GAAU,mGAKVnC,GAAS,wIAOTG,GAAa,kSAcf,gBAAG0C,EAAH,EAAGA,MAAON,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,SAAvB,OAAsCK,EAAAA,EAAAA,IAArC,wBACuBP,EADxB,6FAKcM,EAAMO,QAAQC,MAL5B,UAMSR,EAAMI,OAAOC,QAAQM,WAN9B,gGAegBf,EAAWI,EAAMI,OAAOQ,UAAUC,KAAOb,EAAMI,OAAOC,QAAQK,WAf9E,YAgBad,EAAW,GAAM,GAhB9B,uBAoBcD,EApBd,6FA2BWK,EAAMI,OAAOC,QAAQM,WA3BhC,4FAde,wCAsDbvD,GAAS,+FAKTG,GAAa,6MAWf,gBAAGyC,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,SAAV,OAAyBK,EAAAA,EAAAA,IACvBL,IACFK,EAAAA,EAAAA,IADU,yBAEiBD,EAAMI,OAAOQ,UAAUC,KAFxC,0BADV,wFAYWb,EAAMI,OAAOC,QAAQI,SAZhC,8BAgBsBT,EAAMI,OAAOC,QAAQS,SAhB3C,WAXe","sources":["webpack://@vallista-land/blog/./src/components/Sidebar/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { useLocation } from '@reach/router'\nimport { Colors, Container, Text } from '@vallista-land/core'\nimport { navigate } from 'gatsby'\nimport { useEffect, useMemo, useRef, useState, VFC } from 'react'\n\nimport { SearchBox as Search } from '../../components/SearchBox'\nimport { SidebarPost } from '../../types/type'\n\ninterface SidebarProps {\n  posts: SidebarPost[]\n  fold: boolean\n}\n\nexport const Sidebar: VFC<SidebarProps> = (props) => {\n  const location = useLocation()\n  const { posts, fold } = props\n  const [search, setSearch] = useState(() => {\n    if (typeof window === 'undefined') return ''\n\n    return window.localStorage.getItem('search') || ''\n  })\n  const [viewType, setViewType] = useState<'list' | 'card'>(() => {\n    if (typeof window === 'undefined') return 'card'\n    return (window.localStorage.getItem('viewType') as 'list' | 'card') || 'card'\n  })\n  const ref = useRef<HTMLDivElement>(null)\n  const [hasVerticalScrollbar, setHasVerticalScrollbar] = useState(false)\n\n  const filteredPosts = useMemo(() => posts.filter((it) => it.name.includes(search)), [search, posts])\n\n  useEffect(() => {\n    setHasVerticalScrollbar((ref.current?.scrollHeight ?? 0) > (ref.current?.clientHeight ?? 0))\n  }, [search, posts, viewType])\n\n  const List = useMemo(() => (viewType === 'card' ? CardStyle : ListStyle), [viewType])\n  const ListItem = useMemo(() => (viewType === 'card' ? CardStyleItem : ListStyleItem), [viewType])\n\n  return (\n    <SidebarContainer ref={ref} hasVerticalScrollbar={hasVerticalScrollbar} fold={fold}>\n      <Header>\n        <Title>\n          <Text>\n            글{' '}\n            <Text as='span' color={Colors.PRIMARY.ACCENT_4}>\n              ({posts.length} 개)\n            </Text>\n          </Text>\n          <Button onClick={handleChangeViewType}>\n            {viewType === 'card' ? (\n              <svg\n                viewBox='0 0 24 24'\n                width='20'\n                height='20'\n                stroke='currentColor'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                fill='none'\n                shapeRendering='geometricPrecision'\n              >\n                <path d='M21 10H3' />\n                <path d='M21 6H3' />\n                <path d='M21 14H3' />\n                <path d='M21 18H3' />\n              </svg>\n            ) : (\n              <svg\n                viewBox='0 0 24 24'\n                width='20'\n                height='20'\n                stroke='currentColor'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                fill='none'\n                shapeRendering='geometricPrecision'\n              >\n                <rect x='1' y='4' width='20' height='16' rx='2' ry='2' />\n                <path d='M1 10h20' />\n              </svg>\n            )}\n          </Button>\n        </Title>\n        <SearchBox>\n          <Search value={search} onSearch={(e) => handleInput(e)} />\n        </SearchBox>\n      </Header>\n      <Categories>\n        <Container>\n          <List>\n            {filteredPosts.map((it) => (\n              <ListItem\n                key={it.name}\n                onClick={() => moveToLocation(it.slug)}\n                image={it.image}\n                text={it.name}\n                isActive={isActive(it.slug)}\n              >\n                <div>\n                  {viewType === 'list' && (\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='20'\n                      height='20'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M13 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V9z' />\n                      <path d='M13 2v7h7' />\n                    </svg>\n                  )}\n                </div>\n                {viewType === 'list' && <Text>{it.name}</Text>}\n              </ListItem>\n            ))}\n          </List>\n        </Container>\n      </Categories>\n    </SidebarContainer>\n  )\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n\n  function handleInput(target: string): void {\n    setSearch(target)\n    window.localStorage.setItem('search', target)\n  }\n\n  function searchClear(): void {\n    setSearch('')\n    window.localStorage.setItem('search', '')\n  }\n\n  function handleChangeViewType(): void {\n    const type = viewType === 'card' ? 'list' : 'card'\n    window.localStorage.setItem('viewType', type)\n    setViewType(type)\n  }\n\n  function isActive(target: string): boolean {\n    return decodeURIComponent(location.pathname).includes(target.slice(0, -1))\n  }\n}\n\nconst SidebarContainer = styled.aside<{ hasVerticalScrollbar: boolean; fold: boolean }>`\n  position: fixed;\n  width: 320px;\n  height: 100vh;\n  top: 0;\n  left: 80px;\n  overflow-x: hidden;\n  overflow-y: hidden;\n\n  ${({ theme, hasVerticalScrollbar, fold }) => css`\n    z-index: ${theme.layers.AFTER_STANDARD - 1};\n    background: ${theme.colors.PRIMARY.ACCENT_1};\n    box-shadow: ${theme.shadows.SMALL};\n\n    ${hasVerticalScrollbar &&\n    css`\n      &:hover > div:last-of-type {\n        margin-right: -8px;\n      }\n    `}\n\n    ${fold &&\n    css`\n      left: -320px;\n    `}\n  `}\n\n  @media screen and (max-width: 1000px) {\n    left: -320px;\n  }\n\n  &:hover {\n    overflow-y: auto;\n  }\n\n  /** 파이어폭스 스크롤 대응 */\n  scrollbar-width: 8px;\n  // thumb background 순\n  scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-background);\n\n  /** 사파리 크롬 스크롤 대응 */\n  &::-webkit-scrollbar {\n    background: var(--scrollbar-background);\n    height: 8px;\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--scrollbar-thumb);\n    border-radius: 0;\n  }\n`\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  top: 0;\n  width: 320px;\n  padding-bottom: 14px;\n  ${({ theme }) => css`\n    z-index: ${theme.layers.AFTER_STANDARD - 2};\n    background: ${theme.colors.PRIMARY.ACCENT_1};\n  `}\n`\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\n\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_4};\n    &:hover {\n      color: ${theme.colors.PRIMARY.FOREGROUND};\n    }\n  `}\n`\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  height: 35px;\n  font-weight: 600;\n  font-size: 14px;\n  padding: 0 28px 2px;\n`\n\nconst SearchBox = styled.div`\n  display: flex;\n  align-items: flex-end;\n  height: 38px;\n  padding: 0 24px;\n`\n\nconst Categories = styled.div`\n  margin-top: 73px;\n  padding: 16px 24px 32px;\n`\n\nconst CardStyle = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst CardStyleItem = styled.a<{ image: string | null; text: string; isActive: boolean }>`\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  width: 130px;\n  height: 130px;\n  margin-bottom: 12px;\n  border-radius: 12px;\n  cursor: pointer;\n  overflow: hidden;\n  transform: scale(1, 1);\n  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  ${({ theme, image, text, isActive }) => css`\n    background-image: url(${image});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    box-shadow: ${theme.shadows.SMALL};\n    color: ${theme.colors.PRIMARY.BACKGROUND};\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: inherit;\n      height: inherit;\n      background: ${isActive ? theme.colors.HIGHLIGHT.PINK : theme.colors.PRIMARY.FOREGROUND};\n      opacity: ${isActive ? 0.5 : 0.3};\n    }\n\n    &::after {\n      content: '${text}';\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      font-size: 16px;\n      font-weight: 600;\n      line-height: 1.1;\n      color: ${theme.colors.PRIMARY.BACKGROUND};\n      text-align: right;\n      margin: 6px 6px 12px;\n      word-break: keep-all;\n      letter-spacing: -0.02rem;\n    }\n  `}\n\n  &:hover {\n    transform: scale(1.1, 1.1);\n  }\n`\n\nconst ListStyle = styled.nav`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ListStyleItem = styled.a<{ isActive: boolean }>`\n  position: relative;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n  padding: 6px 12px;\n  margin: 0 -12px;\n  border-radius: 6px;\n  transition: border 0.2s ease;\n\n  ${({ theme, isActive }) => css`\n    ${isActive &&\n    css`\n      border-left: 6px solid ${theme.colors.HIGHLIGHT.PINK};\n      padding-left: 12px;\n    `};\n\n    & > div {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-right: 6px;\n      color: ${theme.colors.PRIMARY.ACCENT_4};\n    }\n\n    &:hover {\n      background-color: ${theme.colors.PRIMARY.ACCENT_2};\n    }\n\n    /* &::before {\n      content: '';\n      transform: translateY(-50%);\n      \n      font-size: 1rem;\n    } */\n  `}\n\n  & > svg {\n    width: 20px;\n    height: 20px;\n  }\n`\n"],"names":["Sidebar","props","location","useLocation","posts","fold","useState","window","localStorage","getItem","search","setSearch","viewType","setViewType","ref","useRef","hasVerticalScrollbar","setHasVerticalScrollbar","filteredPosts","useMemo","filter","it","name","includes","useEffect","current","scrollHeight","clientHeight","List","CardStyle","ListStyle","ListItem","CardStyleItem","ListStyleItem","SidebarContainer","Header","Title","as","color","Colors","length","Button","onClick","type","setItem","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","y","rx","ry","SearchBox","value","onSearch","e","target","Categories","map","slug","navigate","image","text","isActive","decodeURIComponent","pathname","slice","theme","css","layers","AFTER_STANDARD","colors","PRIMARY","ACCENT_1","shadows","SMALL","ACCENT_4","FOREGROUND","BACKGROUND","HIGHLIGHT","PINK","ACCENT_2"],"sourceRoot":""}