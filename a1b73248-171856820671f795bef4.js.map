{"version":3,"file":"a1b73248-171856820671f795bef4.js","mappings":"0MAQO,MAAMA,EAAuCC,IAC5C,MAAEC,KAAAC,EAAMC,SAAAC,EAAUC,KAAAC,EAAMC,SAAAC,IAAaC,EAAAA,EAAAA,GAAWT,GAChDU,GAAcC,EAAAA,EAAAA,QAAuB,OACpCC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAC9BG,EAASC,IAAYJ,EAAAA,EAAAA,WAAS,IAC9BK,EAAiBC,IAAoBN,EAAAA,EAAAA,WAAS,GAErD,OAAAO,EAAAA,EAAAA,YAAU,KACJX,EAAYY,UACdT,EAASH,EAAYY,QAAQC,wBAAwBC,OACrDR,EAAUN,EAAYY,QAAQC,wBAAwBE,QAAM,GAE7D,CAACf,KAGFgB,EAAAA,EAAAA,IAACC,EAAU,CAAAC,YAAaA,IAAMC,GAAY,GAAOC,WAAYA,IAAMD,GAAY,GAC7EtB,SAAA,EAACwB,EAAAA,EAAAA,GAAAC,EAAA,CAAgBC,IAAKvB,EAAcH,SAAAC,MACjCW,GAAmBF,KACnBc,EAAAA,EAAAA,GAAAG,EAAA,CACCN,YAAaA,IAAMC,GAAY,GAC/BC,WAAYA,IAAMD,GAAY,GAC9BM,gBAAiBA,IAAMf,GAAiB,GACxCgB,QAAAnB,EACAd,SAAAC,EACAC,KAAAC,EACAkB,MAAAZ,EACAa,OAAAV,EAECR,SACHL,OAKN,SAAS2B,EAAYQ,GACnBnB,EAASmB,GACTjB,GAAiB,EAAK,GAIpBO,GAASW,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,8DAUTT,GAAeM,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,sBAMfC,EAAmG1C,IAAA,CACvG2C,QAAS3C,EAAM4C,OAAOC,QAAQC,WAC9BC,QAAS/C,EAAM4C,OAAOI,QAAQC,QAC9BC,QAASlD,EAAM4C,OAAOO,QAAQF,QAC9BG,MAAOpD,EAAM4C,OAAOS,MAAMJ,QAC1BK,UAAWtD,EAAM4C,OAAOC,QAAQU,WAG5BrB,GAAKI,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,+IAmBPkB,IAAA,IAAGC,MAAAzD,EAAOG,SAAAD,EAAUsB,MAAApB,EAAOqB,OAAAnB,EAAQD,KAAAG,GAAKgD,EAAA,OAC7BE,EAAAA,EAAAA,IAAA,WAAA1D,EAAM2D,OAAOC,eAAc,UAC7B5D,EAAM4C,OAAOC,QAAQgB,WAChB,eAAAnB,EAAwB1C,GAAOQ,GAAK,iIAUlCkC,EAAwB1C,GAAOQ,GAG7C,KAAa,QAAbN,IACFwD,EAAAA,EAAAA,IAEY,mBAAApD,EAAA,iCAhDI,GAiD2B,iFAO1C,cAEc,UAAbJ,IACFwD,EAAAA,EAAAA,IACU,QAAAtD,EAAA,kCA5DM,GA8DoB,8FASlC,IAAa,WAAbF,IAGOwD,EAAAA,EAAAA,IAAA,gBAAApD,EAAA,gCA1EO,GA2E0B,wFASxC,IAAa,SAAbJ,IACCwD,EAAAA,EAAAA,IAAA,SACQtD,EAAK,mCAtFA,GAwFqB,+FAOpC,oB","sources":["webpack://@vallista/blog/../../../src/components/Tooltip/index.tsx"],"sourcesContent":["import { css, Theme } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { FC, useEffect, useRef, useState } from 'react'\n\nimport { AvailablePickedColor } from '../../components/ThemeProvider'\nimport { TooltipPosition, TooltipType, TooltipProps } from './type'\nimport { useTooltip } from './useTooltip'\n\nexport const Tooltip: FC<TooltipProps> = (props) => {\n  const { text, position, type, children } = useTooltip(props)\n  const childrenRef = useRef<HTMLDivElement>(null)\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const [isHover, setHover] = useState(false)\n  const [isTransitionEnd, setTransitionEnd] = useState(true)\n\n  useEffect(() => {\n    if (childrenRef.current) {\n      setWidth(childrenRef.current.getBoundingClientRect().width)\n      setHeight(childrenRef.current.getBoundingClientRect().height)\n    }\n  }, [childrenRef])\n\n  return (\n    <Container onMouseOver={() => handleHover(true)} onMouseOut={() => handleHover(false)}>\n      <ChildrenWrapper ref={childrenRef}>{children}</ChildrenWrapper>\n      {(!isTransitionEnd || isHover) && (\n        <Popup\n          onMouseOver={() => handleHover(true)}\n          onMouseOut={() => handleHover(false)}\n          onTransitionEnd={() => setTransitionEnd(true)}\n          isHover={isHover}\n          position={position}\n          type={type}\n          width={width}\n          height={height}\n        >\n          {text}\n        </Popup>\n      )}\n    </Container>\n  )\n\n  function handleHover(flag: boolean): void {\n    setHover(flag)\n    setTransitionEnd(false)\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover {\n    & > div:last-of-type {\n      opacity: 1;\n    }\n  }\n`\n\nconst ChildrenWrapper = styled.div`\n  position: relative;\n`\n\nconst distanceGap = 10\n\nconst tooltipBackgroundMapper: (theme: Theme) => Record<TooltipType, AvailablePickedColor> = (theme) => ({\n  primary: theme.colors.PRIMARY.FOREGROUND,\n  success: theme.colors.SUCCESS.DEFAULT,\n  warning: theme.colors.WARNING.DEFAULT,\n  error: theme.colors.ERROR.DEFAULT,\n  secondary: theme.colors.PRIMARY.ACCENT_5\n})\n\nconst Popup = styled.div<{\n  type: TooltipType\n  isHover: boolean\n  position: TooltipPosition\n  width: number\n  height: number\n}>`\n  cursor: default;\n  max-width: 250px;\n  width: auto;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.2s ease-in;\n  text-align: center;\n\n  & {\n    white-space: pre;\n  }\n\n  ${({ theme, position, width, height, type }) => css`\n    z-index: ${theme.layers.AFTER_STANDARD};\n    color: ${theme.colors.PRIMARY.BACKGROUND};\n    background: ${tooltipBackgroundMapper(theme)[type]};\n    padding: 24px;\n    border-radius: 5px;\n    box-sizing: border-box;\n\n    &::after {\n      content: '';\n      position: absolute;\n      width: 10px;\n      height: 10px;\n      background: ${tooltipBackgroundMapper(theme)[type]};\n    }\n\n    ${position === 'top' &&\n    css`\n      left: 50%;\n      bottom: ${height}px;\n      transform: translate(-50%, -${distanceGap}px);\n\n      &::after {\n        left: 50%;\n        bottom: -5px;\n        transform: translate(-50%, 0) rotate(45deg);\n      }\n    `}\n\n    ${position === 'right' &&\n    css`\n      left: ${width}px;\n      top: 50%;\n      transform: translate(${distanceGap}px, -50%);\n\n      &::after {\n        left: -5px;\n        top: 50%;\n        transform: translate(0, -50%) rotate(45deg);\n      }\n    `}\n\n    ${position === 'bottom' &&\n    css`\n      left: 50%;\n      top: ${height}px;\n      transform: translate(-50%, ${distanceGap}px);\n\n      &::after {\n        left: 50%;\n        top: -5px;\n        transform: translate(-50%, 0) rotate(45deg);\n      }\n    `}\n\n    ${position === 'left' &&\n    css`\n      right: ${width}px;\n      top: 50%;\n      transform: translate(-${distanceGap}px, -50%);\n\n      &::after {\n        right: -5px;\n        top: 50%;\n        transform: translate(0, -50%) rotate(45deg);\n      }\n    `}\n  `}\n`\n"],"names":["k","g","text","I","position","c","type","A","children","G","v","C","t","W","i","Z","m","N","d","a","p","u","Y","current","getBoundingClientRect","width","height","o","J","onMouseOver","l","onMouseOut","B","n","ref","h","onTransitionEnd","isHover","x","X","target","name","styles","H","primary","colors","PRIMARY","FOREGROUND","success","SUCCESS","DEFAULT","warning","WARNING","error","ERROR","secondary","ACCENT_5","_ref","theme","b","layers","AFTER_STANDARD","BACKGROUND"],"sourceRoot":""}