{"version":3,"file":"component---src-template-post-tsx-e7f9ac0903a4904ca48d.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/hooks/useConfig.ts","webpack://@vallista-land/blog/./src/components/Markdown/index.tsx","webpack://@vallista-land/blog/./src/components/PostHeader/index.tsx","webpack://@vallista-land/blog/./src/components/Series/index.tsx","webpack://@vallista-land/blog/./src/template/post.tsx","webpack://@vallista-land/blog/./src/utils/index.ts"],"sourcesContent":["import profile from '../../config/profile.json'\nimport resume from '../../config/resume.json'\n\ninterface ReturningUseConfig {\n  profile: {\n    author: string\n    title: string\n    titleTemplate: string\n    placeholder: string\n    siteUrl: string\n    description: string\n    twitterUserName: string\n    github: string\n    secondary: string\n  }\n  resume: {\n    config: {\n      name: string\n      role: string\n      bio: string[]\n      github: string\n      email: string\n    }\n    careers: {\n      title: string\n      list: {\n        name: string\n        department: string\n        position: string\n        startDate: string\n        endDate: string | null\n        descriptions: string[]\n        fold?: boolean\n        projects?: {\n          name: string\n          descriptions: string[]\n          startDate: string\n          endDate: string | null\n          which: string[]\n        }[]\n      }[]\n    }\n    skills: {\n      title: string\n      list: {\n        title: string\n        descriptions: {\n          title: string\n          subTitle: string[]\n        }[]\n      }[]\n    }\n    hobby: {\n      description: string\n      list: {\n        title: string\n        url: string\n        descriptions: string[]\n      }[]\n    }\n    speaker: {\n      description: string\n      list: {\n        title: string\n        url: string\n      }[]\n    }\n    activities: {\n      description: string | null\n      list: {\n        title: string\n        url: string | null\n      }[]\n    }\n    lectures: {\n      description: string | null\n      list: {\n        title: string\n        url: string | null\n      }[]\n    }\n    awards: {\n      description: string | null\n      list: {\n        title: string\n        url: string | null\n      }[]\n    }\n  }\n}\n\nexport function useConfig(): ReturningUseConfig {\n  return {\n    profile: profile as ReturningUseConfig['profile'],\n    resume: resume as ReturningUseConfig['resume']\n  }\n}\n","import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { useLocation } from '@reach/router'\nimport { useEffect, useMemo, useRef, VFC } from 'react'\n\ninterface MarkdownProps {\n  html: string\n}\n\nexport const Markdown: VFC<MarkdownProps> = (props) => {\n  const location = useLocation()\n  const ref = useRef<HTMLDivElement>(null)\n  const html = useMemo(() => {\n    const result = props.html\n      // pre 태그 (소스코드)에 추가하여 wrapping 하는 div를 추가한다.\n      // 해당 div는 스크롤 처리를 진행한다.\n      .replaceAll('<pre', '<div class=\"markdown-wrapper\"><pre')\n      .replaceAll('</pre>', '</pre></div>')\n\n    return result\n  }, [])\n\n  useEffect(() => {\n    // heading 전부 체크해서 해시에 저장할 수 있는 버튼을 추가한다.\n    // 버튼을 클릭하면 이동되도록 구현.\n    Array.from(ref.current?.getElementsByTagName('*') ?? [])\n      .filter((it) => Number(it.tagName?.[1] ?? '999') < 6)\n      .forEach((it) => {\n        if (it.getElementsByTagName('a').length > 0) return\n\n        const name = it.innerHTML.replaceAll(' ', '-')\n\n        it.innerHTML = `\n          <a href=\"#${name}\" aria-label=\"${name} permalink\">\n            <svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\">\n              <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n              </path>\n            </svg>\n          </a>\n          ${it.innerHTML}\n        `\n        it.id = name\n      })\n\n    // 페이지가 로드되고 나서 선택된 해딩으로 이동한다.\n    window.onload = () => {\n      setTimeout(() => {\n        const hashData = decodeURIComponent(location.hash).substring(1)\n        if (hashData) {\n          window.scrollTo(0, document.getElementById(hashData)?.getBoundingClientRect().bottom ?? 0)\n        }\n      })\n    }\n  }, [])\n\n  return (\n    <div>\n      <Contents ref={ref} dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 900px;\n  padding: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (max-width: 1000px) {\n    padding: 1.5rem;\n  }\n`\n\nconst Contents = styled(Wrapper)`\n  width: calc(100vw - 400px);\n\n  @media screen and (max-width: 1308px) {\n    width: calc(100vw - 408px);\n  }\n\n  @media screen and (max-width: 1000px) {\n    width: calc(100vw - 8px);\n  }\n\n  ${({ theme }) => css`\n    /** image */\n\n    p > img {\n      width: 100%;\n    }\n\n    /* Default Text */\n\n    p {\n      color: ${theme.colors.PRIMARY.ACCENT_8};\n      font-weight: 400;\n      line-height: 1.6;\n      letter-spacing: -0.02rem;\n    }\n\n    p,\n    table,\n    ul,\n    blockquote,\n    ol {\n      font-size: 1rem;\n      margin: 0 0 2rem;\n    }\n\n    center {\n      color: ${theme.colors.PRIMARY.ACCENT_5};\n      font-size: 0.8rem;\n      font-weight: 400;\n      line-height: 1.5;\n      letter-spacing: -0.02rem;\n      margin: 0 0 2rem;\n    }\n\n    p + center,\n    iframe + center {\n      margin-top: -1rem;\n    }\n\n    /* Heading */\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      position: relative;\n      color: ${theme.colors.PRIMARY.FOREGROUND};\n      line-height: 1.2;\n      scroll-margin-top: 60px;\n      letter-spacing: -0.02rem;\n      font-weight: 600;\n      background: none;\n\n      & > a {\n        opacity: 0;\n        border: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transform: translateX(-100%);\n        padding-right: 4px;\n      }\n\n      &:hover > a {\n        background: none;\n        border: none;\n        opacity: 1;\n      }\n    }\n\n    h2:not(:first-of-type),\n    h3:not(:first-of-type),\n    h4:not(:first-of-type) {\n      margin-top: 3rem;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      margin: 0 0 1.25rem;\n    }\n\n    h1,\n    h2 {\n      font-size: 1.8rem;\n      filter: brightness(1);\n    }\n\n    h3 {\n      font-size: 1.4rem;\n      filter: brightness(1.3);\n    }\n\n    h4 {\n      filter: brightness(1.5);\n      font-size: 1.1rem;\n      padding-bottom: 0.25rem;\n      text-transform: uppercase;\n    }\n\n    /* ul, li */\n\n    ul,\n    ol {\n      padding-left: 1.5rem;\n      box-sizing: border-box;\n      line-height: 1.6;\n\n      & ul,\n      & ol {\n        margin-bottom: 0;\n      }\n    }\n\n    ul {\n      list-style: disc;\n    }\n\n    ol {\n      list-style: decimal;\n    }\n\n    ul li {\n      margin-bottom: 0.5rem;\n\n      &::marker {\n        font-weight: 600;\n        color: ${theme.colors.HIGHLIGHT.PINK};\n      }\n    }\n\n    ol li {\n      margin-bottom: 0.5rem;\n\n      &::marker {\n        font-weight: 600;\n        color: ${theme.colors.HIGHLIGHT.PINK};\n      }\n    }\n\n    li > a {\n      white-space: inherit;\n      word-wrap: break-word;\n    }\n\n    li {\n      color: ${theme.colors.PRIMARY.FOREGROUND};\n    }\n\n    /* iframe */\n\n    iframe {\n      margin-bottom: 2rem;\n    }\n\n    /* Code */\n    div[class*='markdown-wrapper'] {\n      font-size: 0.9rem;\n      text-size-adjust: none;\n      margin: 1.5rem -1.5rem;\n      overflow-x: auto;\n      overflow-y: hidden;\n      box-sizing: border-box;\n      background-color: var(--scrollbar-background);\n      padding-left: 2rem;\n\n      /** 파이어폭스 스크롤 대응 */\n      scrollbar-width: 8px;\n      // thumb background 순\n      scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-background);\n\n      /** 사파리, 크롬 스크롤 대응 */\n      &::-webkit-scrollbar {\n        background: var(--scrollbar-background);\n        height: 8px;\n        width: 8px;\n      }\n\n      &::-webkit-scrollbar-thumb {\n        background: var(--scrollbar-thumb);\n        border-radius: 0;\n      }\n\n      @media screen and (min-width: 1350px) {\n        margin-left: -3.5rem;\n        margin-right: -3.5rem;\n        margin-bottom: 2rem;\n      }\n\n      @media screen and (max-width: 1000px) {\n        padding-left: 1.5rem;\n      }\n    }\n\n    pre {\n      border-radius: 0;\n      float: left;\n      margin-bottom: 0;\n      margin-top: 0;\n      min-width: calc(100% + 1rem);\n      padding: 1rem 1rem 1rem 0;\n      -webkit-font-smoothing: subpixel-antialiased;\n      overflow: initial;\n      white-space: pre;\n      font-family: var(--code-font-family);\n      word-wrap: normal;\n      hyphens: none;\n      line-height: 1.5;\n      tab-size: 2;\n      word-break: normal;\n      word-spacing: normal;\n\n      & > code {\n        font-weight: 600;\n        color: ${theme.colors.HIGHLIGHT.PINK};\n        white-space: inherit;\n\n        & * span {\n          white-space: inherit;\n        }\n\n        & * span:not([class='grvsc-source']) {\n          padding-left: 0 !important;\n        }\n      }\n    }\n\n    p > code {\n      font-weight: 600;\n      color: ${theme.colors.HIGHLIGHT.PINK};\n      white-space: inherit;\n\n      & * span {\n        white-space: inherit;\n      }\n\n      & * span:not([class='grvsc-source']) {\n        padding-left: 0 !important;\n      }\n    }\n\n    img[class='gatsby-resp-image-image'] {\n      box-shadow: none !important;\n    }\n\n    img[class='gatsby-resp-image-image'][alt]:after {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${theme.colors.PRIMARY.BACKGROUND};\n      font-weight: 200;\n      content: '이미지를 표시할 수 없어요. :(';\n    }\n\n    blockquote {\n      background: ${theme.colors.PRIMARY.ACCENT_2};\n      margin: 0 -1.5rem;\n      margin-bottom: 2rem;\n      padding: 1rem 1.5rem;\n      border-left: 6px solid ${theme.colors.HIGHLIGHT.PINK};\n\n      & > p {\n        margin-bottom: 0;\n      }\n\n      @media screen and (min-width: 1350px) {\n        margin-left: -3.5rem;\n        margin-right: -3.5rem;\n      }\n\n      @media screen and (max-width: 1000px) {\n        padding-left: 1.5rem;\n      }\n    }\n  `}\n`\n","import styled from '@emotion/styled'\nimport { Text, Badge, Container, Spacer } from '@vallista-land/core'\nimport { Link } from 'gatsby'\nimport { FC } from 'react'\n\nimport { getTime } from '../../utils'\n\ninterface PostHeaderProps {\n  title: string\n  tags?: string[]\n  image?: string\n  date: string\n  author: string\n  timeToRead: number\n}\n\nexport const PostHeader: FC<PostHeaderProps> = (props) => {\n  const { title, tags, date, author, timeToRead, children } = props\n  const [year, month, day] = getTime(date)\n  const dateToString = `${year}년 ${month}월 ${day}일`\n\n  return (\n    <Header>\n      <Wrapper>\n        <Text as='h1' size={40} weight={800}>\n          {title}\n        </Text>\n        <Spacer y={1} />\n        {tags && (\n          <Container row>\n            {tags.map((it) => (\n              <Badge key={it} size='large'>\n                {it}\n              </Badge>\n            ))}\n          </Container>\n        )}\n        <Spacer y={1} />\n        <Text size={16}>\n          {dateToString}에 <Link to='/'>{author}</Link>가 작성했어요.\n        </Text>\n        <Spacer y={0.5} />\n        <Text size={16}>읽는데 약 {timeToRead}분 걸려요!</Text>\n        <Spacer y={1} />\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </Wrapper>\n    </Header>\n  )\n}\n\nconst Header = styled.header`\n  text-align: center;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  max-width: 900px;\n  padding: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst ChildrenWrapper = styled.div`\n  width: 100%;\n`\n","import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Collapse, Container } from '@vallista-land/core'\nimport { navigate } from 'gatsby'\nimport { VFC } from 'react'\n\ninterface SeriesProps {\n  name: string\n  posts: {\n    name: string\n    timeToRead: number\n    slug: string\n  }[]\n}\n\nexport const Series: VFC<SeriesProps> = (props) => {\n  const { name, posts } = props\n\n  return (\n    <Collapse title={name} card size='medium' subtitle='시리즈의 다른 글도 읽어보세요!'>\n      <Container>\n        <List>\n          {posts.map((it) => (\n            <Item timeToRead={it.timeToRead} key={it.name}>\n              <span onClick={() => moveToLocation(it.slug)}>{it.name}</span>\n            </Item>\n          ))}\n        </List>\n      </Container>\n    </Collapse>\n  )\n\n  function moveToLocation(slug: string): void {\n    navigate(slug)\n  }\n}\n\nconst List = styled.ol`\n  padding-left: 1.5rem;\n  box-sizing: border-box;\n  line-height: 1.6;\n  list-style: decimal;\n`\n\nconst Item = styled.li<{ timeToRead: number }>`\n  ${({ theme, timeToRead }) => css`\n    margin-bottom: 0.5rem;\n    &::marker {\n      font-weight: 600;\n      color: ${theme.colors.HIGHLIGHT.PINK};\n    }\n\n    &::after {\n      content: '- ${timeToRead}분';\n      margin-left: 0.2rem;\n      font-size: 0.8rem;\n    }\n\n    & > span {\n      cursor: pointer;\n      border-bottom: 2px solid ${theme.colors.HIGHLIGHT.PINK};\n      font-weight: 600;\n      text-decoration: none;\n      color: ${theme.colors.PRIMARY.FOREGROUND};\n      transition: all 0.1s ease-out;\n\n      &:hover {\n        background: ${theme.colors.HIGHLIGHT.PINK};\n        border-top: 2px solid ${theme.colors.HIGHLIGHT.PINK};\n        color: ${theme.colors.PRIMARY.BACKGROUND};\n      }\n    }\n  `}\n`\n","import { graphql } from 'gatsby'\nimport { useCallback, VFC } from 'react'\nimport { PageProps, PostQuery } from 'types/type'\n\nimport { Markdown } from '../components/Markdown'\nimport { PostHeader } from '../components/PostHeader'\nimport { Series } from '../components/Series'\nimport { useConfig } from '../hooks/useConfig'\n\nconst Post: VFC<PageProps<PostQuery>> = (props) => {\n  const { profile } = useConfig()\n  const { allMarkdownRemark } = props.data\n  const { nodes, group: seriesGroup } = allMarkdownRemark\n  const { timeToRead, html } = props.data.markdownRemark\n  const { title, date, image, tags, series } = props.data.markdownRemark.frontmatter\n\n  const cachedFilterSeries = useCallback(getFilteredSeries, [props.data])\n\n  return (\n    <div>\n      <PostHeader\n        title={title}\n        date={date}\n        image={image?.publicURL}\n        tags={tags}\n        timeToRead={timeToRead}\n        author={profile.author}\n      >\n        {series && seriesGroup && <Series name={series} posts={cachedFilterSeries()} />}\n      </PostHeader>\n      <Markdown html={html} />\n      <section id='comments'></section>\n    </div>\n  )\n\n  function getFilteredSeries(): { name: string; timeToRead: number; slug: string }[] {\n    return nodes\n      .filter((it) => it.frontmatter.series)\n      .filter((it) => it.frontmatter.series === series)\n      .map((it) => ({ name: it.frontmatter.title, timeToRead: it.timeToRead, slug: it.fields.slug }))\n  }\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!) {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          title\n          series\n        }\n      }\n      group(field: frontmatter___series) {\n        fieldValue\n        totalCount\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n        slug\n      }\n      timeToRead\n      frontmatter {\n        title\n        tags\n        date\n        image {\n          publicURL\n        }\n        series\n      }\n    }\n  }\n`\n","// eslint-disable-next-line no-useless-escape\nexport const SPLIT_DATE_FORMAT = /[\\-\\+ :T]/\n\nexport function translateDate(time: string): number[] {\n  return time.split(SPLIT_DATE_FORMAT).map((it) => Number(it.includes('.') ? it.split('.')[0] : it))\n}\n\nexport function toDate(time: string): Date {\n  const result = translateDate(time)\n  return new Date(result[0], result[1] - 1, result[2], result[3], result[4], result[5])\n}\n\nexport function getTime(date: string): [string, string, string] {\n  const translate = date.split(SPLIT_DATE_FORMAT)\n  return [translate[0] || '0', translate[1] || '0', translate[2] || '0']\n}\n"],"names":["useConfig","profile","resume","Markdown","props","location","useLocation","ref","useRef","html","useMemo","replaceAll","useEffect","Array","from","current","getElementsByTagName","filter","it","Number","tagName","forEach","length","name","innerHTML","id","window","onload","setTimeout","hashData","decodeURIComponent","hash","substring","scrollTo","document","getElementById","getBoundingClientRect","bottom","Contents","dangerouslySetInnerHTML","__html","Wrapper","theme","css","colors","PRIMARY","ACCENT_8","ACCENT_5","FOREGROUND","HIGHLIGHT","PINK","BACKGROUND","ACCENT_2","PostHeader","title","tags","date","author","timeToRead","children","getTime","dateToString","Header","as","size","weight","y","row","map","Link","to","ChildrenWrapper","Series","posts","card","subtitle","List","Item","onClick","slug","navigate","allMarkdownRemark","data","nodes","seriesGroup","group","markdownRemark","frontmatter","image","series","cachedFilterSeries","useCallback","fields","publicURL","SPLIT_DATE_FORMAT","toDate","time","result","split","includes","translateDate","Date","translate"],"sourceRoot":""}