{"version":3,"file":"99be3751-cadcc2c6ab2215befa9d.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/pages/me.tsx"],"sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { Button, Container, Spacer, Text } from '@vallista-land/core'\r\nimport { graphql } from 'gatsby'\r\nimport { VFC } from 'react'\r\n\r\nimport { Layout } from '../components/Layout'\r\nimport { useConfig } from '../hooks/useConfig'\r\nimport { IndexQuery, PageProps } from '../types/type'\r\n\r\nconst MePage: VFC<PageProps<IndexQuery>> = (props) => {\r\n  const { resume } = useConfig()\r\n  const { data } = props\r\n  const { edges } = data.allMarkdownRemark\r\n\r\n  return (\r\n    <Layout edges={edges}>\r\n      <Container>\r\n        <Header>\r\n          <Wrapper>\r\n            <Container>\r\n              <Title>\r\n                <Container>\r\n                  <Text as='h2' size={48} weight={800}>\r\n                    {resume.config.name}\r\n                  </Text>\r\n                  <Text as='h2' size={32} weight={800}>\r\n                    {resume.config.role}\r\n                  </Text>\r\n                </Container>\r\n              </Title>\r\n              <Spacer y={1} />\r\n              <SubTitle>\r\n                {resume.config.bio.map((it) => (\r\n                  <Text as='p' size={20} weight={400} lineHeight={40} key={it}>\r\n                    <span dangerouslySetInnerHTML={{ __html: it }} />\r\n                  </Text>\r\n                ))}\r\n                <Container>\r\n                  <Spacer y={1.5} />\r\n                </Container>\r\n                <Container row>\r\n                  <Button size='large' width={200} onClick={() => openNewPage(resume.config.github)}>\r\n                    <Container row center>\r\n                      <svg\r\n                        viewBox='0 0 24 24'\r\n                        width='30'\r\n                        height='30'\r\n                        stroke='currentColor'\r\n                        strokeWidth='1.5'\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        fill='none'\r\n                        shapeRendering='geometricPrecision'\r\n                      >\r\n                        <path d='M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22' />\r\n                      </svg>\r\n                      <Spacer x={0.3} />\r\n                      <Text size={16} weight={600}>\r\n                        GitHub 방문하기\r\n                      </Text>\r\n                    </Container>\r\n                  </Button>\r\n                  <Button size='large' width={220} onClick={() => openNewPage(resume.config.github)}>\r\n                    <Container row center>\r\n                      <svg\r\n                        viewBox='0 0 24 24'\r\n                        width='30'\r\n                        height='30'\r\n                        stroke='currentColor'\r\n                        strokeWidth='1.5'\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        fill='none'\r\n                        shapeRendering='geometricPrecision'\r\n                      >\r\n                        <path d='M10 13a5 5 0 007.54.54l3-3a5 5 0 00-7.07-7.07l-1.72 1.71' />\r\n                        <path d='M14 11a5 5 0 00-7.54-.54l-3 3a5 5 0 007.07 7.07l1.71-1.71' />\r\n                      </svg>\r\n                      <Spacer x={0.3} />\r\n                      <Text size={16} weight={600}>\r\n                        이전 블로그 방문하기\r\n                      </Text>\r\n                    </Container>\r\n                  </Button>\r\n                </Container>\r\n              </SubTitle>\r\n            </Container>\r\n          </Wrapper>\r\n        </Header>\r\n        <Spacer />\r\n        <Box id='career'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.careers.title}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              {resume.careers.list.map((it) => (\r\n                <TwoColumn key={it.name}>\r\n                  <Container>\r\n                    <div>\r\n                      <Text as='h3' size={24} weight={500}>\r\n                        {it.name}\r\n                      </Text>\r\n                      <Spacer y={1} />\r\n                      <Text as='span' size={16}>\r\n                        {it.startDate} ~ {it.endDate}\r\n                      </Text>\r\n                      <Text as='span' size={16}>\r\n                        {it.position}\r\n                      </Text>\r\n                      <Text as='span' size={16}>\r\n                        {it.department}\r\n                      </Text>\r\n                      <Spacer y={1} />\r\n                      <div>\r\n                        {it.descriptions.map((it_, idx) => (\r\n                          <Text key={idx}>{it_}</Text>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </Container>\r\n                  <Container>\r\n                    <div>\r\n                      {it.projects?.map((it_, idx) => (\r\n                        <Container key={idx}>\r\n                          <Text size={24} weight={600} as='h3'>\r\n                            {it_.name}\r\n                          </Text>\r\n                          <Spacer y={1} />\r\n                          <Text size={16}>\r\n                            {it_.startDate} ~ {it_.endDate}\r\n                          </Text>\r\n                          {it_.descriptions.map((it__, idx) => (\r\n                            <Text size={16} key={idx}>\r\n                              {it__}\r\n                            </Text>\r\n                          ))}\r\n                          <Spacer y={1} />\r\n                          <ul>\r\n                            {it_.which.map((it__, idx) => (\r\n                              <li key={idx}>\r\n                                <Text size={14}>{it__}</Text>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                          <Spacer y={2} />\r\n                        </Container>\r\n                      ))}\r\n                    </div>\r\n                  </Container>\r\n                </TwoColumn>\r\n              ))}\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='skills'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.skills.title}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              {resume.skills.list.map((it, idx) => (\r\n                <Container key={idx}>\r\n                  <Text as='h3' size={24} weight={600}>\r\n                    {it.title}\r\n                  </Text>\r\n                  <div>\r\n                    {it.descriptions?.map((it_, idx) => (\r\n                      <ul key={idx}>\r\n                        <li>\r\n                          <Container>\r\n                            <Text size={16}>{it_.title}</Text>\r\n                            <SubTitleText>\r\n                              {it_.subTitle.map((it__, idx) => (\r\n                                <Text size={14} key={idx}>\r\n                                  {it__}\r\n                                </Text>\r\n                              ))}\r\n                            </SubTitleText>\r\n                          </Container>\r\n                        </li>\r\n                      </ul>\r\n                    ))}\r\n                  </div>\r\n                  <Spacer y={1} />\r\n                </Container>\r\n              ))}\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='hobby'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.hobby.description}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              {resume.hobby.list.map((it, idx) => (\r\n                <Container key={idx}>\r\n                  <Text as='h3' size={24} weight={600}>\r\n                    {it.title}\r\n                  </Text>\r\n                  <div>\r\n                    {it.descriptions?.map((it_, idx) => (\r\n                      <ul key={idx}>\r\n                        <li>\r\n                          <Container>\r\n                            <Text size={16}>{it_}</Text>\r\n                          </Container>\r\n                        </li>\r\n                      </ul>\r\n                    ))}\r\n                  </div>\r\n                  <Spacer y={1} />\r\n                </Container>\r\n              ))}\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='speaker'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.speaker.description}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              <ul>\r\n                {resume.speaker.list.map((it, idx) => (\r\n                  <li key={idx}>\r\n                    <Text size={16}>\r\n                      <a onClick={() => openNewPage(it.url)}>{it.title}</a>\r\n                    </Text>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='activities'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.activities.description}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              <ul>\r\n                {resume.activities.list.map((it, idx) =>\r\n                  it.url !== null ? (\r\n                    <li key={idx}>\r\n                      <Text size={16}>\r\n                        <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\r\n                      </Text>\r\n                    </li>\r\n                  ) : (\r\n                    <li key={idx}>\r\n                      <Text size={16}>{it.title}</Text>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='lectures'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.lectures.description}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              <ul>\r\n                {resume.lectures.list.map((it, idx) =>\r\n                  it.url !== null ? (\r\n                    <li key={idx}>\r\n                      <Text size={16}>\r\n                        <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\r\n                      </Text>\r\n                    </li>\r\n                  ) : (\r\n                    <li key={idx}>\r\n                      <Text size={16}>{it.title}</Text>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n        <Box id='awards'>\r\n          <Contents>\r\n            <Container>\r\n              <Text size={40} weight={800}>\r\n                {resume.awards.description}\r\n              </Text>\r\n              <Spacer y={1.5} />\r\n              <ul>\r\n                {resume.awards.list.map((it, idx) =>\r\n                  it.url !== null ? (\r\n                    <li key={idx}>\r\n                      <Text size={16}>\r\n                        <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\r\n                      </Text>\r\n                    </li>\r\n                  ) : (\r\n                    <li key={idx}>\r\n                      <Text size={16}>{it.title}</Text>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </Container>\r\n          </Contents>\r\n        </Box>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n\r\n  function openNewPage(target: string): void {\r\n    window.open(target, '_blink')\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 900px;\r\n  padding: 2rem;\r\n`\r\n\r\nconst Box = styled.div``\r\n\r\nconst Header = styled.header`\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst Title = styled.div`\r\n  max-width: 550px;\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  max-width: 550px;\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    & > div:last-of-type {\r\n      flex-direction: column !important;\r\n\r\n      & > * {\r\n        margin-left: 0;\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Contents = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 900px;\r\n  padding: 2rem;\r\n\r\n  ul {\r\n    list-style: disc;\r\n    padding-left: 1.2rem;\r\n  }\r\n\r\n  li {\r\n    margin-bottom: 0.5rem;\r\n    padding: 0.2rem 0;\r\n    line-height: 1.4;\r\n\r\n    &::marker {\r\n      ${({ theme }) => css`\r\n        color: ${theme.colors.HIGHLIGHT.PINK};\r\n      `}\r\n    }\r\n  }\r\n`\r\n\r\nconst TwoColumn = styled.div`\r\n  display: flex;\r\n  margin-bottom: 2rem;\r\n\r\n  & > div:first-of-type {\r\n    height: auto;\r\n    box-sizing: border-box;\r\n    flex: 3;\r\n    padding-right: 2rem;\r\n\r\n    & > div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0;\r\n      position: sticky;\r\n      top: 85px;\r\n\r\n      & > div:last-of-type {\r\n        ${({ theme }) => css`\r\n          color: ${theme.colors.PRIMARY.ACCENT_5};\r\n\r\n          & > p {\r\n            margin-bottom: 0.5rem !important;\r\n          }\r\n        `}\r\n      }\r\n    }\r\n  }\r\n\r\n  & > div:last-of-type {\r\n    flex: 7;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    flex-direction: column;\r\n\r\n    & > div:last-of-type {\r\n      padding-left: 1rem;\r\n\r\n      ${({ theme }) => css`\r\n        border-left: 3px solid ${theme.colors.HIGHLIGHT.PINK};\r\n      `}\r\n    }\r\n  }\r\n`\r\n\r\nconst SubTitleText = styled.div`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.PRIMARY.ACCENT_5};\r\n  `}\r\n`\r\n\r\nexport default MePage\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogMeQuery {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { draft: { eq: false } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            image {\r\n              relativePath\r\n              relativeDirectory\r\n              root\r\n              sourceInstanceName\r\n              publicURL\r\n            }\r\n          }\r\n          html\r\n        }\r\n      }\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Wrapper","Box","Header","Title","SubTitle","Contents","theme","css","colors","HIGHLIGHT","PINK","TwoColumn","PRIMARY","ACCENT_5","SubTitleText","props","resume","useConfig","edges","data","allMarkdownRemark","as","size","weight","config","name","role","y","bio","map","it","lineHeight","dangerouslySetInnerHTML","__html","row","width","onClick","openNewPage","github","center","viewBox","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","id","careers","title","list","startDate","endDate","position","department","descriptions","it_","idx","projects","it__","which","skills","subTitle","hobby","description","speaker","url","activities","lectures","awards","target","window","open"],"sourceRoot":""}