{"version":3,"file":"464eac91-8627d52b3184ced6f6a4.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/components/Sidebar/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { useLocation } from '@reach/router'\r\nimport { Colors, Container, Text } from '@vallista-land/core'\r\nimport { navigate } from 'gatsby'\r\nimport { useEffect, useMemo, useRef, useState, VFC } from 'react'\r\n\r\nimport { SidebarPost } from '../../types/type'\r\n\r\ninterface SidebarProps {\r\n  posts: SidebarPost[]\r\n  fold: boolean\r\n}\r\n\r\nexport const Sidebar: VFC<SidebarProps> = (props) => {\r\n  const { posts, fold } = props\r\n  const location = useLocation()\r\n  const [search, setSearch] = useState('')\r\n  const [viewType, setViewType] = useState<'list' | 'card'>('list')\r\n  const ref = useRef<HTMLDivElement>(null)\r\n  const [hasVerticalScrollbar, setHasVerticalScrollbar] = useState(false)\r\n\r\n  const hasSearchText = search.length > 0\r\n  const filteredPosts = useMemo(() => posts.filter((it) => it.name.includes(search)), [search, posts])\r\n\r\n  useEffect(() => {\r\n    setSearch(window.localStorage.getItem('search') || '')\r\n    setViewType((window.localStorage.getItem('viewType') as 'list' | 'card' | undefined) || 'list')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setHasVerticalScrollbar((ref.current?.scrollHeight ?? 0) > (ref.current?.clientHeight ?? 0))\r\n  }, [search, posts, viewType])\r\n\r\n  const List = useMemo(() => (viewType === 'card' ? CardStyle : ListStyle), [viewType])\r\n  const ListItem = useMemo(() => (viewType === 'card' ? CardStyleItem : ListStyleItem), [viewType])\r\n\r\n  return (\r\n    <SidebarContainer ref={ref} hasVerticalScrollbar={hasVerticalScrollbar} fold={fold}>\r\n      <Header>\r\n        <Title>\r\n          <Text>\r\n            글{' '}\r\n            <Text as='span' color={Colors.PRIMARY.ACCENT_4}>\r\n              ({posts.length} 개)\r\n            </Text>\r\n          </Text>\r\n          <Button onClick={handleChangeViewType}>\r\n            {viewType === 'card' ? (\r\n              <svg\r\n                viewBox='0 0 24 24'\r\n                width='20'\r\n                height='20'\r\n                stroke='currentColor'\r\n                strokeWidth='1.5'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                fill='none'\r\n                shapeRendering='geometricPrecision'\r\n              >\r\n                <path d='M21 10H3' />\r\n                <path d='M21 6H3' />\r\n                <path d='M21 14H3' />\r\n                <path d='M21 18H3' />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                viewBox='0 0 24 24'\r\n                width='20'\r\n                height='20'\r\n                stroke='currentColor'\r\n                strokeWidth='1.5'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                fill='none'\r\n                shapeRendering='geometricPrecision'\r\n              >\r\n                <rect x='1' y='4' width='20' height='16' rx='2' ry='2' />\r\n                <path d='M1 10h20' />\r\n              </svg>\r\n            )}\r\n          </Button>\r\n        </Title>\r\n        <SearchBox>\r\n          <Search hasSearchText={hasSearchText}>\r\n            <Input value={search} onChange={(e) => handleInput(e.currentTarget.value)} />\r\n            <svg\r\n              viewBox='0 0 24 24'\r\n              width='15'\r\n              height='15'\r\n              stroke='currentColor'\r\n              strokeWidth='1.5'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              fill='none'\r\n              shapeRendering='geometricPrecision'\r\n            >\r\n              <path d='M11 17.25a6.25 6.25 0 110-12.5 6.25 6.25 0 010 12.5z' />\r\n              <path d='M16 16l4.5 4.5' />\r\n            </svg>\r\n            <svg\r\n              onClick={searchClear}\r\n              viewBox='0 0 24 24'\r\n              width='15'\r\n              height='15'\r\n              stroke='currentColor'\r\n              strokeWidth='1.5'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              fill='none'\r\n              shapeRendering='geometricPrecision'\r\n            >\r\n              <path d='M21 4H8l-7 8 7 8h13a2 2 0 002-2V6a2 2 0 00-2-2z' />\r\n              <path d='M18 9l-6 6' />\r\n              <path d='M12 9l6 6' />\r\n            </svg>\r\n          </Search>\r\n        </SearchBox>\r\n      </Header>\r\n      <Categories>\r\n        <Container>\r\n          <List>\r\n            {filteredPosts.map((it) => (\r\n              <ListItem\r\n                key={it.name}\r\n                onClick={() => moveToLocation(it.slug)}\r\n                image={it.image}\r\n                text={it.name}\r\n                isActive={isActive(it.slug)}\r\n              >\r\n                <div>\r\n                  {viewType === 'list' && (\r\n                    <svg\r\n                      viewBox='0 0 24 24'\r\n                      width='20'\r\n                      height='20'\r\n                      stroke='currentColor'\r\n                      strokeWidth='1.5'\r\n                      strokeLinecap='round'\r\n                      strokeLinejoin='round'\r\n                      fill='none'\r\n                      shapeRendering='geometricPrecision'\r\n                    >\r\n                      <path d='M13 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V9z' />\r\n                      <path d='M13 2v7h7' />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                {viewType === 'list' && <Text>{it.name}</Text>}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Container>\r\n      </Categories>\r\n    </SidebarContainer>\r\n  )\r\n\r\n  function moveToLocation(target: string): void {\r\n    navigate(`${target.slice(0, -1)}`)\r\n  }\r\n\r\n  function handleInput(target: string): void {\r\n    setSearch(target)\r\n    window.localStorage.setItem('search', target)\r\n  }\r\n\r\n  function searchClear(): void {\r\n    setSearch('')\r\n    window.localStorage.setItem('search', '')\r\n  }\r\n\r\n  function handleChangeViewType(): void {\r\n    const type = viewType === 'card' ? 'list' : 'card'\r\n    window.localStorage.setItem('viewType', type)\r\n    setViewType(type)\r\n  }\r\n\r\n  function isActive(target: string): boolean {\r\n    return decodeURIComponent(location.pathname) === target.slice(0, -1)\r\n  }\r\n}\r\n\r\nconst SidebarContainer = styled.aside<{ hasVerticalScrollbar: boolean; fold: boolean }>`\r\n  position: fixed;\r\n  width: 320px;\r\n  height: 100vh;\r\n  top: 0;\r\n  left: 80px;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n\r\n  ${({ theme, hasVerticalScrollbar, fold }) => css`\r\n    z-index: ${theme.layers.AFTER_STANDARD - 1};\r\n    background: ${theme.colors.PRIMARY.ACCENT_1};\r\n    box-shadow: ${theme.shadows.SMALL};\r\n\r\n    ${hasVerticalScrollbar &&\r\n    css`\r\n      &:hover > div:last-of-type {\r\n        margin-right: -8px;\r\n      }\r\n    `}\r\n\r\n    ${fold &&\r\n    css`\r\n      left: -320px;\r\n    `}\r\n  `}\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    left: -320px;\r\n  }\r\n\r\n  &:hover {\r\n    overflow-y: auto;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    background: var(--scrollbar-background);\r\n    height: 8px;\r\n    width: 8px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: var(--scrollbar-thumb);\r\n    border-radius: 0;\r\n  }\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 320px;\r\n  ${({ theme }) => css`\r\n    z-index: ${theme.layers.AFTER_STANDARD - 2};\r\n    background: ${theme.colors.PRIMARY.ACCENT_1};\r\n  `}\r\n`\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.PRIMARY.ACCENT_4};\r\n    &:hover {\r\n      color: ${theme.colors.PRIMARY.FOREGROUND};\r\n    }\r\n  `}\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  height: 35px;\r\n  font-weight: 600;\r\n  font-size: 0.85rem;\r\n  padding: 0 1.7rem;\r\n`\r\n\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  height: 38px;\r\n  padding: 0 1.5rem;\r\n`\r\n\r\nconst Search = styled.label<{ hasSearchText: boolean }>`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30px;\r\n  border-radius: 15px;\r\n  ${({ theme }) => css`\r\n    background: ${theme.colors.PRIMARY.ACCENT_2};\r\n  `}\r\n\r\n  & > svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  ${({ theme, hasSearchText }) => css`\r\n    border: 1px solid transparent;\r\n    transition: border 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n\r\n    &:focus-within {\r\n      border: 1px solid ${theme.colors.PRIMARY.ACCENT_3};\r\n    }\r\n\r\n    & > svg:first-of-type {\r\n      left: 12px;\r\n      color: ${theme.colors.PRIMARY.ACCENT_4};\r\n    }\r\n\r\n    & > svg:last-of-type {\r\n      cursor: pointer;\r\n      opacity: ${hasSearchText ? 1 : 0};\r\n      right: 12px;\r\n      color: ${theme.colors.ERROR.DARK};\r\n    }\r\n  `}\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: calc(100% - 85px);\r\n  position: relative;\r\n  left: 40px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n\r\n  :focus {\r\n    background: none;\r\n  }\r\n`\r\n\r\nconst Categories = styled.div`\r\n  margin-top: 73px;\r\n  padding: 1rem 1.5rem 2rem;\r\n`\r\n\r\nconst CardStyle = styled.nav`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst CardStyleItem = styled.a<{ image: string | null; text: string; isActive: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  width: 130px;\r\n  height: 130px;\r\n  margin-bottom: 12px;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transform: scale(1, 1);\r\n  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n\r\n  ${({ theme, image, text, isActive }) => css`\r\n    background-image: url(${image});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    box-shadow: ${theme.shadows.SMALL};\r\n    color: ${theme.colors.PRIMARY.BACKGROUND};\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: inherit;\r\n      height: inherit;\r\n      background: ${isActive ? theme.colors.HIGHLIGHT.PINK : theme.colors.PRIMARY.FOREGROUND};\r\n      opacity: ${isActive ? 0.5 : 0.3};\r\n    }\r\n\r\n    &::after {\r\n      content: '${text}';\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      font-size: 1rem;\r\n      font-weight: 600;\r\n      line-height: 1.1;\r\n      color: ${theme.colors.PRIMARY.BACKGROUND};\r\n      text-align: right;\r\n      margin: 6px 6px 12px;\r\n      word-break: normal;\r\n      word-spacing: normal;\r\n      letter-spacing: -0.02rem;\r\n    }\r\n  `}\r\n\r\n  &:hover {\r\n    transform: scale(1.1, 1.1);\r\n  }\r\n`\r\n\r\nconst ListStyle = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ListStyleItem = styled.a<{ isActive: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 6px 12px;\r\n  margin: 0 -12px;\r\n  border-radius: 6px;\r\n  transition: border 0.2s ease;\r\n\r\n  ${({ theme, isActive }) => css`\r\n    ${isActive &&\r\n    css`\r\n      border-left: 6px solid ${theme.colors.HIGHLIGHT.PINK};\r\n      padding-left: 12px;\r\n    `};\r\n\r\n    & > div {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-right: 6px;\r\n      color: ${theme.colors.PRIMARY.ACCENT_4};\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.PRIMARY.ACCENT_2};\r\n    }\r\n\r\n    /* &::before {\r\n      content: '';\r\n      transform: translateY(-50%);\r\n      \r\n      font-size: 1rem;\r\n    } */\r\n  `}\r\n\r\n  & > svg {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`\r\n"],"names":["Sidebar","props","posts","fold","location","useLocation","useState","search","setSearch","viewType","setViewType","ref","useRef","hasVerticalScrollbar","setHasVerticalScrollbar","hasSearchText","length","filteredPosts","useMemo","filter","it","name","includes","useEffect","window","localStorage","getItem","current","scrollHeight","clientHeight","List","CardStyle","ListStyle","ListItem","CardStyleItem","ListStyleItem","SidebarContainer","Header","Title","as","color","Colors","Button","onClick","type","setItem","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","y","rx","ry","SearchBox","Search","Input","value","onChange","e","target","currentTarget","Categories","map","slug","navigate","slice","image","text","isActive","decodeURIComponent","pathname","theme","css","layers","AFTER_STANDARD","colors","PRIMARY","ACCENT_1","shadows","SMALL","ACCENT_4","FOREGROUND","ACCENT_2","ACCENT_3","ERROR","DARK","BACKGROUND","HIGHLIGHT","PINK"],"sourceRoot":""}