{"version":3,"file":"464eac91-76905a59b09153729a50.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/components/Sidebar/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { useLocation } from '@reach/router'\r\nimport { Colors, Container, Text, SearchInput } from '@vallista-land/core'\r\nimport { navigate } from 'gatsby'\r\nimport { useEffect, useMemo, useRef, useState, VFC } from 'react'\r\n\r\nimport { SidebarPost } from '../../types/type'\r\nimport { localStorage } from '../../utils'\r\n\r\ninterface SidebarProps {\r\n  posts: SidebarPost[]\r\n  fold: boolean\r\n}\r\n\r\nexport const Sidebar: VFC<SidebarProps> = (props) => {\r\n  const location = useLocation()\r\n  const { posts, fold } = props\r\n  const [search, setSearch] = useState(() => {\r\n    if (typeof window === 'undefined') return ''\r\n\r\n    return localStorage.get('search') || ''\r\n  })\r\n  const [viewType, setViewType] = useState<'list' | 'card'>(() => {\r\n    if (typeof window === 'undefined') return 'card'\r\n    return (localStorage.get('view-type') as 'list' | 'card') || 'card'\r\n  })\r\n  const ref = useRef<HTMLDivElement>(null)\r\n  const [hasVerticalScrollbar, setHasVerticalScrollbar] = useState(false)\r\n\r\n  const filteredPosts = useMemo(\r\n    () => posts.filter((it) => it.name.toLocaleUpperCase().includes(search.toLocaleUpperCase())),\r\n    [search, posts]\r\n  )\r\n\r\n  useEffect(() => {\r\n    setHasVerticalScrollbar((ref.current?.scrollHeight ?? 0) > (ref.current?.clientHeight ?? 0))\r\n  }, [search, posts, viewType])\r\n\r\n  const List = useMemo(() => (viewType === 'card' ? CardStyle : ListStyle), [viewType])\r\n  const ListItem = useMemo(() => (viewType === 'card' ? CardStyleItem : ListStyleItem), [viewType])\r\n\r\n  return (\r\n    <aside>\r\n      <Header hasVerticalScrollbar={hasVerticalScrollbar} fold={fold}>\r\n        <Title>\r\n          <Text>\r\n            글{' '}\r\n            <Text as='span' color={Colors.PRIMARY.ACCENT_4}>\r\n              ({posts.length})\r\n            </Text>\r\n          </Text>\r\n          <Button onClick={handleChangeViewType}>\r\n            {viewType === 'card' ? (\r\n              <svg\r\n                viewBox='0 0 24 24'\r\n                width='20'\r\n                height='20'\r\n                stroke='currentColor'\r\n                strokeWidth='1.5'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                fill='none'\r\n                shapeRendering='geometricPrecision'\r\n              >\r\n                <path d='M21 10H3' />\r\n                <path d='M21 6H3' />\r\n                <path d='M21 14H3' />\r\n                <path d='M21 18H3' />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                viewBox='0 0 24 24'\r\n                width='20'\r\n                height='20'\r\n                stroke='currentColor'\r\n                strokeWidth='1.5'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                fill='none'\r\n                shapeRendering='geometricPrecision'\r\n              >\r\n                <rect x='1' y='4' width='20' height='16' rx='2' ry='2' />\r\n                <path d='M1 10h20' />\r\n              </svg>\r\n            )}\r\n          </Button>\r\n        </Title>\r\n        <SearchBox>\r\n          <SearchInput value={search} onReset={searchClear} onChange={handleInput} size='small' placeholder='검색..' />\r\n        </SearchBox>\r\n      </Header>\r\n      <SidebarContainer ref={ref} hasVerticalScrollbar={hasVerticalScrollbar} fold={fold}>\r\n        <Categories>\r\n          <Container>\r\n            <List>\r\n              {filteredPosts.map((it) => (\r\n                <ListItem\r\n                  key={it.name}\r\n                  onClick={() => moveToLocation(it.slug)}\r\n                  image={it.image}\r\n                  text={it.name}\r\n                  isActive={isActive(it.slug)}\r\n                >\r\n                  <div>\r\n                    {viewType === 'list' && (\r\n                      <svg\r\n                        viewBox='0 0 24 24'\r\n                        width='20'\r\n                        height='20'\r\n                        stroke='currentColor'\r\n                        strokeWidth='1.5'\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        fill='none'\r\n                        shapeRendering='geometricPrecision'\r\n                      >\r\n                        <path d='M13 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V9z' />\r\n                        <path d='M13 2v7h7' />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                  {viewType === 'list' && <Text>{it.name}</Text>}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Container>\r\n        </Categories>\r\n      </SidebarContainer>\r\n    </aside>\r\n  )\r\n\r\n  function moveToLocation(target: string): void {\r\n    navigate(target)\r\n  }\r\n\r\n  function handleInput(target: string): void {\r\n    setSearch(target)\r\n    localStorage.set('search', target)\r\n  }\r\n\r\n  function searchClear(): void {\r\n    setSearch('')\r\n    localStorage.set('search', '')\r\n  }\r\n\r\n  function handleChangeViewType(): void {\r\n    const type = viewType === 'card' ? 'list' : 'card'\r\n    localStorage.set('view-type', type)\r\n    setViewType(type)\r\n  }\r\n\r\n  function isActive(target: string): boolean {\r\n    return decodeURIComponent(location.pathname).includes(target.slice(0, -1))\r\n  }\r\n}\r\n\r\nconst SidebarContainer = styled.div<{ hasVerticalScrollbar: boolean; fold: boolean }>`\r\n  position: fixed;\r\n  width: 320px;\r\n  height: 100vh;\r\n  top: 0;\r\n  left: 80px;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n\r\n  ${({ theme, hasVerticalScrollbar, fold }) => css`\r\n    z-index: ${theme.layers.AFTER_STANDARD - 1};\r\n    background: ${theme.colors.PRIMARY.ACCENT_1};\r\n    box-shadow: ${theme.shadows.SMALL};\r\n\r\n    ${hasVerticalScrollbar &&\r\n    css`\r\n      &:hover > div:last-of-type {\r\n        margin-right: -8px;\r\n      }\r\n    `}\r\n\r\n    ${fold &&\r\n    css`\r\n      left: -320px;\r\n\r\n      & > div:first-of-type {\r\n        left: -320px;\r\n      }\r\n    `}\r\n\r\n    /* ipad Portrait and Landscape */\r\n    @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\r\n      overflow-y: auto;\r\n\r\n      ${hasVerticalScrollbar &&\r\n      css`\r\n        &:hover > div:last-of-type {\r\n          margin-right: 0;\r\n        }\r\n      `}\r\n    }\r\n  `}\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    left: -320px;\r\n\r\n    & > div:first-of-type {\r\n      left: -320px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    overflow-y: auto;\r\n  }\r\n\r\n  /** 파이어폭스 스크롤 대응 */\r\n  scrollbar-width: 8px;\r\n  // thumb background 순\r\n  scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-background);\r\n\r\n  /** 사파리 크롬 스크롤 대응 */\r\n  &::-webkit-scrollbar {\r\n    background: var(--scrollbar-background);\r\n    height: 8px;\r\n    width: 8px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: var(--scrollbar-thumb);\r\n    border-radius: 0;\r\n  }\r\n`\r\n\r\nconst Header = styled.div<{ hasVerticalScrollbar: boolean; fold: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 80px;\r\n  transform: translate3d(0, 0, 1);\r\n  width: 320px;\r\n  padding-bottom: 14px;\r\n\r\n  ${({ theme, fold }) => css`\r\n    z-index: ${theme.layers.AFTER_STANDARD};\r\n    background: ${theme.colors.PRIMARY.ACCENT_1};\r\n\r\n    ${fold &&\r\n    css`\r\n      left: -320px;\r\n\r\n      & > div:first-of-type {\r\n        left: -320px;\r\n      }\r\n    `}\r\n  `}\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    left: -320px;\r\n\r\n    & > div:first-of-type {\r\n      left: -320px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.PRIMARY.ACCENT_4};\r\n    &:hover {\r\n      color: ${theme.colors.PRIMARY.FOREGROUND};\r\n    }\r\n  `}\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  height: 35px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  padding: 0 28px 2px;\r\n\r\n  & > button {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  height: 38px;\r\n  padding: 0 24px;\r\n  max-width: 100%;\r\n\r\n  & > div {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Categories = styled.div`\r\n  margin-top: 73px;\r\n  padding: 16px 24px 32px;\r\n`\r\n\r\nconst CardStyle = styled.nav`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst CardStyleItem = styled.a<{ image: string | null; text: string; isActive: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  width: 130px;\r\n  height: 130px;\r\n  margin-bottom: 12px;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transform: scale(1, 1);\r\n  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n\r\n  ${({ theme, image, text, isActive }) => css`\r\n    background-image: url(${image});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    box-shadow: ${theme.shadows.SMALL};\r\n    color: ${theme.colors.PRIMARY.BACKGROUND};\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: inherit;\r\n      height: inherit;\r\n      background: ${isActive ? theme.colors.HIGHLIGHT.PINK : theme.colors.PRIMARY.FOREGROUND};\r\n      opacity: ${isActive ? 0.5 : 0.3};\r\n      border-radius: 12px;\r\n    }\r\n\r\n    &::after {\r\n      content: '${text}';\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      line-height: 1.1;\r\n      color: ${theme.colors.PRIMARY.BACKGROUND};\r\n      text-align: right;\r\n      margin: 6px 6px 12px;\r\n      word-break: keep-all;\r\n      letter-spacing: -0.02rem;\r\n    }\r\n  `}\r\n\r\n  &:hover {\r\n    transform: scale(1.1, 1.1);\r\n  }\r\n`\r\n\r\nconst ListStyle = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ListStyleItem = styled.a<{ isActive: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 6px 12px;\r\n  margin: 0 -12px;\r\n  border-radius: 6px;\r\n  transition: border 0.2s ease;\r\n\r\n  ${({ theme, isActive }) => css`\r\n    ${isActive &&\r\n    css`\r\n      border-left: 6px solid ${theme.colors.HIGHLIGHT.PINK};\r\n      padding-left: 12px;\r\n    `};\r\n\r\n    & > div {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-right: 6px;\r\n      color: ${theme.colors.PRIMARY.ACCENT_4};\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.PRIMARY.ACCENT_2};\r\n    }\r\n\r\n    /* &::before {\r\n      content: '';\r\n      transform: translateY(-50%);\r\n      \r\n      font-size: 1rem;\r\n    } */\r\n  `}\r\n\r\n  & > svg {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`\r\n"],"names":["Sidebar","props","location","useLocation","posts","fold","useState","window","localStorage","search","setSearch","viewType","setViewType","ref","useRef","hasVerticalScrollbar","setHasVerticalScrollbar","filteredPosts","useMemo","filter","it","name","toLocaleUpperCase","includes","useEffect","current","scrollHeight","clientHeight","List","CardStyle","ListStyle","ListItem","CardStyleItem","ListStyleItem","Header","Title","as","color","Colors","length","Button","onClick","type","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","y","rx","ry","SearchBox","value","onReset","onChange","target","size","placeholder","SidebarContainer","Categories","map","slug","navigate","image","text","isActive","decodeURIComponent","pathname","slice","theme","css","layers","AFTER_STANDARD","colors","PRIMARY","ACCENT_1","shadows","SMALL","ACCENT_4","FOREGROUND","BACKGROUND","HIGHLIGHT","PINK","ACCENT_2"],"sourceRoot":""}