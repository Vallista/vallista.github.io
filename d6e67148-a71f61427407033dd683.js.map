{"version":3,"file":"d6e67148-a71f61427407033dd683.js","mappings":"6OAsBO,MAAMA,EAA+CC,IACpD,MAAAC,GAA8DC,EAAAA,EAAAA,GAAUF,IAAtEG,KAAAC,EAAO,QAASC,MAAAC,EAAQ,OAAQC,SAAAC,GAAaP,EAAAQ,GAAAC,EAAAA,EAAAA,GAAAT,EAAAU,GAErD,OAAAC,EAAAA,EAAAA,IACGC,EACC,CAAAC,SAAA,EAAAC,EAAAA,EAAAA,GAACC,EAAAC,OAAAC,OAAA,CACCC,KAAK,WACLC,QAASX,EAAWY,OACpBd,SAAUA,IAAMC,GAAUC,EAAWY,SACjCZ,KAELM,EAAAA,EAAAA,GAAAO,EAAAL,OAAAC,OAAA,CAAQf,KAAAC,GAAgBK,EAAA,CAAYJ,MAAAC,EACnCQ,UAACC,EAAAA,EAAAA,GAAAQ,EAAAN,OAAAC,OAAA,CAAOf,KAAAC,GAAgBK,EAAA,CAAYJ,MAAAC,UAExC,EAIEO,GAAKW,EAAAA,EAAAA,GAAA,SAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,oGAQLX,GAAKQ,EAAAA,EAAAA,GAAA,SAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,gKAcLL,GAAOE,EAAAA,EAAAA,GAAA,QAAAC,OAAA,aAAAD,EACTI,IAAA,IAAGC,MAAA7B,EAAOG,KAAAC,EAAMiB,OAAAf,EAAQwB,SAAAtB,EAAUH,MAAAI,GAAMmB,EAAA,OAAMG,EAAAA,EAAAA,IAErC,8BAAAC,EAAW5B,GAAM6B,KAAK,GAAC,aACtBD,EAAW5B,GAAM6B,KAAK,GAAE,wEAEpB3B,EACA,SAAVG,EACET,EAAMkC,OAAOC,QAAQC,QACrBpC,EAAMkC,OAAOG,UAAUC,KACzBtC,EAAMkC,OAAOK,QAAQC,SAAQ,qBAE7BlC,EACY,SAAVG,EACET,EAAMkC,OAAOC,QAAQC,QACrBpC,EAAMkC,OAAOG,UAAUC,KACzBtC,EAAMkC,OAAOK,QAAQC,SAMzB,8EAAAhC,IACFuB,EAAAA,EAAAA,IACgB,cAAA/B,EAAMkC,OAAOK,QAAQE,SACnB,iBAAAzC,EAAMkC,OAAOK,QAAQC,SAAQ,qCAGhD,iBAGGjB,GAAMC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,EACRkB,IAAA,IAAGb,MAAA7B,EAAOG,KAAAC,EAAMiB,OAAAf,EAAQwB,SAAAtB,GAASkC,EAAA,OAAAX,EAAAA,EAAAA,IAIxB,0CAAAC,EAAW5B,GAAMuC,OAAO,GAAE,aACzBX,EAAW5B,GAAMuC,OAAO,GAAE,gFAEbrC,EAAS0B,EAAW5B,GAAMwC,IAAI,GAAKZ,EAAW5B,GAAMwC,IAAI,GACjE,wBAAA5C,EAAMkC,OAAOK,QAAQM,WAMjC,uIAAArC,IACCuB,EAAAA,EAAAA,IAAA,cACa/B,EAAMkC,OAAOK,QAAQC,SAAQ,iCAE5C,IACF,iBAGGR,EAGF,CACFc,MAAO,CACLb,KAAM,CAAC,GAAI,IACXU,OAAQ,CAAC,GAAI,IACbC,IAAK,CAAC,EAAG,KAEXG,OAAQ,CACNd,KAAM,CAAC,GAAI,IACXU,OAAQ,CAAC,GAAI,IACbC,IAAK,CAAC,EAAG,KAEXI,MAAO,CACLf,KAAM,CAAC,GAAI,IACXU,OAAQ,CAAC,GAAI,IACbC,IAAK,CAAC,EAAG,K","sources":["webpack://@vallista/blog/../../../src/components/Toggle/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { VFC } from 'react'\n\nimport { StyleParams, ToggleProps } from './type'\nimport { useToggle } from './useToggle'\n\n/**\n * # Toggle\n *\n * @description [vercel design toggle](https://vercel.com/design/toggle)\n *\n * 토글 컴포넌트입니다. 해당 컴포넌트로 토글을 나타냅니다.\n *\n * @param {ToggleProps} {@link ToggleProps} toggle 요소\n *\n * @example ```tsx\n * const [state, setState] = useState(false)\n *\n * <Toggle size=\"small\" toggle={state} onChange={setState} />\n * ```\n */\nexport const Toggle: VFC<Partial<ToggleProps>> = (props) => {\n  const { size = 'small', color = 'blue', onChange, ...otherProps } = useToggle(props)\n\n  return (\n    <Label>\n      <Input\n        type='checkbox'\n        checked={otherProps.toggle}\n        onChange={() => onChange(!otherProps.toggle)}\n        {...otherProps}\n      />\n      <Wrapper size={size} {...otherProps} color={color}>\n        <Circle size={size} {...otherProps} color={color} />\n      </Wrapper>\n    </Label>\n  )\n}\n\nconst Label = styled.label`\n  display: inline-flex;\n  position: relative;\n  vertical-align: middle;\n  white-space: nowrap;\n  user-select: none;\n`\n\nconst Input = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n  opacity: 0;\n  outline: none;\n`\n\nconst Wrapper = styled.span<StyleParams>`\n  ${({ theme, size, toggle, disabled, color }) => css`\n    display: inline-block;\n    width: ${sizeMapper[size].wrap[0]}px;\n    height: ${sizeMapper[size].wrap[1]}px;\n    transition: background 0.15s cubic-bezier(0, 0, 0.2, 1);\n    background: ${toggle\n      ? color === 'blue'\n        ? theme.colors.SUCCESS.DEFAULT\n        : theme.colors.HIGHLIGHT.PINK\n      : theme.colors.PRIMARY.ACCENT_2};\n    border: 1px solid\n      ${toggle\n        ? color === 'blue'\n          ? theme.colors.SUCCESS.DEFAULT\n          : theme.colors.HIGHLIGHT.PINK\n        : theme.colors.PRIMARY.ACCENT_2};\n    border-radius: 14px;\n    cursor: pointer;\n    position: relative;\n    box-sizing: border-box;\n\n    ${disabled &&\n    css`\n      background: ${theme.colors.PRIMARY.ACCENT_1};\n      border-color: ${theme.colors.PRIMARY.ACCENT_2};\n      cursor: not-allowed;\n    `}\n  `}\n`\n\nconst Circle = styled.div<StyleParams>`\n  ${({ theme, size, toggle, disabled }) => css`\n    position: absolute;\n    left: 0;\n    top: 50%;\n    width: ${sizeMapper[size].circle[0]}px;\n    height: ${sizeMapper[size].circle[1]}px;\n    transition: transform 0.15s cubic-bezier(0, 0, 0.2, 1);\n    transform: translate(${toggle ? sizeMapper[size].pos[1] : sizeMapper[size].pos[0]}px, -50%);\n    background: ${theme.colors.PRIMARY.BACKGROUND};\n    cursor: pointer;\n    border-radius: 50%;\n    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%), 0 1px 3px 0 rgb(0 0 0 / 10%);\n    border: 1px solid transparent;\n\n    ${disabled &&\n    css`\n      background: ${theme.colors.PRIMARY.ACCENT_2};\n      cursor: not-allowed;\n    `}\n  `}\n`\n\nconst sizeMapper: Record<\n  ToggleProps['size'],\n  { wrap: [number, number]; circle: [number, number]; pos: [number, number] }\n> = {\n  small: {\n    wrap: [28, 14],\n    circle: [12, 12],\n    pos: [1, 15]\n  },\n  medium: {\n    wrap: [34, 18],\n    circle: [16, 16],\n    pos: [1, 17]\n  },\n  large: {\n    wrap: [40, 24],\n    circle: [22, 22],\n    pos: [1, 17]\n  }\n}\n"],"names":["s","I","_i","i","size","g","color","c","onChange","C","b","_objectWithoutPropertiesLoose","_excluded","d","B","children","X","V","Object","assign","type","checked","toggle","N","u","l","target","name","styles","_ref","theme","disabled","A","G","wrap","colors","SUCCESS","DEFAULT","HIGHLIGHT","PINK","PRIMARY","ACCENT_2","ACCENT_1","_ref2","circle","pos","BACKGROUND","small","medium","large"],"sourceRoot":""}