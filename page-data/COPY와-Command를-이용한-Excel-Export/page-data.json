{
    "componentChunkName": "component---src-template-post-tsx",
    "path": "/COPY와-Command를-이용한-Excel-Export/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","date":"2021-12-19T13:25:37.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/8e1d009e85a39cc317b4860c3c5ee1c0/1.png"},"series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","date":"2021-11-21T11:57:00.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/fa70554b07fce5be94ca392688dd21a9/1.jpeg"},"series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","date":"2021-10-10T16:07:18.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/4cf638c1ef47371e8eb3a444e5a8df33/1.jpeg"},"series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","date":"2021-08-19T19:09:51.000Z","tags":["All"],"image":{"publicURL":"/static/f94cda0038e3fed2b247b7805500817f/1.png"},"series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","date":"2021-07-25T17:05:28.000Z","tags":["All","잡담"],"image":{"publicURL":"/static/a84de79cc7e786a44ac4637fce1b9226/0.jpeg"},"series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","date":"2021-07-13T22:39:25.000Z","tags":["All","Talk"],"image":{"publicURL":"/static/9c79c009493a1155802057a87841acea/1.png"},"series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","date":"2020-07-20T02:24:31.000Z","tags":["All","React"],"image":{"publicURL":"/static/0696aa54c5b646340083d7051dc5f5a7/0.png"},"series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","date":"2020-07-11T23:57:59.000Z","tags":["All","회고"],"image":{"publicURL":"/static/1a0d091a042959ea57495f0269734486/0.jpg"},"series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","date":"2020-06-14T21:14:12.000Z","tags":["All","잡담"],"image":{"publicURL":"/static/244d3d3efa66050b0c4f6cdf703b7bb3/0.jpg"},"series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","date":"2020-06-07T18:41:05.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/a5057338962f7c02030bcbf4671c2e19/0.jpg"},"series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","date":"2020-05-22T20:30:33.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/a5057338962f7c02030bcbf4671c2e19/0.jpg"},"series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","date":"2020-05-05T20:44:56.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/a5057338962f7c02030bcbf4671c2e19/0.jpg"},"series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","date":"2020-04-26T15:19:08.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/62d916b35da2c5dc5716b77e9e579eb7/0.jpg"},"series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","date":"2020-03-29T15:28:01.000Z","tags":["FrontEnd","All"],"image":{"publicURL":"/static/ece3c3d90fa37872a3f193129413d4fe/1.jpeg"},"series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","date":"2020-03-01T15:04:00.000Z","tags":["All","잡담"],"image":{"publicURL":"/static/e226c34c71ef99ee40e3e7271a0eb912/1.jpg"},"series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","date":"2019-12-29T18:24:03.000Z","tags":["All","회고"],"image":{"publicURL":"/static/66d050f20691fee9d279785d951aff0a/image1.png"},"series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","date":"2019-12-28T19:47:35.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/51764e5d499eee3bdc737346d2018776/image1.jpg"},"series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","date":"2019-12-28T16:42:00.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","date":"2019-12-27T20:01:32.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/34d2df53160d8b8a699fd4c566a25ada/image1.png"},"series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","date":"2019-12-10T00:51:35.000Z","tags":["All","잡담"],"image":{"publicURL":"/static/addb737108155d6dd3fcae3c5825eff2/icon.jpg"},"series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","date":"2019-11-25T01:28:52.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/d8973e0071f45f3c9a643a60f19bf3a1/image1.png"},"series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","date":"2019-11-10T14:35:28.000Z","tags":["All","FrontEnd"],"image":{"publicURL":"/static/51764e5d499eee3bdc737346d2018776/image1.jpg"},"series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","date":"2019-08-01T17:20:29.000Z","tags":["All","회고"],"image":null,"series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","date":"2019-07-12T12:05:15.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","date":"2019-07-03T10:39:05.000Z","tags":["All","잡담"],"image":null,"series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","date":"2019-05-30T16:33:52.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","date":"2019-05-28T11:11:30.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","date":"2019-05-15T11:17:29.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","date":"2019-05-15T11:16:29.000Z","tags":["All","React"],"image":null,"series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","date":"2019-05-13T11:08:23.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","date":"2019-05-13T11:05:53.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","date":"2019-05-12T11:04:45.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","date":"2019-05-12T11:03:57.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","date":"2019-05-12T11:03:24.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","date":"2019-05-12T11:01:13.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","date":"2019-05-11T10:58:12.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","date":"2019-05-11T10:55:07.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","date":"2019-05-10T19:14:14.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","date":"2019-05-10T19:07:56.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","date":"2019-05-10T10:53:13.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","date":"2019-05-09T19:14:14.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","date":"2019-05-08T19:13:17.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","date":"2019-05-07T19:12:24.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","date":"2019-05-07T19:11:27.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","date":"2019-05-06T19:08:52.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","date":"2019-05-05T19:07:15.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","date":"2019-05-05T19:06:21.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","date":"2019-05-04T19:04:34.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","date":"2019-05-03T19:03:41.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","date":"2019-05-03T19:02:32.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","date":"2019-05-02T19:00:34.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","date":"2019-05-02T18:46:16.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","date":"2019-05-01T18:46:16.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","date":"2019-02-25T17:57:57.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","date":"2019-01-29T18:00:08.000Z","tags":["All"],"image":null,"series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","date":"2019-01-05T18:02:10.000Z","tags":["All","회고"],"image":null,"series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","date":"2018-01-15T18:40:06.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","date":"2018-01-14T18:38:29.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","date":"2017-12-25T18:00:55.000Z","tags":["All","회고"],"image":null,"series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","date":"2017-07-01T18:42:43.000Z","tags":["All","FrontEnd"],"image":null,"series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","date":"2017-07-01T18:41:35.000Z","tags":["All","FrontEnd"],"image":null,"series":null}}]},"seriesGroup":{"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2}]},"markdownRemark":{"id":"8da0c706-47ee-50d0-8733-ef4141001710","html":"<p>회사에서 <code>PostgreSQL</code>에서 Excel 포맷으로 출력 해야하는 일이 생겼습니다. 오프라인에서 물건을 점검하기위해 주문 상황을 체크하고 물건을 걸러내야 했는데 이는 종이로 하는 것이 효율적이기에 출력해야 되는 상황이었습니다.</p>\n<p>그래서 PostgreSQL에서 파일 입출력이 가능한가에 대해서 찾아보았습니다. PostgreSQL에서는 쉽게 Excel로 뽑아내는 커맨드를 제공합니다. 바로 <code>COPY</code> 라는 커맨드인데요. 이 커맨드를 이용해서 한번 파일 출력을 해보겠습니다.</p>\n<h2>사용방법</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> table_name [ ( column_name [, ...] ) ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">FROM</span><span class=\"mtk1\"> { </span><span class=\"mtk8\">&#39;filename&#39;</span><span class=\"mtk1\"> | STDIN }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [ [ WITH ] ( </span><span class=\"mtk4\">option</span><span class=\"mtk1\"> [, ...] ) ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> { table_name [ ( column_name [, ...] ) ] | ( query ) }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">TO</span><span class=\"mtk1\"> { </span><span class=\"mtk8\">&#39;filename&#39;</span><span class=\"mtk1\"> | STDOUT }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [ [ WITH ] ( </span><span class=\"mtk4\">option</span><span class=\"mtk1\"> [, ...] ) ]</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">where option can be one of:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    FORMAT format_name</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    OIDS [ boolean ]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    DELIMITER &#39;delimiter_character&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    NULL &#39;null_string&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    HEADER [ boolean ]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    QUOTE &#39;quote_character&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ESCAPE &#39;escape_character&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    FORCE_QUOTE { ( column_name [, ...] ) | * }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    FORCE_NOT_NULL ( column_name [, ...] )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ENCODING &#39;encoding_name&#39;</span></span></code></pre>\n<blockquote>\n<p>파일 타입은 csv 뿐만 아니라 다른 텍스트 포멧으로 나타낼 수 있습니다.</p>\n</blockquote>\n<p>COPY를 사용하는 방법은 FROM과 TO로 나눌 수 있습니다.</p>\n<h2>실제 사용</h2>\n<p>사용 방법을 보니 사용되는 문법이 두 가지 있습니다.</p>\n<h3>COPY ~ TO ~</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; </span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> order_item </span><span class=\"mtk4\">to</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/test.csv&#39;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">0 Apple 2019/01/17 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">1 Juice 2019/01/13 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2 Candy 2019/01/11 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">3 Grape 2019/01/10 4000</span></span></code></pre>\n<p>COPY ~ TO ~ 는 테이블에 있는 내용을 파일화 시키는 커맨드 입니다. 그래서 order_item 테이블을 <code>~/app/test.csv</code> 이름으로 액셀 파일로 만들어서 넣었습니다.</p>\n<h3>COPY ~ FROM ~</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">~/app/test.csv</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Apple 2019/01/17 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Juice 2019/01/13 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Candy 2019/01/11 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Grape 2019/01/10 4000</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; </span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> order_item </span><span class=\"mtk4\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/test.csv&#39;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">| id | name  | created_at | payment</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">---------------------------------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">| 0  | Apple | 2019/01/17 | 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">| 1  | Juice | 2019/01/13 | 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">| 2  | Candy | 2019/01/11 | 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">| 3  | Grape | 2019/01/10 | 4000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">---------------------------------</span></span></code></pre>\n<p>COPY ~ FROM ~ 는 테이블에 내용을 import 하는 기능입니다.\norder_item 테이블에 <code>~/app/test.csv</code> 파일을 import 했습니다.</p>\n<h3>컬럼 필터링 및 순서 변경</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; </span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> order_item(created_at, id, </span><span class=\"mtk4\">name</span><span class=\"mtk1\">, payment) </span><span class=\"mtk4\">to</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/importFile.csv&#39;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/17 0 Apple 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/13 1 Juice 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/11 2 Candy 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/10 3 Grape 4000</span></span></code></pre>\n<p>컬럼명을 명시하므로써 순서 및 출력할 컬럼만 추가 할 수 있습니다.</p>\n<h3>복잡한 쿼리를 나타내기</h3>\n<p>현재 구문으로는 한 가지의 테이블에 대한 데이터만 나타 낼 수 있는 것 같습니다.<br>\n그렇다면 JOIN이나 WHERE등의 커맨드가 붙어야 할 때는 어떻게 해야할까요?</p>\n<p><code>()</code> 괄호를 열어주시면 됩니다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; </span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">SELECT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.created_at,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.id,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.payment,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    item.item_code,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">FROM</span><span class=\"mtk1\"> order_item</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">WHERE</span><span class=\"mtk1\"> order_item.id &gt; </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">JOIN</span><span class=\"mtk1\"> item </span><span class=\"mtk4\">ON</span><span class=\"mtk1\"> order_item.id = item.order_id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk4\">to</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/importFile.csv&#39;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/13 1 Juice 2000 100_0000_01</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/11 2 Candy 3000 100_0000_02</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2019/01/10 3 Grape 4000 100_0000_03</span></span></code></pre>\n<h3>권한 없는 문제 해결</h3>\n<p>COPY 커맨드를 사용할 때 권한이 없는 에러를 뱉는 경우가 있습니다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; \\</span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">SELECT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.created_at,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.id,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.payment,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    item.item_code,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">FROM</span><span class=\"mtk1\"> order_item</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">WHERE</span><span class=\"mtk1\"> order_item.id &gt; </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">JOIN</span><span class=\"mtk1\"> item </span><span class=\"mtk4\">ON</span><span class=\"mtk1\"> order_item.id = item.order_id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk4\">to</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/importFile.csv&#39;</span></span></span></code></pre>\n<p>그럴때는 COPY 앞에 <code>\\</code>를 붙여주면 됩니다.</p>\n<h3>컬럼 이름으로 헤더 설정</h3>\n<p>컬럼 이름이 전혀 연관이 없는 이상한 이름으로 나오는 경우가 있습니다. 설정을 안하면 대다수의 파일이 그렇게 출력되는데요. 아래의 구문을 추가해주면 제대로 나옵니다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sql\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// </span><span class=\"mtk4\">With</span><span class=\"mtk1\"> CSV HEADER 추가</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">postgresql&gt; \\</span><span class=\"mtk4\">COPY</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">SELECT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.created_at,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.id,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    order_item.payment,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    item.item_code,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">FROM</span><span class=\"mtk1\"> order_item</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">WHERE</span><span class=\"mtk1\"> order_item.id &gt; </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">JOIN</span><span class=\"mtk1\"> item </span><span class=\"mtk4\">ON</span><span class=\"mtk1\"> order_item.id = item.order_id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk4\">to</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;~/app/importFile.csv&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">With</span><span class=\"mtk1\"> CSV HEADER</span></span></span></code></pre>\n<p>열어서 파일을 확인해 보세요.</p>\n<h3>데이터의 구분문자로 구분하기</h3>\n<p>데이터를 넣을 때 구분문자가 있어야 데이터를 구분할 것 입니다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">~/app/test.csv</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">0, Apple, 2019/01/17, 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">1, Juice, 2019/01/13, 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2, Candy, 2019/01/11, 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">3, Grape, 2019/01/10, 4000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">postgresql&gt; \\COPY order_item(created_at, id, name, payment) FROM &#39;~/app/importFile.csv&#39; With DELIMITER &#39;,&#39;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">id | name  | created_at | payment</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">---------------------------------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">0  | Apple | 2019/01/17 | 1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">1  | Juice | 2019/01/13 | 2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2  | Candy | 2019/01/11 | 3000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">3  | Grape | 2019/01/10 | 4000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">---------------------------------</span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","tags":["All"],"date":"2019-01-29T18:00:08.000Z","image":null,"series":null}}},"pageContext":{"id":"8da0c706-47ee-50d0-8733-ef4141001710"}},
    "staticQueryHashes": ["3810308631"]}