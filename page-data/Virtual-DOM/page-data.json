{
    "componentChunkName": "component---src-template-post-tsx",
    "path": "/Virtual-DOM/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/2022년-상반기-회고/"},"timeToRead":15,"frontmatter":{"title":"2022년 상반기 회고","series":null}},{"fields":{"slug":"/일정이-촉박한-프로젝트와-깨진-유리창/"},"timeToRead":3,"frontmatter":{"title":"일정이 촉박한 프로젝트와 깨진 유리창","series":null}},{"fields":{"slug":"/사내-워크숍;-이펙티브-타입스크립트,-객체지향의-사실과-오해를-끝내며/"},"timeToRead":3,"frontmatter":{"title":"사내 워크숍; 이펙티브 타입스크립트, 객체지향의 사실과 오해를 끝내며","series":null}},{"fields":{"slug":"/테스트-코드-시작하기/"},"timeToRead":7,"frontmatter":{"title":"테스트 코드 시작하기","series":"프론트엔드 테스팅"}},{"fields":{"slug":"/git-flow;-환상과-현실-그-사이에-서비스/"},"timeToRead":6,"frontmatter":{"title":"git flow; 환상과 현실 그 사이에 서비스","series":null}},{"fields":{"slug":"/블로그-v3-개편/"},"timeToRead":13,"frontmatter":{"title":"블로그 리뉴얼 그리고 회고","series":null}},{"fields":{"slug":"/2021년-회고/"},"timeToRead":21,"frontmatter":{"title":"2021년 회고","series":null}},{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","series":null}}],"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2},{"fieldValue":"프론트엔드 테스팅","totalCount":1}]},"markdownRemark":{"id":"99888bde-173b-5c63-b5b3-4951270bb52e","html":"<p>Virtual DOM은<a href=\"https://www.notion.so/a0a34ea8-52ad-44f8-b109-8ae1fb33bda1\">Vue.js</a>, <a href=\"https://www.notion.so/a4b13e25-b67a-40af-87d3-c084a29c895c\">React.js</a> 와 같은 SPA 프레임워크에서 사용된다.</p>\n<h2>사용하는 이유</h2>\n<p>JavaScript로 DOM 조작을 하게 되면 브라우저의 렌더링 엔진에서 수많은 일들이 일어난다.</p>\n<p><a href=\"https://www.notion.so/05b2fa44-e433-4bb2-9fc3-cd59110f6ddb\">DOM (Document Object Model)</a> <a href=\"https://www.notion.so/f83ac03f-8261-4f78-82a2-7d415fb9eda2\">브라우저 렌더링 과정</a></p>\n<h3>1. Parsing</h3>\n<ul>\n<li>HTML을 <a href=\"https://html.spec.whatwg.org/multipage/parsing.html\">HTML 파싱 표준</a>에 맞게<a href=\"https://www.notion.so/05b2fa44-e433-4bb2-9fc3-cd59110f6ddb\">DOM (Document Object Model)</a> 를 만든다.</li>\n<li>StyleSheet를 <a href=\"https://www.notion.so/d21964c0-2af1-4b48-9719-94872efa722b\">파싱 (Parsing)</a> 알고리즘으로 파싱해 <a href=\"https://www.notion.so/66bd0de6-0972-4fd9-a82f-f557c172ea1b\">CSSOM (CSS Object Model)</a>을 만든다.</li>\n</ul>\n<blockquote>\n<p>HTML과 StyleSheer의 Parsing 방법이 다른 이유는 HTML은 <a href=\"https://www.notion.so/97878963-961a-4ae6-b6d4-40849fb33020\">BNF (Backus-Naur Form)</a> 로 명세할 수 없는 특징을 가지고 있기 때문이다.</p>\n</blockquote>\n<h3>2. Attachment</h3>\n<p>결과로 나온 DOM과 CSSOM을 대상으로 Attachment(결합)을 통해 <a href=\"https://www.notion.so/0ee913e6-9ebe-44c5-821f-f43d1869fa59\">Create Rendering Tree</a> 를 실시한다.</p>\n<h3>3. Layout</h3>\n<p>만들어진 Render Tree를 대상으로 해당 픽셀에 위치 시킨다.</p>\n<h3>4. Paint</h3>\n<p>해당 픽셀에 위치시킨 Render Tree Node에 해당하는 스타일을 입힌다.</p>\n<p>DOM 조작을 하면 1, 2, 3, 4 번의 동작을 반복한다. 그러므로 DOM을 조작할 때 마다 렌더링 엔진은 쉼없이 돌아간다는 것을 알 수 있다. DOM 조작을 16번 했다고 가정하면 저 위의 단계를 16번 거치게 되는데 Node가 클수록 연산이 매우 힘들어지는 걸 쉽게 예상할 수 있다.</p>\n<ul>\n<li>Layout 잡는 과정과 Paint 잡는 과정은 별개이므로, 16번 DOM 조작이 발생한다면, 32번 이상의 재 연산이 일어날 수 있다.</li>\n</ul>\n<p>이런 작업을 모아서 한번에 작업하는 매니저가 <strong>Virtual DOM</strong> 이다.</p>\n<p>Virtual DOM은 DOM과 동일한 가상의 DOM을 만든다. 가상의 DOM을 제작한 후 모든 DOM을 움직이는 작업은 Virtual DOM에서 일어난다. Virtual DOM에서 변경될 요소와 변경되지 않을 요소를 판별한 후 최종으로 실제 DOM에 Virtual DOM 데이터를 적용한다.</p>\n<ul>\n<li>Virtual DOM은 변경되는 요소와 변경되지 않는 요소를 판별한다.</li>\n<li>판별하고 실제 렌더링 될 때, Layout 과정과 Paint 과정의 연산을 줄인다.</li>\n<li>연산의 횟수는 줄이지만, Layout 규모와 Paint의 규모는 상대적으로 크다.</li>\n<li>Virtual DOM 없이도, 변화된 데이터를 묶어서 DOM Fragment에 전달하면 동일한 효과를 얻을 수 있다.</li>\n<li>Virtual DOM의 중요한 역할은, DOM Fragment를 관리해준다. 또한 변화된 데이터 감지 및 묶는 작업을 자동화 해주며 사용자가 DOM에 접근하지 않고 Virtual DOM에서 작업해도 이런 작업을 자동으로 결과를 내서 DOM을 변경해준다.</li>\n</ul>\n<h2>환상</h2>\n<p><strong>Virtual DOM ≠ 빠르다</strong></p>\n<p>React, Vue와 같은 프론트엔드 프레임워크는 Virtual DOM을 사용하므로써 빠르다고 말할 수 없다. 왜냐하면 Virtual DOM을 쓰지않고 손수 최적화 하는 게 대부분이 빠르기 때문이다.</p>\n<p>하지만 React, Vue에서 Virtual DOM을 사용하는 이유는 적당히 빠르고, 개발자의 최적화 등의 요소들에서 자유롭게 하며 Product 개발에 집중할 수 있게끔 도와준다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","tags":["프론트엔드"],"date":"2019-05-04T19:04:34.000Z","image":null,"series":null}}},"pageContext":{"id":"99888bde-173b-5c63-b5b3-4951270bb52e"}},
    "staticQueryHashes": ["2580406332","3810308631"]}