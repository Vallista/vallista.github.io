{
    "componentChunkName": "component---src-template-post-tsx",
    "path": "/객체지향-프로그래밍/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/사내-워크숍;-이펙티브-타입스크립트,-객체지향의-사실과-오해를-끝내며/"},"timeToRead":3,"frontmatter":{"title":"사내 워크숍; 이펙티브 타입스크립트, 객체지향의 사실과 오해를 끝내며","series":null}},{"fields":{"slug":"/테스트-코드-시작하기/"},"timeToRead":7,"frontmatter":{"title":"테스트 코드 시작하기","series":"프론트엔드 테스팅"}},{"fields":{"slug":"/git-flow;-환상과-현실-그-사이에-서비스/"},"timeToRead":6,"frontmatter":{"title":"git flow; 환상과 현실 그 사이에 서비스","series":null}},{"fields":{"slug":"/블로그-v3-개편/"},"timeToRead":13,"frontmatter":{"title":"블로그 리뉴얼 그리고 회고","series":null}},{"fields":{"slug":"/2021년-회고/"},"timeToRead":21,"frontmatter":{"title":"2021년 회고","series":null}},{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","series":null}}],"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2},{"fieldValue":"프론트엔드 테스팅","totalCount":1}]},"markdownRemark":{"id":"97bb5457-ed09-55ce-8e78-d83bf242e7e5","html":"<h2>OOP (Object Oriented Programming)</h2>\n<h3>객체 지향 프로그래밍</h3>\n<p>객체 지향 프로그래밍 전의 프로그래밍 패러다임은 컴퓨터가 사고하는 데로 프로그래밍을 했다면, 객체 지향 프로그래밍은 현실 세계를 프로그래밍으로 옮겨와 프로그래밍을 한다. 즉 <code>인간 중심적 프로그래밍 패러다임</code> 이라고 볼 수 있다.</p>\n<h3>장점</h3>\n<ul>\n<li>OOP는 재사용성이 높은 코드를 작성할 수 있다.</li>\n</ul>\n<p>—> <strong>중복 소스 관리</strong> : 객체의 특징을 뽑아와서 코드로 작성하므로, 중첩되는 소스코드를 묶어서 관리하는 과정을 통해서 중복 소스를 줄일 수 있다</p>\n<p>—> <strong>재사용성 :</strong> 자주 사용 되는 로직을 라이브러리로 만들어 두면 계속해서 재사용 할 수 있다. 라이브러리를 재사용 하면 다음 프로젝트의 개발 시간이 줄어들고 사용할 때 마다 버그를 수정하면 신뢰성과 버그 감소 효과를 얻을 수 있다.</p>\n<p>—> <strong>공유 :</strong> 다른 사용자의 공개된 라이브러리를 사용하는 방법에 대해서만 인지하면 쉽게 사용할 수 있다. 이는 생산성 향상에 도움을 준다.</p>\n<p>—> <strong>디버그</strong> : 객체 단위로 디버깅을 쉽게 할 수 있다.\n—> <strong>프로그래밍</strong> : 데이터 모델링을 할 때 객체와 matcing 하는 게 수월하기 때문에 요구사항을 보다 명확하게 파악해서 프로그래밍 할 수 있다.</p>\n<h3>단점</h3>\n<ul>\n<li>객체 간의 정보 교환이 모두 메시지 교환을 통해 이뤄지므로 시스템에 많은 Overhead가 발생한다.</li>\n</ul>\n<p>—> 하드웨어의 발전을 통해서 많은 부분 보완됨</p>\n<ul>\n<li>OOP의 단점은 함수형 프로그래밍 패러다임의 등장 배경을 통해서 알 수 있다. 바로 객체가 상태를 갖는다는 점이다. 변수가 존재하고 이 변수를 통해 객체가 예측할 수 없는 상태를 갖게 되어 애플리케이션 내부에서 버그를 발생 시킨다.</li>\n</ul>\n<h3>객체 지향적 설계 원칙 (SOLID)</h3>\n<ul>\n<li>SRP (Single Responsibility Principle) : 단일 책임 원칙\n클래스는 단 하나의 책임을 가져야 하며 클래스를 변경하는 이유는 단 하나의 이유이어야 한다.</li>\n<li>OCP (Open-Closed Principle) : 개방-폐쇄 원칙\n확장에는 열려 있어야 하고 변경에는 닫혀 있어야 한다.</li>\n<li>LSP (Liskov Substitution Principle) : 리스코프 치환 원칙\n상위 타입의 객체를 하위 타입의 객체로 치환해도 상위 타입을 사용하는 프로그램은 정상적으로 작동해야 한다.</li>\n<li>ISP (Interface Segregation Principle) : 인터페이스 분리 원칙\n인터페이스는 그 인터페이스를 사용하는 클라이언트 기준으로 분리해야 한다.</li>\n<li>DIP (Dependency Inversion Principle) : 의존 역전 법칙\n고수준의 모듈은 저수준의 모듈의 구현에 의존되서는 안된다.</li>\n</ul>\n<blockquote>\n<p>객체(Object)와 클래스(Class)의 차이</p>\n</blockquote>\n<p>객체는 상태를 갖고있어 상태가 변경되는 변수나 클래스를 말한다.\n클래스는 객체를 만드는 추상적인 틀이라고 생각하면 된다.</p>\n<p>슈크림 붕어빵과 팥 붕어빵이 있다. 이 두 빵의 필수적인 요소를 간추려 내면 공통적인 붕어빵의 특징이 나온다. 이러한 과정을 후술할 <code>추상화</code>라고 한다.</p>\n<p>추상화로 만들어진 붕어빵은 <code>클래스</code>이다. 붕어빵 클래스로 슈크림 붕어빵과 팥 붕어빵을 만들어 낼 수 있다. 슈크림 붕어빵을 생성할 때 붕어빵 클래스의 변수 Type을 슈크림으로 하고 팥 붕어빵은 팥으로 지정하자. 그렇게 만들어진 슈크림 붕어빵과 팥 붕어빵은 <code>객체</code>이다. 이렇게 만드는 과정을 <code>인스턴스화</code> 라고 한다.</p>\n<h3>추상화</h3>\n<p>추상화는 어떤 사물에 대해서 필수적인 요소 및 핵심 기능들을 간추려 내는 걸 뜻한다.</p>\n<p>예를 들어, 사과와 딸기의 필수적인 요소와 핵심 기능을 간추려 보자.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">사과 : 과일, 달다, 단단하다. 중간 정도의 크기, 빨간색 (풋사과도 있지만.)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">딸기 : 과일, 달다, 물렁하다. 작은 크기, 빨간색</span></span></code></pre>\n<p>그렇다면 정리된 걸 <code>추상화 계층</code>으로 표현할 수 있다</p>\n<blockquote>\n<p>추상화 계층</p>\n</blockquote>\n<p>각 레이어로 분리해서 구별하는 일을 추상화 계층이라고 한다.\nOSI 7계층 등이 추상화 계층에 해당된다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">   과일</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    |</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">(사과, 딸기)</span></span></code></pre>\n<p>과일은 사과와 딸기를 포함하는 개념이다. 그러므로 과일은 사과와 딸기의 상위에 있는 상위 클래스가 된다.</p>\n<h3>상속</h3>\n<p>객체 지향 프로그래밍에서 상속은 중요한 요소로 객체의 구조를 만들거나, 객체의 공통점을 뽑아내서 중복된 코드를 줄일 수 있다.</p>\n<p>예를 들어 수박과 사과를 파는 시뮬레이터를 제작한다고 가정하자. 그렇다면 수박과 사과의 특징을 추출해서 소스코드로 표현하면 아래와 같다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Apple</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">public:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::string name;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">WaterMelon</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">public:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::string name;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"14\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>위의 소스코드를 봤을 때 중복되는 코드 이름과 가격이 보인다. 이걸 상속을 통해서 중복되는 코드를 줄일 수 있다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">public:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::string name;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Apple</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">WaterMelon</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>과일 클래스를 만들어서 사과와 수박이 Fruit를 상속하도록 구현했다. 상속을 하니, 사과와 수박이 부모 클래스로 과일을 둔다는 걸 소스에서 명시적으로 알 수 있게 되었다. 객체의 구조에 대해서 명확하게 알 수 있으므로 효과적인 소스코드 커뮤니케이션이 가능해진다.</p>\n<h3>캡슐화 (Encapsulation)</h3>\n<p>객체나 클래스를 작성할 때 외부에서 멤버 변수나 함수를 호출하여 값을 변경하면 안되는 상황이 존재한다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">public:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::string name;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Apple</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">WaterMelon</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"14\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"15\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">Apple</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;자두&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"16\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">WaterMelon</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;사과&#39;</span></span></span></code></pre>\n<p><code>Apple.name</code>, <code>WaterMelon.name</code> 객체의 멤버 변수에 직접 접근해서 이름을 바꿨다. 이런 상황이 존재하면 되는 걸까? 당연히 이런 상황이 발생하면 되지 않는다. 이런 접근을 막기 위해 숨기는 행동을 <code>은닉화</code>라 한다.</p>\n<p>은닉화에는 <code>public</code>, <code>protected</code>, <code>private</code> 3가지의 <code>접근 지정자</code>가 존재한다.</p>\n<ul>\n<li>public: 전체 공개</li>\n<li>protected: 상속받은 자식 클래스 내에서만 사용 가능</li>\n<li>private: 선언한 클래스만 사용 가능</li>\n</ul>\n<p>위의 이름을 바꾸지 못하게 하는 상황에서는 protected를 사용할 수 있다.</p>\n<p>부모 클래스에서 name, price 선언해 놓았고, Apple, WaterMelon의 내부에서는 이름을 초기화 해야 한다.\n그러므로, 자식 클래스에서 사용할 수 있게 Protected를 사용해야 한다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">protected:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::string name;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Apple</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">Apple</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;사과&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"14\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"15\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">WaterMelon</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Fruit</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">Apple</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"16\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"17\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;수박&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"18\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"19\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"20\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"21\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"22\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">Apple</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;자두&#39;</span><span class=\"mtk3\"> // 에러!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"23\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">WaterMelon</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;사과&#39;</span><span class=\"mtk3\"> // 에러!</span></span></span></code></pre>\n<p>접근 지정자를 통해 데이터나 메소드를 숨겨두어 외부에서 접근이 불가능하게 만들면 예외 상황에 대해서 대응이 쉽게 가능하다. 또한 유지 보수가 쉽게 개발을 할 수 있게 설계할 수 있다. 이는 라이브러리를 제작할 때 매우 중요하다.</p>\n<h3>다형성 (Polymorphism)</h3>\n<p>다형성은 프로그램의 각 요소들(상수, 변수, 식, 함수, 메소드)이 다양한 자료형에 속하는게 허가되는 성질을 뜻한다. 반댓말로 **단형성(Monomorphism)**이 있다. 단형성은 각 요소들이 한가지 형태만 가지는 성질을 말한다.</p>\n<p>OOP에서 상속은 중요한 위치를 가지고 있다. 상속은 앞서 말한대로 코드 길이도 줄여주고 구조를 직관적으로 알아볼 수 있게 해준다. 상속은 다형성의 중요한 예를 사용할 수 있는데, 아래와 같다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Parent</span><span class=\"mtk1\"> {...}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\"> : </span><span class=\"mtk10\">Parent</span><span class=\"mtk1\"> {...}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">Parent parent = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> // 허용</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">Child child = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> // 허용</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">Parent parent = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> // 허용, 다형성</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">Child child = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> // 불가, 에러!</span></span></span></code></pre>\n<p><code>Parent parent = new Child()</code> 를 보면 <code>Parent</code> 타입 임에도 불구하고 <code>Child</code> 타입이 들어간다. 다형성이 뜻하는 <code>여러 타입에 속할 수 있다는걸 허가하는 성질</code>이다. 하지만 그 반대로 <code>Child child = new Parent()</code>는 에러가 나온다. 그 이유는 <code>Child</code> 타입은 <code>Parent</code>의 Property를 가지고 있지만, <code>Parent</code> 는 <code>Child</code>의 Property를 가지고 있지 않기 때문이다.</p>\n<p>정리하자면 형(Type)의 관점에서 상속받은 자식 클래스의 객체는 부모 클래스에 대해 다형성을 가질 수 있다.</p>\n<p>함수(Function)의 관점에서 다형성을 살펴보면 <code>함수(메소드) 오버라이딩(Overriding)</code>과 <code>함수(메소드) 오버로딩(Overloading)</code>두 가지로 나뉠 수 있다.</p>\n<blockquote>\n<p>함수(Function)와 메서드(Method)의 차이</p>\n</blockquote>\n<p><code>함수(Function)</code>는 전역, 지역에서 단독으로 작성될 수 있는 객체를 말한다.\n과거, 절차 지향적 프로세스의 기준으로 작성 되었을 때 반복적으로 사용되는 일을 함수로 만들어 전역에서 사용했다. 그렇기 때문에 함수는 독립적으로 존재해야 했다.</p>\n<p>시간이 지나면서 OOP의 개념이 대두되고 클래스나 객체 내부에서 사용되는 함수는 객체의 상태를 변경하거나 조작하는 일을 했다. 객체에 의존적인 관계가 되어 독립적인 일을 한다는 함수의 뜻과 다른 일을 하므로 명칭이 필요해졌고 <code>메서드(Method)</code> 라고 지칭하게 되었다.</p>\n<p><strong>함수(메소드) 오버로딩(Overloading)</strong></p>\n<p>오버로딩(Overloading) 단어에서 느껴지는 의미는 \"불러올 때 한계치 위에 있는 걸 불러오는\" 느낌이다. 오버로딩이 프로그래밍에서 쓰이는 뜻과 비슷하지만 약간 다르다. 프로그래밍에서 오버로딩은 <code>동일한 이름의 함수 혹은 메서드를 중복 선언하여 같은 이름, 다른 매개변수를 불러오는 방법</code> 을 뜻한다.</p>\n<p>두 함수는 동일한 역할과 같은 Parameter를 받기 때문에 에러가 나와 쓰지 못한다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> // 동일한 함수, 에러!</span></span></span></code></pre>\n<p>두 함수는 Parameter를 통해서 다른 역할을 하는 걸 알 수 있다. 첫 번째 함수는 a, b를 더하는 결과를 반환하고 두 번째 함수는 a, b, c를 덧셈한 결과를 반환한다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> // 다른 역할, 함수 오버로딩</span></span></span></code></pre>\n<p>오버로딩을 지원하지 않는다면 아래와 같이 써야 한다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddDouble</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddTriple</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>오버로딩으로 <code>동일한 Action을 하는 함수명을 Action 단위로 간략하게</code> 나타낼 수 있다.</p>\n<p><strong>함수(메소드) 오버라이딩(Overriding)</strong></p>\n<p>오버라이딩(Overriding) 단어에서 느껴지는 의미는 \"위에 올라타는\" 느낌이다. 오버라이딩이 프로그래밍에서 쓰이는 뜻과 비슷하다. 프로그래밍에서 오버라이딩은 <code>부모 클래스의 메소드의 동작 방법을 덮어써서 변경하는 것</code> 을 말한다.</p>\n<p>질럿과 드라군이라는 객체가 있다. 이 두 객체의 공격을 상속을 통해 구현하면 아래와 같다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Unit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">damage</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Unit</span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Target</span><span class=\"mtk1\">) {...}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">zealot</span><span class=\"mtk1\"> : </span><span class=\"mtk10\">Unit</span><span class=\"mtk1\"> {...}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">dragoon</span><span class=\"mtk1\"> : </span><span class=\"mtk10\">Unit</span><span class=\"mtk1\"> {...}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">// 사용</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">zealot</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(...)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">draoon</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(...)</span></span></span></code></pre>\n<p>앗! 그런데 zealot은 2회 공격을 하기 때문에 일반 공격 메소드를 두 번 불러야 한다. 부모 클래스의 메소드 명과 같지만, 다른 행동이 필요할 때 사용하는게 오버라이딩이다. 오버라이딩을 통해 수정하면 아래와 같다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">zealot</span><span class=\"mtk1\"> : </span><span class=\"mtk10\">Unit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">damage</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Unit</span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Target</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Unit</span><span class=\"mtk1\">::</span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(damage / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, Target);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Unit</span><span class=\"mtk1\">::</span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(damage / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, Target);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>이름을 바꾸지 않고 사용하는 이유를 스타크래프트의 드래그해서 유닛을 컨트롤하는 예시로 들 수 있다.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">Unit* controlUnits = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Unit</span><span class=\"mtk1\">[</span><span class=\"mtk7\">12</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Initialize</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i &lt; </span><span class=\"mtk7\">12</span><span class=\"mtk1\">; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(i % </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">controlUnits</span><span class=\"mtk1\">[i] = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Zealot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">controlUnits</span><span class=\"mtk1\">[i] = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Dragoon</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onRightClick</span><span class=\"mtk1\">(</span><span class=\"mtk10\">type</span><span class=\"mtk1\">, </span><span class=\"mtk10\">cursorPoint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i &lt; </span><span class=\"mtk7\">12</span><span class=\"mtk1\">; i++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (type === </span><span class=\"mtk12\">CURSOR_TYPE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ATTACK</span><span class=\"mtk1\">) </span><span class=\"mtk12\">controlUnits</span><span class=\"mtk1\">[i].</span><span class=\"mtk11\">Attack</span><span class=\"mtk1\">(</span><span class=\"mtk7\">15</span><span class=\"mtk1\">, ...);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"14\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"15\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>오버라이딩을 통해서 동일한 함수를 호출하여 각기 다른 액션을 취하도록 구현할 수 있다.</p>\n<h2>추상 클래스(Abstract Class)</h2>\n<p>코딩을 할 때 클래스를 이용해서 객체를 생성한다. 하지만 이 클래스가 추상화 레벨이 높다면, 객체로 생성해도 제대로 된 동작을 할 수 없다. 그래서 \"이 클래스는 추상화 레벨이 높아 너무 추상적이야. 네가 원하는 게 제대로 안나올 수 있어\" 라고 말해주는 것이 Abstract Class의 역할이다.</p>\n<p>여러 언어에서 추상 클래스는 <code>interface</code>혹은 <code>abstract</code> 로 구현된다. 두 가지 모두 제대로 된 객체를 만들어라 라고 경고하는 의미이다.</p>\n<h2>Reference</h2>\n<p><a href=\"https://itewbm.tistory.com/entry/%EC%B6%94%EC%83%81%ED%81%B4%EB%9E%98%EC%8A%A4abstract-class%EC%9D%98-%EC%A1%B4%EC%9E%AC-%EC%9D%B4%EC%9C%A0\">추상클래스(abstract class)의 존재 이유?</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81_%EC%9E%90%EB%A3%8C%ED%98%95\">추상 자료형 - 위키백과, 우리 모두의 백과사전</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81%ED%99%94_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)\">추상화 (컴퓨터 과학) - 위키백과, 우리 모두의 백과사전</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EB%8B%A4%ED%98%95%EC%84%B1_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)\">다형성 (컴퓨터 과학) - 위키백과, 우리 모두의 백과사전</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%83%81%EC%86%8D_(%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)\">상속 (객체 지향 프로그래밍) - 위키백과, 우리 모두의 백과사전</a></p>\n<p><a href=\"http://samchonlab.kr/221335478047\">ToRy 삼촌 (http://samchonlab.kr) : 네이버 블로그</a></p>\n<p><a href=\"https://xxxelppa.tistory.com/31\">함수와 메서드는 구분해서 말했으면 좋겠다</a></p>\n<p><a href=\"http://tcpschool.com/java/java_polymorphism_concept\">코딩교육 티씨피스쿨</a></p>\n<p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Development_common_sense#object-oriented-programming\">JaeYeopHan/Interview_Question_for_Beginner</a></p>\n<p><a href=\"https://opentutorials.org/course/2517/14133\">오버로딩(Overloading) - 프로그래밍 입문</a></p>\n<p><a href=\"https://sourkent.tistory.com/entry/%EC%83%81%EC%86%8D%EC%8B%9C-%EB%B6%80%EB%AA%A8%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%B4%EB%B2%84%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9\">상속시 부모클래스 맴버함수 사용</a></p>\n<p><a href=\"https://javacpro.tistory.com/31\">[JAVA객체지향디자인패턴] 캡슐화(Encapsulation) 란 무엇인가?</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%BA%A1%EC%8A%90%ED%99%94\">캡슐화 - 위키백과, 우리 모두의 백과사전</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","tags":["All"],"date":"2019-05-01T18:46:16.000Z","image":null,"series":null}}},"pageContext":{"id":"97bb5457-ed09-55ce-8e78-d83bf242e7e5"}},
    "staticQueryHashes": ["3810308631","757159059"]}