{
    "componentChunkName": "component---src-template-post-tsx",
    "path": "/Docker-In-Docker-DIND-설정하기/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/2021년-회고/"},"timeToRead":5,"frontmatter":{"title":"2021년 회고","series":null}},{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","series":null}}],"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2}]},"markdownRemark":{"id":"841b7071-cf8e-59bd-a1b0-b4a2c113bcab","html":"<p>Docker in Docker를 설정하는 이유 첫 번째로 보안의 위험이 있다.</p>\n<p>특히나, Jenkins등의 CI를 사용하는 환경에서 Jenkins가 Docker를 실행할 때, Jenkins나 Docker가 해킹당하면 서버 전체의 권한이 뚫리는거랑 마찬가지이다. 그러므로 소스코드 유출 및 사용자에게 Serve 할 때 문제가 일어나게 된다. 그러므로 Docker로 한번 더 감싸서 Docker Wrapper에 권한을 하나 더 만든다. 그 다음 Docker Wrapper의 가상 환경에 jenkins와 docker 이미지를 만들고 가상 환경의 서버에서 jenkins와 docker 인스턴스를 실행시킨다. 이렇게 되면 jenkins, docker서버가 해킹당하더라도 docker wrapper instance만 해킹이 되기 때문에 안전하다.</p>\n<p>두 번째는 백업이다.</p>\n<p>jenkins와 docker가 단독으로 instance로써 작동할 때 서버가 꺼지거나 하면 백업이 쉽지 않다. 하지만 docker wrapper로 감싸게 되면 백업에 용이하다.</p>\n<h2>Docker In Docker(dind) 설정</h2>\n<ol>\n<li><a href=\"https://github.com/jpetazzo/dind\">jpetazzo/dind</a></li>\n<li><a href=\"http://seapy.com/2083\">Jenkins를 이용한 Docker 빌드</a></li>\n</ol>\n<p>위의 자료를 참고했다. 프로젝트에 아래의 파일들을 적용한다.</p>\n<ul>\n<li>Dockerfile</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FROM jenkins:2.60.3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">MAINTAINER jerome.petazzoni@docker.com</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">USER root</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Let&#39;s start with some basic stuff.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">RUN apt-get update -qq &amp;&amp; apt-get install -qqy \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    apt-transport-https \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ca-certificates \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    curl \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    lxc \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    iptables \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ca-certificates</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Install Docker from Docker Inc. repositories.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">RUN curl -sSL https://get.docker.com/ | sh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Install the magic wrapper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ADD ./wrapdocker /usr/local/bin/wrapdocker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">RUN chmod +x /usr/local/bin/wrapdocker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Define additional metadata for our image.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">VOLUME /var/lib/docker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ENV JAVA_ARGS -Xms512m -Xmx1024m</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">CMD [</span><span class=\"mtk8\">&quot;/usr/local/bin/wrapdocker&quot;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ADD jenkins_dind.sh /usr/local/bin/jenkins_dind.sh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">RUN chmod +x /usr/local/bin/jenkins_dind.sh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">CMD [</span><span class=\"mtk8\">&quot;/usr/local/bin/jenkins_dind.sh&quot;</span><span class=\"mtk1\">]</span></span></span></code></pre>\n<ul>\n<li>wrapdocker</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#!/bin/bash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Ensure that all nodes in /dev/mapper correspond to mapped devices currently loaded by the device-mapper kernel driver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dmsetup mknodes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># First, make sure that cgroups are mounted correctly.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">CGROUP=/sys/fs/cgroup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">:</span><span class=\"mtk1\"> {LOG:=stdio}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[ -d </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> ] ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        mkdir </span><span class=\"mtk12\">$CGROUP</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">mountpoint -q </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        mount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> || {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;Could not make a tmpfs mount. Did you use --privileged?&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">exit</span><span class=\"mtk1\"> 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> [ -d /sys/kernel/security ] &amp;&amp; ! mountpoint -q /sys/kernel/security</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">then</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    mount -t securityfs none /sys/kernel/security || {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;Could not mount /sys/kernel/security.&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;AppArmor detection and --privileged mode might break.&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">fi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Mount the cgroup hierarchies exactly as they are in the parent system.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SUBSYS</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk8\">$(cut -d: -f2 /proc/1/cgroup)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [ -d </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> ] || mkdir </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        mountpoint -q </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                mount -n -t cgroup -o </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> cgroup </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># The two following sections address a bug which manifests itself</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># by a cryptic &quot;lxc-start: no ns_cgroup option specified&quot; when</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># trying to start containers withina container.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># The bug seems to appear when the cgroup hierarchies are not</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># mounted on the exact same directories in the host, and in the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># container.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># Named, control-less cgroups are mounted with &quot;-o name=foo&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># (and appear as such under /proc/&lt;pid&gt;/cgroup) but are usually</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># mounted on a directory named &quot;foo&quot; (without the &quot;name=&quot; prefix).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># Systemd and OpenRC (and possibly others) both create such a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># cgroup. To avoid the aforementioned bug, we symlink &quot;foo&quot; to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># &quot;name=foo&quot;. This shouldn&#39;t have any adverse effect.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> | grep -q ^name= &amp;&amp; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                NAME=</span><span class=\"mtk8\">$(echo </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk8\"> </span><span class=\"mtk1\">|</span><span class=\"mtk8\"> sed s/^name=//)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ln -s </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$NAME</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># Likewise, on at least one system, it has been reported that</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># systemd would mount the CPU and CPU accounting controllers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># (respectively &quot;cpu&quot; and &quot;cpuacct&quot;) with &quot;-o cpuacct,cpu&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># but on a directory called &quot;cpu,cpuacct&quot; (note the inversion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># in the order of the groups). This tries to work around it.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [ </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> = cpuacct,cpu ] &amp;&amp; ln -s </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/cpu,cpuacct</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Note: as I write those lines, the LXC userland tools cannot setup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># a &quot;sub-container&quot; properly if the &quot;devices&quot; cgroup is not in its</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># own hierarchy. Let&#39;s detect this and issue a warning.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">grep -q :devices: /proc/1/cgroup ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;WARNING: the &#39;devices&#39; cgroup should be in its own hierarchy.&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">grep -qw devices /proc/1/cgroup ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;WARNING: it looks like the &#39;devices&#39; cgroup is not mounted.&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Now, close extraneous file descriptors.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">pushd</span><span class=\"mtk1\"> /proc/self/fd &gt;/dev/null</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FD</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">case</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$FD</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># Keep stdin/stdout/stderr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [012])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\"># Nuke everything else</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        *)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">eval</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exec</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$FD</span><span class=\"mtk8\">&gt;&amp;-&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">esac</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">popd</span><span class=\"mtk1\"> &gt;/dev/null</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># If a pidfile is still around (for example after a container restart),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># delete it so that docker can start.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rm -rf /var/run/docker.pid</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># If we were given a PORT environment variable, start as a simple daemon;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># otherwise, spawn a shell as well</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> [ </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$PORT</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\"> ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">then</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">exec</span><span class=\"mtk1\"> dockerd -H 0.0.0.0:</span><span class=\"mtk12\">$PORT</span><span class=\"mtk1\"> -H unix:///var/run/docker.sock \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">$DOCKER_DAEMON_ARGS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> [ </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$LOG</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\"> == </span><span class=\"mtk8\">&quot;file&quot;</span><span class=\"mtk1\"> ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">then</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                dockerd </span><span class=\"mtk12\">$DOCKER_DAEMON_ARGS</span><span class=\"mtk1\"> &amp;&gt;/var/log/docker.log &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                dockerd </span><span class=\"mtk12\">$DOCKER_DAEMON_ARGS</span><span class=\"mtk1\"> &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">fi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">(( timeout </span><span class=\"mtk1\">=</span><span class=\"mtk8\"> </span><span class=\"mtk7\">60</span><span class=\"mtk8\"> </span><span class=\"mtk1\">+</span><span class=\"mtk8\"> SECONDS ))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">until</span><span class=\"mtk1\"> docker info &gt;/dev/null 2&gt;&amp;1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk8\">(( SECONDS </span><span class=\"mtk1\">&gt;=</span><span class=\"mtk8\"> timeout ))</span><span class=\"mtk1\">; </span><span class=\"mtk15\">then</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;Timed out trying to connect to internal docker host.&#39;</span><span class=\"mtk1\"> &gt;&amp;2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">fi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                sleep 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [[ </span><span class=\"mtk12\">$1</span><span class=\"mtk1\"> ]] &amp;&amp; </span><span class=\"mtk11\">exec</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$@</span><span class=\"mtk8\">&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">exec</span><span class=\"mtk1\"> bash --login</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">fi</span></span></span></code></pre>\n<ul>\n<li>jenkins_dind.sh</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#!/bin/bash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">CGROUP=/sys/fs/cgroup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[ -d </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> ] ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  mkdir </span><span class=\"mtk12\">$CGROUP</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">mountpoint -q </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  mount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\"> || {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;Could not make a tmpfs mount. Did you use -privileged?&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">exit</span><span class=\"mtk1\"> 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Mount the cgroup hierarchies exactly as they are in the parent system.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SUBSYS</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk8\">$(cut -d: -f2 /proc/1/cgroup)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [ -d </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> ] || mkdir </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  mountpoint -q </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    mount -n -t cgroup -o </span><span class=\"mtk12\">$SUBSYS</span><span class=\"mtk1\"> cgroup </span><span class=\"mtk12\">$CGROUP</span><span class=\"mtk1\">/</span><span class=\"mtk12\">$SUBSYS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Now, close extraneous file descriptors.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">pushd</span><span class=\"mtk1\"> /proc/self/fd</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FD</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">case</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$FD</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># Keep stdin/stdout/stderr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [012])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># Nuke everything else</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  *)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">eval</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exec</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;</span><span class=\"mtk12\">$FD</span><span class=\"mtk8\">&gt;&amp;-&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">esac</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">popd</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">docker -d &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">exec</span><span class=\"mtk1\"> /usr/bin/java -jar /usr/share/jenkins/jenkins.war</span></span></span></code></pre>\n<h2>참고</h2>\n<ol>\n<li><a href=\"https://nodejs.org/ko/docs/guides/nodejs-docker-webapp/\">Node.js 웹 앱의 도커라이징 | Node.js</a></li>\n<li><a href=\"https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html\">초보를 위한 도커 안내서 - 도커란 무엇인가?</a></li>\n</ol>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","tags":["All"],"date":"2019-05-30T16:33:52.000Z","image":null,"series":null}}},"pageContext":{"id":"841b7071-cf8e-59bd-a1b0-b4a2c113bcab"}},
    "staticQueryHashes": ["3810308631","757159059"]}