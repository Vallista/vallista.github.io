{"componentChunkName":"component---src-template-post-tsx","path":"/DOM-Document-Object-Model/","result":{"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/LDAP-(Lightweight-Directory-Access-Protocol)/"},"timeToRead":7,"frontmatter":{"title":"LDAP (Lightweight Directory Access Protocol)","series":"네트워크"}},{"fields":{"slug":"/2022년-8월-24일/"},"timeToRead":3,"frontmatter":{"title":"2022년 8월 24일","series":null}},{"fields":{"slug":"/2022년-8월-22일/"},"timeToRead":2,"frontmatter":{"title":"2022년 8월 22일","series":null}},{"fields":{"slug":"/2022년-8월-18일/"},"timeToRead":16,"frontmatter":{"title":"2022년 8월 18일","series":null}},{"fields":{"slug":"/2022년-8월-17일/"},"timeToRead":3,"frontmatter":{"title":"2022년 8월 17일","series":null}},{"fields":{"slug":"/2022년-8월-16일/"},"timeToRead":4,"frontmatter":{"title":"2022년 8월 16일","series":null}},{"fields":{"slug":"/2022년-8월-15일/"},"timeToRead":5,"frontmatter":{"title":"2022년 8월 15일","series":null}},{"fields":{"slug":"/2022년-상반기-회고/"},"timeToRead":15,"frontmatter":{"title":"2022년 상반기 회고","series":null}},{"fields":{"slug":"/일정이-촉박한-프로젝트와-깨진-유리창/"},"timeToRead":3,"frontmatter":{"title":"일정이 촉박한 프로젝트와 깨진 유리창","series":null}},{"fields":{"slug":"/사내-워크숍;-이펙티브-타입스크립트,-객체지향의-사실과-오해를-끝내며/"},"timeToRead":3,"frontmatter":{"title":"사내 워크숍; 이펙티브 타입스크립트, 객체지향의 사실과 오해를 끝내며","series":null}},{"fields":{"slug":"/테스트-코드-시작하기/"},"timeToRead":7,"frontmatter":{"title":"테스트 코드 시작하기","series":"프론트엔드 테스팅"}},{"fields":{"slug":"/git-flow;-환상과-현실-그-사이에-서비스/"},"timeToRead":6,"frontmatter":{"title":"git flow; 환상과 현실 그 사이에 서비스","series":null}},{"fields":{"slug":"/블로그-v3-개편/"},"timeToRead":13,"frontmatter":{"title":"블로그 리뉴얼 그리고 회고","series":null}},{"fields":{"slug":"/2021년-회고/"},"timeToRead":21,"frontmatter":{"title":"2021년 회고","series":null}},{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","series":null}}],"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"네트워크","totalCount":1},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2},{"fieldValue":"프론트엔드 테스팅","totalCount":1}]},"markdownRemark":{"id":"bb6eebf1-f482-51e3-83cc-79b9c7226640","html":"<p>DOM (Document Object Model)은 JavaScript로 HTML문서의 구조에 접근해서 변경하거나 추가하는 작업을 가능하게 하는 HTML 문서를 파싱하여 만든 Tree 형태의 Model을 말한다.</p>\n<h2>DOM 생성 원리</h2>\n<p>HTML을 JavaScript에서 컨트롤 및 그려줄 수 있게 Render Tree를 구축하려면, <strong>DOM</strong>을 만들어야한다.</p>\n<p>DOM은 객체를 Node로 만들어서 Tree 형태로 만들어야 한다. 여기서 쓰이는 파서는 문맥 자유 문법(HTML이므로)이 아니기 때문에 브라우저 별 구현이 되어있다. 하지만 브라우저 별 전혀 다른 방법으로 구현이 되어 있지는 않다. 어느정도 W3C에서 제정한 가이드라인을 따른다.</p>\n<p>DOM은 아래와 같은 과정을 거친다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/images/full-process.png?hl=ko\" alt=\"\"></p>\n<ol>\n<li><strong>변환:</strong> 렌더링 엔진에서 OS의 네트워크 레이어나 디스크를 통해 데이터를 읽어와서 지정한 인코딩으로 (UTF-8) 개별 문자로 변환한다.</li>\n<li><strong>토큰화:</strong> 개별 문자로 변환된 문자열을 <a href=\"https://www.w3.org/TR/html5/\">W3C 표준</a>에 지정된 고유한 토큰으로 변환한다. 각 토큰은 특별한 의미와 고유한 규칙을 가진다. (ex: 'html', 'head' 등)</li>\n<li><strong>렉싱</strong>: 변환된 토큰을 속성 및 규칙을 정의하는 '객체'로 변환한다. (Node로 만듬)</li>\n<li><strong>DOM에 링크</strong></li>\n</ol>\n<p>HTML 마크업이 여러 태그간의 관계를 나타내므로 변환된 노드는 각 트리 데이터 구조로 연결된다.</p>\n<p>이 트리 데이터 구조에는 상위, 하위 관계도 포함된다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/images/dom-tree.png?hl=ko\" alt=\"\"></p>\n<p>위의 사진은 최종으로 나오는 결과인 DOM(Document Object Model)이다. 브라우저는 이후 모든 처리에 DOM을 사용한다.</p>\n<p>이 DOM이 생성 되어있지 않으면 JavaScript는 이벤트 등록 등의 작업을 하지 못한다. 이 작업은 JavaScript에서 HTML 문서를 읽기 위한 과정이다. (getElementById 등의 함수로 element를 호출해서 inner html, text등을 변경한다던가 추가한다던가 하는 작업)</p>\n<p>브라우저는 HTML 마크업을 처리할 때 마다 위의 단계를 수행한다.</p>\n<p><strong>바이트 변환 → 토큰 식별 → 노드 변환 → DOM 트리 빌드</strong></p>\n<p>그러므로 이 전체 프로세스를 런타임에서 진행하는데에는 많은 코스트가 든다. 그러므로 root node를 건드는 일을 최대한 자제하도록 하자.</p>\n<h3>Deep Into DOM Process</h3>\n<p>DOM 프로세스를 조금 더 깊게 보도록 하자.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&lt;html&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   &lt;body&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Hello world</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   &lt;/body&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&lt;/html&gt;</span></span></code></pre>\n<p>DOM 상태</p>\n<ul>\n<li>자료 상태 : 자료를 처리하는 상태</li>\n<li>태그 열림 상태 : '&#x3C;'를 만나서 태그가 열려있는 상태</li>\n<li>태그 이름 상태: 'a-Z'를 만나서 '&#x3C;'나 '>'를 만날 때 까지 유지되는 상태. 만나게 되면 자료 상태로 변경된다.</li>\n</ul>\n<p>DOM 토큰 종류</p>\n<ul>\n<li>시작 태그 토큰 : '태그가 시작되었다'를 알리는 토큰</li>\n<li>종료 태그 토큰 : '태그가 종료되었다'를 알리는 토큰</li>\n</ul>\n<ol>\n<li>초기 상태는 '<strong>자료 상태</strong>'이다.</li>\n</ol>\n<ul>\n<li>'&#x3C;'를 만나면 '<strong>태그 열림 상태</strong>'로 변한다.</li>\n<li>'a-Z'를 만나면 '<strong>시작 태그 토큰</strong>'을 생성하며 '<strong>태그 이름 상태</strong>'로 변경된다. 이 상태는 '>'를 만날 때 까지 유지된다.</li>\n<li>각 문자에는 토큰 이름이 붙는다. (ex: html)</li>\n<li>'>' 문자에 도달하면 토큰이 발행된다. 상태는 다시 '자료 상태'</li>\n</ul>\n<ol start=\"2\">\n<li>&#x3C;를 읽고, 그 다음 html을 읽었다. '&#x3C;'를 만났으니 '자료 상태'에서 '태그 열림 상태'가 되고, 'a-Z'를 만났으니 '태그 이름 상태'가 됐다. '>'를 만나서 다시 자료상태가 되었다. 이 때 태그 이름 상태에서 이름을 얻었다. 'html', 토큰으로 방출한다. '<html>'</li>\n<li>이 과정을 반복해서 html과 body가 토큰화 되었다. 그 다음 Hello World의 H를 만낫다. 'a-Z'를 만났으니 '태그 이름 상태' 가 되어 '&#x3C;'를 만날때 까지 유지된다. '</body>'를 만나, 'Hello World'는 이름으로 발행되어 토큰화가 되었다.</li>\n<li>\n</body>를 읽는데 '/'를 만낫다. '**종료 태그 토큰**'을 생성하고 태그 이름 상태로 변경된다.\n</li>\n</ol>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-10.png\" alt=\"\"></p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-11.png\" alt=\"\"></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","tags":["프론트엔드"],"date":"2019-05-07T19:11:27.000Z","image":null,"series":null}}},"pageContext":{"id":"bb6eebf1-f482-51e3-83cc-79b9c7226640"}},"staticQueryHashes":["2580406332","3810308631"],"slicesMap":{}}