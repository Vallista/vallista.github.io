{
    "componentChunkName": "component---src-template-post-tsx",
    "path": "/브라우저-렌더링-과정/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/첩첩산중,-POS-시스템을-대응하자/"},"timeToRead":7,"frontmatter":{"title":"첩첩산중, POS 시스템을 대응하자","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/영수증,-React-그리고-emotion/"},"timeToRead":12,"frontmatter":{"title":"영수증, React 그리고 emotion","series":"React로 영수증 개발하기"}},{"fields":{"slug":"/TypeScript의-interface와-type-alias/"},"timeToRead":7,"frontmatter":{"title":"TypeScript의 interface와 type alias","series":null}},{"fields":{"slug":"/덕-타이핑과-구조적-타이핑/"},"timeToRead":6,"frontmatter":{"title":"덕 타이핑과 구조적 타이핑","series":null}},{"fields":{"slug":"/팀-리딩과-개발-문화에-대한-단상/"},"timeToRead":7,"frontmatter":{"title":"팀 리딩과 개발 문화에 대한 단상","series":null}},{"fields":{"slug":"/글또-6기를-시작하며/"},"timeToRead":2,"frontmatter":{"title":"글또 6기를 시작하며","series":null}},{"fields":{"slug":"/TypeScript에서-Redux-Redux-Saga-아름답게-개발하기/"},"timeToRead":14,"frontmatter":{"title":"TypeScript에서 Redux, Redux Saga 아름답게 개발하기","series":null}},{"fields":{"slug":"/2020년-상반기-회고/"},"timeToRead":10,"frontmatter":{"title":"2020년 상반기 회고","series":null}},{"fields":{"slug":"/면접에서-의미있는-질문을-하고-있나요/"},"timeToRead":4,"frontmatter":{"title":"면접에서 의미있는 질문을 하고 있나요","series":null}},{"fields":{"slug":"/TypeScript-디자인-패턴-메멘토-패턴/"},"timeToRead":8,"frontmatter":{"title":"TypeScript 디자인 패턴 - 메멘토 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-옵저버-패턴/"},"timeToRead":6,"frontmatter":{"title":"TypeScript 디자인 패턴 - 옵저버 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/TypeScript-디자인-패턴-팩토리-패턴/"},"timeToRead":5,"frontmatter":{"title":"TypeScript 디자인 패턴 - 팩토리 패턴","series":"TypeScript 디자인 패턴"}},{"fields":{"slug":"/효율적인-Storybook-컴포넌트-구조-만들기/"},"timeToRead":6,"frontmatter":{"title":"효율적인 Storybook 컴포넌트 구조 만들기","series":null}},{"fields":{"slug":"/Component-분리의-미학/"},"timeToRead":9,"frontmatter":{"title":"컴포넌트 분리의 미학","series":null}},{"fields":{"slug":"/글또-4기를-시작하면서/"},"timeToRead":2,"frontmatter":{"title":"글또 4기를 시작하면서","series":null}},{"fields":{"slug":"/2019년-회고/"},"timeToRead":11,"frontmatter":{"title":"2019년 회고","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-중/"},"timeToRead":8,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (중)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/동시성과-병렬성-Concurrency-Parallelism/"},"timeToRead":2,"frontmatter":{"title":"동시성과 병렬성 (Concurrency & Parallelism)","series":null}},{"fields":{"slug":"/웹-개발자의-지옥-이메일-폼-개발하기/"},"timeToRead":14,"frontmatter":{"title":"웹 개발자의 지옥, 이메일 폼 개발하기","series":null}},{"fields":{"slug":"/우아한형제들-헤커톤-제-1회-우아톤-2019-후기/"},"timeToRead":6,"frontmatter":{"title":"우아한형제들 헤커톤- 제 1회 우아톤 2019 후기","series":null}},{"fields":{"slug":"/놓치기-쉬운-HTML-CSS-지식-몰아보기/"},"timeToRead":9,"frontmatter":{"title":"놓치기 쉬운 HTML/CSS 지식 몰아보기","series":null}},{"fields":{"slug":"/모바일-웹뷰를-탐험하는-개발자를-위한-안내서-상/"},"timeToRead":4,"frontmatter":{"title":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서 (상)","series":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서"}},{"fields":{"slug":"/2019년-7월-회고/"},"timeToRead":2,"frontmatter":{"title":"2019년 7월 회고","series":null}},{"fields":{"slug":"/제너레이터-Generator/"},"timeToRead":8,"frontmatter":{"title":"제너레이터 (Generator)","series":null}},{"fields":{"slug":"/이직을-준비하면서/"},"timeToRead":10,"frontmatter":{"title":"이직을 준비하면서","series":null}},{"fields":{"slug":"/Docker-In-Docker-DIND-설정하기/"},"timeToRead":4,"frontmatter":{"title":"Docker In Docker (DIND) 설정하기","series":null}},{"fields":{"slug":"/Jenkins/"},"timeToRead":1,"frontmatter":{"title":"Jenkins","series":null}},{"fields":{"slug":"/Next에서-Alias-적용하기/"},"timeToRead":1,"frontmatter":{"title":"Next에서 Alias 적용하기","series":null}},{"fields":{"slug":"/Redux/"},"timeToRead":2,"frontmatter":{"title":"Redux","series":null}},{"fields":{"slug":"/Jest-enzyme를-활용한-테스팅-환경/"},"timeToRead":3,"frontmatter":{"title":"Jest, enzyme를 활용한 테스팅 환경","series":null}},{"fields":{"slug":"/HTTP-프로토콜에서-HTTPS-URI-가져오기/"},"timeToRead":1,"frontmatter":{"title":"HTTP 프로토콜에서 HTTPS URI 가져오기","series":null}},{"fields":{"slug":"/CORS-Cross-Origin-Resource-Sharing/"},"timeToRead":1,"frontmatter":{"title":"CORS (Cross Origin Resource Sharing)","series":null}},{"fields":{"slug":"/XSS-Cross-Site-Scripting/"},"timeToRead":1,"frontmatter":{"title":"XSS (Cross-Site-Scripting)","series":null}},{"fields":{"slug":"/동일-출처-정책-Same-Origin-Policy/"},"timeToRead":1,"frontmatter":{"title":"동일 출처 정책 (Same Origin Policy)","series":null}},{"fields":{"slug":"/리듀스-Reduce/"},"timeToRead":1,"frontmatter":{"title":"리듀스 (Reduce)","series":null}},{"fields":{"slug":"/이벤트-버블링-캡쳐링-위임/"},"timeToRead":1,"frontmatter":{"title":"이벤트 버블링, 캡쳐링, 위임","series":null}},{"fields":{"slug":"/클로저-Closure/"},"timeToRead":4,"frontmatter":{"title":"클로저 (Closure)","series":null}},{"fields":{"slug":"/Call-By-Value-Call-By-Reference/"},"timeToRead":1,"frontmatter":{"title":"Call By Value, Call By Reference","series":null}},{"fields":{"slug":"/SEO-Search-Engine-Optimization/"},"timeToRead":1,"frontmatter":{"title":"SEO (Search Engine Optimization)","series":null}},{"fields":{"slug":"/호이스팅-실행-컨텍스트/"},"timeToRead":1,"frontmatter":{"title":"호이스팅, 실행 컨텍스트","series":null}},{"fields":{"slug":"/이벤트-루프-Event-Loop/"},"timeToRead":7,"frontmatter":{"title":"이벤트 루프 (Event Loop)","series":null}},{"fields":{"slug":"/렌더-트리-생성/"},"timeToRead":1,"frontmatter":{"title":"렌더 트리 생성","series":null}},{"fields":{"slug":"/CSSOM-CSS-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"CSSOM (CSS Object Model)","series":null}},{"fields":{"slug":"/DOM-Document-Object-Model/"},"timeToRead":2,"frontmatter":{"title":"DOM (Document Object Model)","series":null}},{"fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","series":null}},{"fields":{"slug":"/SSR-Server-Side-Rendering/"},"timeToRead":1,"frontmatter":{"title":"SSR (Server Side Rendering)","series":null}},{"fields":{"slug":"/SPA-Single-Page-Application/"},"timeToRead":2,"frontmatter":{"title":"SPA (Single Page Application)","series":null}},{"fields":{"slug":"/Virtual-DOM/"},"timeToRead":2,"frontmatter":{"title":"Virtual DOM","series":null}},{"fields":{"slug":"/반응형-웹-적응형-웹/"},"timeToRead":1,"frontmatter":{"title":"반응형 웹, 적응형 웹","series":null}},{"fields":{"slug":"/파싱-Parsing/"},"timeToRead":3,"frontmatter":{"title":"파싱 (Parsing)","series":null}},{"fields":{"slug":"/BNF-Backus-Naur-Form/"},"timeToRead":1,"frontmatter":{"title":"BNF (Backus-Naur Form)","series":null}},{"fields":{"slug":"/RESTFUL-API/"},"timeToRead":5,"frontmatter":{"title":"RESTFUL API","series":null}},{"fields":{"slug":"/객체지향-프로그래밍/"},"timeToRead":8,"frontmatter":{"title":"객체지향 프로그래밍","series":null}},{"fields":{"slug":"/백앤드에서-받은-데이터를-어떻게-하면-가공없이-클라이언트에-적용할-수-있을까/"},"timeToRead":8,"frontmatter":{"title":"백앤드에서 받은 데이터를 어떻게 하면 가공없이 클라이언트에 적용할 수 있을까?","series":null}},{"fields":{"slug":"/COPY와-Command를-이용한-Excel-Export/"},"timeToRead":3,"frontmatter":{"title":"COPY와 Command를 이용한 Excel Export","series":null}},{"fields":{"slug":"/2018년-회고/"},"timeToRead":26,"frontmatter":{"title":"2018년 회고","series":null}},{"fields":{"slug":"/Vue-LifeCycle/"},"timeToRead":3,"frontmatter":{"title":"Vue LifeCycle","series":null}},{"fields":{"slug":"/Vue-Event-Bus/"},"timeToRead":2,"frontmatter":{"title":"Vue Event Bus","series":null}},{"fields":{"slug":"/2017년-회고/"},"timeToRead":4,"frontmatter":{"title":"2017년 회고","series":null}},{"fields":{"slug":"/테스트의-종류/"},"timeToRead":1,"frontmatter":{"title":"테스트의 종류","series":null}},{"fields":{"slug":"/E2E-end-to-end-Test/"},"timeToRead":1,"frontmatter":{"title":"E2E (end to end) Test","series":null}}],"group":[{"fieldValue":"React로 영수증 개발하기","totalCount":2},{"fieldValue":"TypeScript 디자인 패턴","totalCount":3},{"fieldValue":"모바일 웹뷰를 탐험하는 개발자를 위한 안내서","totalCount":2}]},"markdownRemark":{"id":"fb2507bc-fb88-53d5-91b9-f4dafd02e2f4","html":"<p><a href=\"https://d2.naver.com/helloworld/59361\">NAVER D2</a></p>\n<p><a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/constructing-the-object-model?hl=ko\">객체 모델 생성 | Web | Google Developers</a></p>\n<blockquote>\n<p>이 글은 탈리 가르시엘(Tali Garsiel) 저자의 원문을 한글 번역한 Naver D2에 기고된 글을 원문으로, 다양한 자료를 섞었습니다.</p>\n</blockquote>\n<h2>브라우저 (Browser)</h2>\n<p>Browse → 검색, Browser → 검색하는자</p>\n<p>\"Browser(검색 하는 자)\" 이름 답게 사용자가 URI를 브라우저에 요청하면 해당 URI를 검색하여 해당하는 URI를 가진 서버에 자원을 요청하고 URI를 가져와, 브라우저의 윈도우에서 표현해준다. 이 자원은 HTML 문서가 일반적이지만 PDF, Image 다양한 자원의 형태가 넘어올 수 있다. 이러한 자원의 주소는 **URI(Uniform Resource Identifier)**에 의해 정해진다.</p>\n<p>브라우저는 HTML과 CSS <strong>명세에 따라 해석</strong>해서 윈도우 영역에 렌더링 해준다. 명세는 **W3C(World Wide Web Consortium)**에서 제정한다. 과거에는 여러 브라우저가 일부만 W3C에서 제공하는 명세에 따라서 개발자들이 호환성 구현에 어려움을 겪었으나 현재는 대다수의 브라우저가 명세를 따르게 되었다.</p>\n<p>다양한 브라우저들은 공통으로 아래의 기능을 지원한다.</p>\n<ul>\n<li>URI를 입력할 수 있는 주소 표시 줄</li>\n<li>이전 버튼과 다음 버튼</li>\n<li>북마크</li>\n<li>새로 고침 버튼과 작업을 중지 할 수 있는 정지 버튼</li>\n<li>홈 버튼</li>\n</ul>\n<p>물론 브라우저 마다 이 기능 외에도 추가로 지원하는 기능들이 있다.</p>\n<h2>브라우저(Browser)의 구조</h2>\n<blockquote>\n<p>HTTP 1.1 기준</p>\n</blockquote>\n<p>브라우저의 구조는 아래와 같다.</p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-1.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>브라우저의 흐름</p>\n<ol>\n<li>\n<p>사용자 인터페이스에서 유저가 URI를 입력하여 브라우저 엔진에 전달한다.</p>\n</li>\n<li>\n<p>브라우저 엔진에서 URI에 대해 쿠키로 저장한 자료가 있으면 자료 저장소에서 가져온다.</p>\n</li>\n<li>\n<p>렌더링 엔진은 브라우저 엔진에서 가져온 쿠키 값과 URI 데이터를 통신, 자바스크립트 해석기, UI 백엔드 로 전파한다.</p>\n</li>\n<li>\n<p>통신 레이어에 URI에 대해 데이터를 요청하고 응답할 때까지 기다린다.</p>\n</li>\n<li>\n<p>요청받은 데이터에서 JavaScript는 JavaScript 해석기에서 분석하여 렌더링 엔진에서 HTML CSS와 함께 분석한다.</p>\n</li>\n<li>\n<p>브라우저 렌더링 화면에 띄워준다.</p>\n</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li><strong>사용자 인터페이스</strong></li>\n</ol>\n<p>주소 표시 줄, 이전/다음 버튼, 홈버튼, 새로 고침 / 정지 버튼 등 요청한 페이지를 보여주는 창 외의 사용자가 컨트롤 할 수 있는 부분을 일컫는다.\n2. <strong>브라우저 엔진</strong>\n사용자 인터페이스와 렌더링 엔진 사이의 동작을 제어한다.\n3. <strong>렌더링 엔진</strong>\n요청한 URI를 브라우저에서 받아 콘텐츠를 표시해준다. HTML을 요청하면 HTML과 CSS를 파싱하여 창에 보여준다.\n4. <strong>통신</strong>\nHTTP 요청과 같은 네트워크 처리를 담당하는 부분, 이 부분은 독립적인 인터페이스라 각 플랫폼의 하부에서 (OS) 실행된다.\n5. <strong>자바스크립트 해석기</strong>\n자바스크립트를 해석하여 실행해주는 부분\n6. <strong>UI 백엔드</strong>\n렌더링 엔진이 브라우저에 페이지를 Rendering 할 때 Render Tree로 구성된 노드를 가로지르며 그려주는 역할을 한다.\n7. <strong>자료 저장소</strong>\n이 부분은 자료를 저장하는 계층이다. 쿠키 등의 자료가 들어가 있으며, 자료는 컴퓨터의 하드디스크에 저장된다. HTML5에서는 더 쉽게 사용할 수 있도록 <a href=\"https://www.html5rocks.com/en/features/storage\">웹 데이터베이스</a>를 사용할 수 있도록 지원한다.</p>\n<blockquote>\n<p>Chrome은 일반적인 브라우저와 달리, 각 탭마다 렌더링 엔진 인스턴스가 생성된다. (그래서 메모리와 CPU를 많이 먹는다.) CPU → 통신 / 메모리 → 자바스크립트 오브젝트 등.</p>\n</blockquote>\n<h2>렌더링 엔진</h2>\n<p>렌더링 엔진의 역할은 요청 받은 내용을 브라우저의 화면에 표시하는 일이다.</p>\n<p>다양한 형태의 자원을 나타낼 수 있는데 기본적으로 HTML과 Image를 표시한다. Chrome이나 엣지 등의 브라우저에서는 PDF 형태도 지원하는 경우가 있다.</p>\n<ul>\n<li>\n<p>렌더링 엔진의 종류</p>\n<p>iOS : Webkit</p>\n<p>그 외 : Blink, Gecko</p>\n</li>\n</ul>\n<h3>동작 과정</h3>\n<p>렌더링 엔진에서는 다음과 같은 순서를 따른다.</p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-2.png\" alt=\"\"></p>\n<ol>\n<li><strong>DOM 트리 구축을 위한 HTML 파싱</strong></li>\n</ol>\n<p>HTML 문서를 받아서 파싱하고 컨텐츠 트리 내부에서 태그(a, div)를 DOM(Document Object Map) 노드로 변환한다. 그 다음 CSS 파일과 함께 포함된 스타일 요소를 파싱한다. 스타일 정보와 HTML 표시 규칙들은 Render Tree라고 부르는 또 다른 트리를 생성한다.</p>\n<ol start=\"2\">\n<li><strong>렌더 트리 구축</strong></li>\n</ol>\n<p>HTML과 CSS를 파싱해서 만들어진 렌더 트리는 색상 또는 면적 등의 시각적 속성을 갖고 있는 사각형을 포함하고 있다. 정해진 순서대로 렌더링하게 된다.</p>\n<ol start=\"3\">\n<li><strong>렌더 트리 배치</strong></li>\n</ol>\n<p>렌더 트리 생성(구축)이 끝나면 배치가 시작된다. 각 노드가 정확한 위치에 표시되기 위해 이동한다.</p>\n<ol start=\"4\">\n<li><strong>렌더 트리 그리기</strong></li>\n</ol>\n<p>배치를 완료하면 UI 백앤드에서 각 노드를 가로지르며 Paint 작업을 한다.</p>\n<p>여기서 렌더링 엔진은 좀 더 좋은 사용자 경험을 주기 위해서 가능하면 빠르게 내용을 표시하는데 HTML 파싱을 통해 DOM 트리 구축 작업이 끝날 때까지 기다리지 않는다. 1번의 DOM 트리 구축이 계속 갱신되면서 2,3,4번 작업이 진행된다.</p>\n<p>즉, 아까 봤던 통신 레이어에서 네트워크 작업을 계속 진행하면서 네트워크에서 아직 못 받은 내용을 기다림과 동시에 받은 데이터 일부를 화면에 출력하게 된다.</p>\n<p>이 과정은 대다수의 렌더링 엔진이 비슷하게 동작한다.</p>\n<ul>\n<li>\n<p>Webkit의 동작 과정</p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-3.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Gecko의 동작 과정</p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-4.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Gecko는 시각적으로 처리되는 렌더를 **형상 트리(Frame Tree)**라고 표현한다. 각 요소를 **형상(Frame)**이라고 지칭하는 반면 WebKit은 **렌더 트리(Render Tree)**라고 표현하며 각 요소를 **렌더 객체(Render Object)**로 표현한다.</p>\n</li>\n<li>\n<p>Webkit에서 **배치(layout)**이라고 부르는 반면, Gecko에서는 **리플로우(Reflow)**라 표현한다.</p>\n</li>\n<li>\n<p><strong>HTML과 CSS를 각각 파싱한 자료를 합쳐서 렌더 트리를 생성하는 작업을</strong> Webkit에서 **어태치먼트(Attatchment)**라 표현하는 반면, Gecko 에서는 **형상구축(Shape Building)**이라 표현한다.</p>\n</li>\n<li>\n<p>Webkit은 HTML과 Stylesheet를 처음부터 분리하여 작업하는 반면, Gecko는 HTML을 최초로 호출하고 **콘텐츠싱크(Contents Sync)**과정을 두어 Style Sheets를 분리해서 작업한다. 이 작업은 DOM을 생성하는 공정으로 웹킷과 비교하여 의미있는 차이점으로 보진 않는다.</p>\n</li>\n</ul>\n<h2><a href=\"https://www.notion.so/d21964c0-2af1-4b48-9719-94872efa722b\">파싱 (Parsing)</a></h2>\n<h2>HTML</h2>\n<p>HTML은 일반적인 정규 파서로 파싱 할 수 없다. 그 이유는 다음과 같은데.</p>\n<ol>\n<li>HTML은 XML과 같이 문법이 Fit 하지 않고 유연하기 때문에</li>\n<li>HTML 오류에 대한 브라우저의 관용</li>\n<li>JavaScript와 같은 DOM을 조작하는 언어에서 토큰을 추가하거나 수정할 수 있기 때문에 변경에 의해서 재파싱이 이루어지므로</li>\n</ol>\n<p><strong>브라우저에서는 일반적으로 HTML 파서를 따로 개발해서 넣어둔다.</strong></p>\n<h2>DOM</h2>\n<h3><a href=\"https://www.notion.so/05b2fa44-e433-4bb2-9fc3-cd59110f6ddb\">DOM (Document Object Model)</a></h3>\n<h2>CSSOM</h2>\n<h3><a href=\"https://www.notion.so/66bd0de6-0972-4fd9-a82f-f557c172ea1b\">CSSOM (CSS Object Model)</a></h3>\n<h2>Render Tree</h2>\n<h3><a href=\"https://www.notion.so/0ee913e6-9ebe-44c5-821f-f43d1869fa59\">Create Rendering Tree</a></h3>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","fields":{"slug":"/브라우저-렌더링-과정/"},"timeToRead":4,"frontmatter":{"title":"브라우저 렌더링 과정","tags":["All","FrontEnd"],"date":"2019-05-06T19:08:52.000Z","image":null,"series":null}}},"pageContext":{"id":"fb2507bc-fb88-53d5-91b9-f4dafd02e2f4"}},
    "staticQueryHashes": ["3109036493","3810308631"]}