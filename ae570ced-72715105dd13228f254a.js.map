{"version":3,"file":"ae570ced-72715105dd13228f254a.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/pages/resume.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Spacer, Text } from '@vallista-land/core'\nimport { VFC } from 'react'\n\nimport { Seo } from '../components/Seo'\nimport { useConfig } from '../hooks/useConfig'\n\nconst MePage: VFC = () => {\n  const { resume } = useConfig()\n\n  return (\n    <Container>\n      <Seo />\n      <Header>\n        <Wrapper>\n          <Container>\n            <Title>\n              <Container>\n                <Text as='h2' size={48} weight={800}>\n                  {resume.config.name}\n                </Text>\n                <Text as='h2' size={32} weight={800}>\n                  {resume.config.role}\n                </Text>\n              </Container>\n            </Title>\n            <Spacer y={1} />\n            <SubTitle>\n              {resume.config.bio.map((it) => (\n                <Text as='p' size={20} weight={400} lineHeight={40} key={it}>\n                  <span dangerouslySetInnerHTML={{ __html: it }} />\n                </Text>\n              ))}\n              <Container>\n                <Spacer y={1.5} />\n              </Container>\n              <Container row>\n                <Button size='large' width={200} onClick={() => openNewPage(resume.config.github)}>\n                  <Container row center>\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='30'\n                      height='30'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22' />\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      GitHub 방문하기\n                    </Text>\n                  </Container>\n                </Button>\n                <Button size='large' width={220} onClick={() => openNewPage(resume.config.github)}>\n                  <Container row center>\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='30'\n                      height='30'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M10 13a5 5 0 007.54.54l3-3a5 5 0 00-7.07-7.07l-1.72 1.71' />\n                      <path d='M14 11a5 5 0 00-7.54-.54l-3 3a5 5 0 007.07 7.07l1.71-1.71' />\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      이전 블로그 방문하기\n                    </Text>\n                  </Container>\n                </Button>\n              </Container>\n            </SubTitle>\n          </Container>\n        </Wrapper>\n      </Header>\n      <Spacer />\n      <Box id='career'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.careers.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.careers.list.map((it) => (\n              <TwoColumn key={it.name}>\n                <Container>\n                  <div>\n                    <Text as='h3' size={24} weight={500}>\n                      {it.name}\n                    </Text>\n                    <Spacer y={1} />\n                    <Text as='span' size={16}>\n                      {it.startDate} ~ {it.endDate}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.position}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.department}\n                    </Text>\n                    <Spacer y={1} />\n                    <div>\n                      {it.descriptions.map((it_, idx) => (\n                        <Text key={idx}>{it_}</Text>\n                      ))}\n                    </div>\n                  </div>\n                </Container>\n                <Container>\n                  <div>\n                    {it.projects?.map((it_, idx) => (\n                      <Container key={idx}>\n                        <Text size={24} weight={600} as='h3'>\n                          {it_.name}\n                        </Text>\n                        <Spacer y={1} />\n                        <Text size={16}>\n                          {it_.startDate} ~ {it_.endDate}\n                        </Text>\n                        {it_.descriptions.map((it__, idx) => (\n                          <Text size={16} key={idx}>\n                            {it__}\n                          </Text>\n                        ))}\n                        <Spacer y={1} />\n                        <ul>\n                          {it_.which.map((it__, idx) => (\n                            <li key={idx}>\n                              <Text size={14}>{it__}</Text>\n                            </li>\n                          ))}\n                        </ul>\n                        <Spacer y={2} />\n                      </Container>\n                    ))}\n                  </div>\n                </Container>\n              </TwoColumn>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='skills'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.skills.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.skills.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_.title}</Text>\n                          <SubTitleText>\n                            {it_.subTitle.map((it__, idx) => (\n                              <Text size={14} key={idx}>\n                                {it__}\n                              </Text>\n                            ))}\n                          </SubTitleText>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='hobby'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.hobby.description}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.hobby.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_}</Text>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='speaker'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.speaker.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.speaker.list.map((it, idx) => (\n                <li key={idx}>\n                  <Text size={16}>\n                    <a onClick={() => openNewPage(it.url)}>{it.title}</a>\n                  </Text>\n                </li>\n              ))}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='activities'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.activities.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.activities.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='lectures'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.lectures.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.lectures.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='awards'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.awards.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.awards.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n    </Container>\n  )\n\n  function openNewPage(target: string): void {\n    window.open(target, '_blink')\n  }\n}\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Box = styled.div``\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  max-width: 550px;\n`\n\nconst SubTitle = styled.div`\n  max-width: 550px;\n\n  @media screen and (max-width: 1000px) {\n    & > div:last-of-type {\n      flex-direction: column !important;\n\n      & > * {\n        margin-left: 0;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n`\n\nconst Contents = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n\n  ul {\n    list-style: disc;\n    padding-left: 1.2rem;\n  }\n\n  li {\n    margin-bottom: 0.5rem;\n    padding: 0.2rem 0;\n    line-height: 1.4;\n\n    &::marker {\n      ${({ theme }) => css`\n        color: ${theme.colors.HIGHLIGHT.PINK};\n      `}\n    }\n  }\n`\n\nconst TwoColumn = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n\n  & > div:first-of-type {\n    height: auto;\n    box-sizing: border-box;\n    flex: 3;\n    padding-right: 2rem;\n\n    & > div {\n      display: flex;\n      flex-direction: column;\n      gap: 0;\n      position: sticky;\n      top: 85px;\n\n      & > div:last-of-type {\n        ${({ theme }) => css`\n          color: ${theme.colors.PRIMARY.ACCENT_5};\n\n          & > p {\n            margin-bottom: 0.5rem !important;\n          }\n        `}\n      }\n    }\n  }\n\n  & > div:last-of-type {\n    flex: 7;\n  }\n\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n\n    & > div:last-of-type {\n      padding-left: 1rem;\n\n      ${({ theme }) => css`\n        border-left: 3px solid ${theme.colors.HIGHLIGHT.PINK};\n      `}\n    }\n  }\n`\n\nconst SubTitleText = styled.div`\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_5};\n  `}\n`\n\nexport default MePage\n"],"names":["Wrapper","Box","Header","Title","SubTitle","Contents","theme","css","colors","HIGHLIGHT","PINK","TwoColumn","PRIMARY","ACCENT_5","SubTitleText","resume","useConfig","as","size","weight","config","name","role","y","bio","map","it","lineHeight","dangerouslySetInnerHTML","__html","row","width","onClick","openNewPage","github","center","viewBox","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","id","careers","title","list","startDate","endDate","position","department","descriptions","it_","idx","projects","it__","which","skills","subTitle","hobby","description","speaker","url","activities","lectures","awards","target","window","open"],"sourceRoot":""}