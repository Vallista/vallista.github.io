{"version":3,"file":"component---src-pages-index-tsx-4d5d008a84349873c0c6.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/components/ListTable/ListTable.style.tsx","webpack://@vallista-land/blog/./src/components/ListTable/index.tsx","webpack://@vallista-land/blog/./src/pages/index.tsx","webpack://@vallista-land/blog/../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nexport const _TitleWrapper = styled.header<{ underline: boolean }>`\n  ${({ theme, underline }) => css`\n    ${underline &&\n    css`\n      border-bottom: 1px solid ${theme.colors.PRIMARY.ACCENT_4};\n    `}\n  `}\n`\n\nexport const _List = styled.div``\n\nexport const _ListItem = styled.a`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: none !important;\n  border-radius: 6px;\n  padding: 0.625rem 1.5rem;\n  margin: 0 -1.5rem;\n\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_6} !important;\n\n    &:hover {\n      background: ${theme.colors.PRIMARY.ACCENT_2} !important;\n      color: ${theme.colors.PRIMARY.FOREGROUND} !important;\n    }\n\n    & > span:first-of-type {\n      max-width: 85%;\n    }\n\n    & > span:last-of-type {\n      max-width: 15%;\n      white-space: nowrap;\n    }\n\n    &:last-of-type {\n      color: ${theme.colors.PRIMARY.ACCENT_3};\n    }\n  `}\n`\n","import { Container, Spacer, Text } from '@vallista/core'\nimport { navigate } from 'gatsby'\nimport { VFC } from 'react'\n\nimport * as Styled from './ListTable.style'\n\ninterface ListTableProps {\n  title: string\n  list: {\n    name: string\n    slug: string\n    date: string\n  }[]\n  underline?: boolean\n}\n\nexport const ListTable: VFC<ListTableProps> = (props) => {\n  const { title, list, underline = false } = props\n\n  return (\n    <Container>\n      <Styled._TitleWrapper underline={underline}>\n        <Text as='h3' size={32} weight={800}>\n          {title}\n        </Text>\n      </Styled._TitleWrapper>\n      <Spacer y={1} />\n      <Styled._List>\n        {list.map((it) => (\n          <Styled._ListItem key={it.slug} onClick={() => moveToLocation(it.slug)}>\n            <Text as='span' size={16} weight={600}>\n              {it.name}\n            </Text>\n            <Text as='span' size={14} weight={300}>\n              {it.date}\n            </Text>\n          </Styled._ListItem>\n        ))}\n      </Styled._List>\n    </Container>\n  )\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n}\n","import { keyframes } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Text } from '@vallista/core'\nimport { graphql, navigate } from 'gatsby'\nimport { VFC } from 'react'\n\nimport { ListTable } from '../components/ListTable'\nimport { Seo } from '../components/Seo'\nimport { IndexQuery, PageProps, Post } from '../types/type'\nimport { filteredByDraft, getTime } from '../utils'\n\nconst IndexPage: VFC<PageProps<IndexQuery>> = (props) => {\n  const { data } = props\n  const { nodes } = data.allMarkdownRemark\n\n  return (\n    <Container>\n      <Seo name='홈' />\n      <Header>\n        <Wrapper>\n          <Title>\n            <Text as='span' size={48} weight={800}>\n              어서오세요!\n            </Text>\n            <Text as='h1' size={48} weight={800} lineHeight={56}>\n              저는 마광휘입니다.\n            </Text>\n          </Title>\n          <SubTitle>\n            <Text as='p' size={20} weight={400} lineHeight={40}>\n              대한민국 서울에서 <strong>소프트웨어 엔지니어</strong>로 일하고 있어요. 한 분야에 국한되지 않는 여러\n              문제를 해결하는 것에 즐거움을 느낍니다. 공부하고 느낀점을 위주로 블로그에 글을 작성하고 있어요. 최근에는\n              프론트엔드 문제 해결에 관심이 많아, 많은 시간을 쏟고 있어요. 러스트를 기반으로한 웹 생태계가 기대돼요!\n            </Text>\n          </SubTitle>\n          <Button size='large' color='alert' onClick={() => moveToLocation('/posts')}>\n            <Text size={16} weight={800}>\n              블로그 글 보러갈까요?\n            </Text>\n          </Button>\n        </Wrapper>\n      </Header>\n      <Contents>\n        <ListTable title='최근 글' list={filteredNewestPosts(nodes)} />\n      </Contents>\n    </Container>\n  )\n\n  function getSimpleDate(target: string): string {\n    const [, month, day] = getTime(target)\n\n    return `${Number(month)}월 ${Number(day)}일`\n  }\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n\n  function filteredNewestPosts(posts: Post[]): { name: string; slug: string; date: string }[] {\n    const cuttingCount = 5\n\n    return filteredByDraft(posts)\n      .filter((_, idx) => idx < cuttingCount + 1)\n      .map((it) => ({\n        name: it.frontmatter.title,\n        slug: it.fields.slug,\n        date: getSimpleDate(it.frontmatter.date)\n      }))\n  }\n}\n\nconst HandAnimation = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n\n  50% {\n    transform: rotateZ(30deg);\n  }\n\n  100% {\n    transform: rotateZ(0deg);\n  }\n`\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  margin-bottom: 1.5rem;\n  max-width: 550px;\n\n  & > span:first-of-type {\n    position: relative;\n\n    &::after {\n      position: absolute;\n      right: -4rem;\n      top: -0.5rem;\n      content: '✋';\n      display: block;\n      animation: ${HandAnimation} 1s ease-in-out infinite;\n    }\n  }\n`\n\nconst SubTitle = styled.div`\n  max-width: 550px;\n  margin-bottom: 2rem;\n`\n\nconst Contents = styled.section`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          image {\n            publicURL\n          }\n          draft\n        }\n      }\n    }\n  }\n`\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["_TitleWrapper","theme","underline","css","colors","PRIMARY","ACCENT_4","_List","_ListItem","ACCENT_6","ACCENT_2","FOREGROUND","ACCENT_3","ListTable","props","title","list","as","size","weight","y","map","it","onClick","target","slug","navigate","name","date","strings","raw","HandAnimation","keyframes","slice","Wrapper","Header","Title","SubTitle","Contents","posts","nodes","data","allMarkdownRemark","Seo","lineHeight","color","filteredByDraft","filter","_","idx","cuttingCount","frontmatter","fields","getTime","month","day","Number"],"sourceRoot":""}