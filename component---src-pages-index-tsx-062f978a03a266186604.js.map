{"version":3,"file":"component---src-pages-index-tsx-062f978a03a266186604.js","mappings":"kQAWA,ICXoDA,EAASC,EDuEvDC,GAAgBC,EAAAA,EAAAA,IAAH,ICvEiCH,EDuEjC,gJCtEZC,IACHA,EAAMD,EAAQI,MAAM,IAGtBJ,EAAQC,IAAMA,EDkEG,ECjEVD,ID+EHK,GAAO,4HAOPC,GAAM,+EAINC,GAAK,wMAaQL,EAbR,+BAkBLM,GAAQ,gGAKRC,GAAQ,4IAQd,EApH8C,SAACC,GAC7C,IA8C6BC,EA7CrBC,EADSF,EAATG,KACeC,kBAAfF,MAER,OACE,UAAC,KAAD,YACE,SAACG,EAAA,EAAD,CAAKC,KAAK,OACV,SAACV,EAAD,WACE,UAACD,EAAD,YACE,UAACE,EAAD,YACE,SAAC,KAAD,CAAMU,GAAG,OAAOC,KAAM,GAAIC,OAAQ,IAAlC,qBAGA,SAAC,KAAD,CAAMF,GAAG,KAAKC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAjD,4BAIF,SAACZ,EAAD,WACE,UAAC,KAAD,CAAMS,GAAG,IAAIC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAhD,wBACY,2CADZ,4JAMF,SAAC,KAAD,CAAQF,KAAK,QAAQG,MAAM,QAAQC,QAAS,kBAmB5BC,EAnBiD,cAoBvEC,EAAAA,EAAAA,UAASD,GADX,IAAwBA,GAnBhB,UACE,SAAC,KAAD,CAAML,KAAM,GAAIC,OAAQ,IAAxB,kCAMN,SAACV,EAAD,WACE,SAACgB,EAAA,EAAD,CAAWC,MAAM,OAAOC,MAeDhB,EAf2BC,GAkB/CgB,EAAAA,EAAAA,IAAgBjB,GACpBkB,QAAO,SAACC,EAAGC,GAAJ,OAAYA,EAAMC,KACzBC,KAAI,SAACC,GAAD,MAAS,CACZlB,KAAMkB,EAAGC,YAAYT,MACrBU,KAAMF,EAAGG,OAAOD,KAChBE,MAlBiBf,EAkBGW,EAAGC,YAAYG,KAjBvC,GAAuBC,EAAAA,EAAAA,IAAQhB,GAAtBiB,EAAT,KAAgBC,EAAhB,KAEUC,OAAOF,GAAjB,KAA4BE,OAAOD,GAAnC,MAHF,IAAuBlB,EACrB,EAASiB,EAAOC","sources":["webpack://@vallista-land/blog/./src/pages/index.tsx","webpack://@vallista-land/blog/../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { keyframes } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { Button, Container, Text } from '@vallista-land/core'\r\nimport { graphql, navigate } from 'gatsby'\r\nimport { VFC } from 'react'\r\n\r\nimport { ListTable } from '../components/ListTable'\r\nimport { Seo } from '../components/Seo'\r\nimport { IndexQuery, PageProps, Post } from '../types/type'\r\nimport { filteredByDraft, getTime } from '../utils'\r\n\r\nconst IndexPage: VFC<PageProps<IndexQuery>> = (props) => {\r\n  const { data } = props\r\n  const { nodes } = data.allMarkdownRemark\r\n\r\n  return (\r\n    <Container>\r\n      <Seo name='홈' />\r\n      <Header>\r\n        <Wrapper>\r\n          <Title>\r\n            <Text as='span' size={48} weight={800}>\r\n              어서오세요!\r\n            </Text>\r\n            <Text as='h1' size={48} weight={800} lineHeight={56}>\r\n              저는 마광휘입니다.\r\n            </Text>\r\n          </Title>\r\n          <SubTitle>\r\n            <Text as='p' size={20} weight={400} lineHeight={40}>\r\n              대한민국 서울에서 <strong>소프트웨어 엔지니어</strong>로 일하고 있어요. 한 분야에 국한되지 않는 여러\r\n              문제를 해결하는 것에 즐거움을 느낍니다. 공부하고 느낀점을 위주로 블로그에 글을 작성하고 있어요. 최근에는\r\n              프론트엔드 문제 해결에 관심이 많아, 많은 시간을 쏟고 있어요. 러스트를 기반으로한 웹 생태계가 기대돼요!\r\n            </Text>\r\n          </SubTitle>\r\n          <Button size='large' color='alert' onClick={() => moveToLocation('/posts')}>\r\n            <Text size={16} weight={800}>\r\n              블로그 글 보러갈까요?\r\n            </Text>\r\n          </Button>\r\n        </Wrapper>\r\n      </Header>\r\n      <Contents>\r\n        <ListTable title='최근 글' list={filteredNewestPosts(nodes)} />\r\n      </Contents>\r\n    </Container>\r\n  )\r\n\r\n  function getSimpleDate(target: string): string {\r\n    const [, month, day] = getTime(target)\r\n\r\n    return `${Number(month)}월 ${Number(day)}일`\r\n  }\r\n\r\n  function moveToLocation(target: string): void {\r\n    navigate(target)\r\n  }\r\n\r\n  function filteredNewestPosts(posts: Post[]): { name: string; slug: string; date: string }[] {\r\n    const cuttingCount = 5\r\n\r\n    return filteredByDraft(posts)\r\n      .filter((_, idx) => idx < cuttingCount + 1)\r\n      .map((it) => ({\r\n        name: it.frontmatter.title,\r\n        slug: it.fields.slug,\r\n        date: getSimpleDate(it.frontmatter.date)\r\n      }))\r\n  }\r\n}\r\n\r\nconst HandAnimation = keyframes`\r\n  0% {\r\n    transform: rotateZ(0);\r\n  }\r\n\r\n  50% {\r\n    transform: rotateZ(30deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotateZ(0deg);\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 900px;\r\n  padding: 2rem;\r\n`\r\n\r\nconst Header = styled.header`\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  max-width: 550px;\r\n\r\n  & > span:first-of-type {\r\n    position: relative;\r\n\r\n    &::after {\r\n      position: absolute;\r\n      right: -4rem;\r\n      top: -0.5rem;\r\n      content: '✋';\r\n      display: block;\r\n      animation: ${HandAnimation} 1s ease-in-out infinite;\r\n    }\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  max-width: 550px;\r\n  margin-bottom: 2rem;\r\n`\r\n\r\nconst Contents = styled.section`\r\n  width: 100%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 900px;\r\n  padding: 2rem;\r\n`\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date\r\n          image {\r\n            publicURL\r\n          }\r\n          draft\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["strings","raw","HandAnimation","keyframes","slice","Wrapper","Header","Title","SubTitle","Contents","props","posts","nodes","data","allMarkdownRemark","Seo","name","as","size","weight","lineHeight","color","onClick","target","navigate","ListTable","title","list","filteredByDraft","filter","_","idx","cuttingCount","map","it","frontmatter","slug","fields","date","getTime","month","day","Number"],"sourceRoot":""}