{"version":3,"file":"24527fd91f09a965b3de7675dd3d25f3404ee39d-dd00e3e055cbd7cf91da.js","mappings":"qNAgBaA,EAAiC,SAACC,GAC7C,IAAQC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,KAAf,EAA2CF,EAAtBG,UAAAA,OAArB,SAEA,OACE,UAAC,KAAD,YACE,SAACC,EAAD,CAAcD,UAAWA,EAAzB,UACE,SAAC,KAAD,CAAME,GAAG,KAAKC,KAAM,GAAIC,OAAQ,IAAhC,SACGN,OAGL,SAAC,KAAD,CAAQO,EAAG,KACX,SAACC,EAAD,UACGP,EAAKQ,KAAI,SAACC,GAAD,OACR,UAACC,EAAD,CAAwBC,QAAS,kBAajBC,EAbsCH,EAAGI,UAc/DC,EAAAA,EAAAA,IAASF,GADX,IAAwBA,GAbhB,WACE,SAAC,KAAD,CAAMT,GAAG,OAAOC,KAAM,GAAIC,OAAQ,IAAlC,SACGI,EAAGM,QAEN,SAAC,KAAD,CAAMZ,GAAG,OAAOC,KAAM,GAAIC,OAAQ,IAAlC,SACGI,EAAGO,SALOP,EAAGI,eAkBtBX,GAAY,sCACd,gBAAGe,EAAH,EAAGA,MAAOhB,EAAV,EAAUA,UAAV,OAA0BiB,EAAAA,EAAAA,IACxBjB,IACFiB,EAAAA,EAAAA,IADW,2BAEkBD,EAAME,OAAOC,QAAQC,SAFvC,QADX,UADc,KASZd,GAAI,sCAEJG,GAAQ,mLASV,gBAAGO,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,SACQD,EAAME,OAAOC,QAAQE,SAD9B,iCAIgBL,EAAME,OAAOC,QAAQG,SAJrC,oBAKWN,EAAME,OAAOC,QAAQI,WALhC,8HAkBWP,EAAME,OAAOC,QAAQK,SAlBhC,WATU,M,8ECzDP,IAAMC,EAAoB,YAM1B,SAASC,EAAOC,GACrB,IAAMC,EALD,SAAuBD,GAC5B,OAAOA,EAAKE,MAAMJ,GAAmBlB,KAAI,SAACC,GAAD,OAAQsB,OAAOtB,EAAGuB,SAAS,KAAOvB,EAAGqB,MAAM,KAAK,GAAKrB,MAI/EwB,CAAcL,GAC7B,OAAO,IAAIM,KAAKL,EAAO,GAAIA,EAAO,GAAK,EAAGA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAG7E,SAASM,EAAQnB,GACtB,IAAMoB,EAAYpB,EAAKc,MAAMJ,GAC7B,MAAO,CAACU,EAAU,IAAM,IAAKA,EAAU,IAAM,IAAKA,EAAU,IAAM","sources":["webpack://@vallista-land/blog/./src/components/ListTable/index.tsx","webpack://@vallista-land/blog/./src/utils/index.ts"],"sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { Container, Spacer, Text } from '@vallista-land/core'\r\nimport { navigate } from 'gatsby'\r\nimport { VFC } from 'react'\r\n\r\ninterface ListTableProps {\r\n  title: string\r\n  list: {\r\n    name: string\r\n    slug: string\r\n    date: string\r\n  }[]\r\n  underline?: boolean\r\n}\r\n\r\nexport const ListTable: VFC<ListTableProps> = (props) => {\r\n  const { title, list, underline = false } = props\r\n\r\n  return (\r\n    <Container>\r\n      <TitleWrapper underline={underline}>\r\n        <Text as='h3' size={32} weight={800}>\r\n          {title}\r\n        </Text>\r\n      </TitleWrapper>\r\n      <Spacer y={1} />\r\n      <List>\r\n        {list.map((it) => (\r\n          <ListItem key={it.slug} onClick={() => moveToLocation(it.slug)}>\r\n            <Text as='span' size={16} weight={600}>\r\n              {it.name}\r\n            </Text>\r\n            <Text as='span' size={14} weight={300}>\r\n              {it.date}\r\n            </Text>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n\r\n  function moveToLocation(target: string): void {\r\n    navigate(target)\r\n  }\r\n}\r\n\r\nconst TitleWrapper = styled.header<{ underline: boolean }>`\r\n  ${({ theme, underline }) => css`\r\n    ${underline &&\r\n    css`\r\n      border-bottom: 1px solid ${theme.colors.PRIMARY.ACCENT_4};\r\n    `}\r\n  `}\r\n`\r\n\r\nconst List = styled.div``\r\n\r\nconst ListItem = styled.a`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: none !important;\r\n  border-radius: 6px;\r\n  padding: 0.625rem 1.5rem;\r\n  margin: 0 -1.5rem;\r\n\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.PRIMARY.ACCENT_6} !important;\r\n\r\n    &:hover {\r\n      background: ${theme.colors.PRIMARY.ACCENT_2} !important;\r\n      color: ${theme.colors.PRIMARY.FOREGROUND} !important;\r\n    }\r\n\r\n    & > span:first-of-type {\r\n      max-width: 85%;\r\n    }\r\n\r\n    & > span:last-of-type {\r\n      max-width: 15%;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    &:last-of-type {\r\n      color: ${theme.colors.PRIMARY.ACCENT_3};\r\n    }\r\n  `}\r\n`\r\n","// eslint-disable-next-line no-useless-escape\r\nexport const SPLIT_DATE_FORMAT = /[\\-\\+ :T]/\r\n\r\nexport function translateDate(time: string): number[] {\r\n  return time.split(SPLIT_DATE_FORMAT).map((it) => Number(it.includes('.') ? it.split('.')[0] : it))\r\n}\r\n\r\nexport function toDate(time: string): Date {\r\n  const result = translateDate(time)\r\n  return new Date(result[0], result[1] - 1, result[2], result[3], result[4], result[5])\r\n}\r\n\r\nexport function getTime(date: string): [string, string, string] {\r\n  const translate = date.split(SPLIT_DATE_FORMAT)\r\n  return [translate[0] || '0', translate[1] || '0', translate[2] || '0']\r\n}\r\n"],"names":["ListTable","props","title","list","underline","TitleWrapper","as","size","weight","y","List","map","it","ListItem","onClick","target","slug","navigate","name","date","theme","css","colors","PRIMARY","ACCENT_4","ACCENT_6","ACCENT_2","FOREGROUND","ACCENT_3","SPLIT_DATE_FORMAT","toDate","time","result","split","Number","includes","translateDate","Date","getTime","translate"],"sourceRoot":""}