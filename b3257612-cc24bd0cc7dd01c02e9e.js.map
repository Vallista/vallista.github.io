{"version":3,"file":"b3257612-cc24bd0cc7dd01c02e9e.js","mappings":"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","sources":["webpack://@vallista/blog/../../../src/components/Collapse/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Children, FC, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { createContext } from '../../utils/createContext'\nimport { CollapseProps, CollapseSizeType } from './type'\nimport { useCollapse } from './useCollapse'\n\n/**\n * # Collapse\n * \n * 데이터를 폴딩하고 보여주는데 최적화된 컴포넌트 입니다.\n * \n * @props {CollapseProps} {@link CollapseProps} 기본적인 인자\n * \n * @example ```tsx\n * <Collapse title='Question A'>\n    <Text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n      magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n      consequat.\n    </Text>\n  </Collapse>\n * ```\n */\nexport const Collapse: FC<Partial<CollapseProps>> = (props) => {\n  const { title, subtitle, fold, expanded, size, card, children } = useCollapse(props)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const [contentHeight, setContentHeight] = useState(0)\n\n  useEffect(() => {\n    if (!contentRef.current) return\n\n    setContentHeight(contentRef.current.clientHeight)\n  }, [contentRef])\n\n  const contentsOptions = contentRef.current ? { height: expanded ? `${contentHeight / 16}rem` : 0 } : {}\n\n  return (\n    <Container card={card}>\n      <Header size={size}>\n        <Button onClick={fold} expanded={expanded}>\n          <HeaderContents size={size}>\n            {title}\n            <Arrow expanded={expanded}>\n              <svg\n                viewBox='0 0 24 24'\n                width='24'\n                height='24'\n                stroke='currentColor'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                fill='none'\n                shapeRendering='geometricPrecision'\n              >\n                <path d='M18 15l-6-6-6 6' />\n              </svg>\n            </Arrow>\n          </HeaderContents>\n        </Button>\n        {subtitle && <SubTitle>{subtitle}</SubTitle>}\n      </Header>\n      <Contents ref={contentRef} style={contentsOptions}>\n        <div>{children}</div>\n      </Contents>\n    </Container>\n  )\n}\n\nconst [CollapseContext, useContext] = createContext<{\n  expandedTarget: string | null\n  setExpandedTarget: (key: string) => void\n}>()\n\nexport const useCollapseContext = useContext\n\n/**\n * # CollapseGroup\n * \n * Collapse를 공유하는 그룹입니다.\n * \n * @example ```tsx\n * \n  <CollapseGroup>\n    <Collapse title='Question A'>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n        dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n        ea commodo consequat.\n      </Text>\n    </Collapse>\n\n    <Collapse title='Question B'>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n        dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n        ea commodo consequat.\n      </Text>\n    </Collapse>\n  </CollapseGroup>\n * ```\n */\nexport const CollapseGroup: FC<{ children: React.ReactNode }> = ({ children }) => {\n  const collapses = useMemo(() => {\n    const result: { key: string; expanded: boolean }[] = []\n    Children.forEach(children, (c) => {\n      if (!!c && typeof c === 'object' && 'props' in c) {\n        result.push({ key: c.props?.title, expanded: c.props?.defaultExpanded || true })\n      }\n    })\n\n    return result\n  }, [children])\n\n  const [expandedTarget, setExpandedTarget] = useState(() => {\n    return collapses.find((it) => (it.expanded ? it.key : null))?.key || null\n  })\n\n  return (\n    <CollapseContext state={{ expandedTarget, setExpandedTarget }}>\n      <CollapsesWrapper>{children}</CollapsesWrapper>\n    </CollapseContext>\n  )\n}\n\nconst CollapsesWrapper = styled.div`\n  & > div:not(:last-of-type) {\n    border-bottom: none;\n  }\n`\n\nconst Container = styled.div<{ card?: boolean }>`\n  text-align: left;\n  ${({ theme, card }) => css`\n    border-top: 1px solid ${theme.colors.PRIMARY.ACCENT_2};\n    border-bottom: 1px solid ${theme.colors.PRIMARY.ACCENT_2};\n\n    ${card &&\n    css`\n      padding: 1.5rem;\n      box-shadow: ${theme.shadows.SMALL};\n      border-radius: 5px;\n      border: none;\n    `}\n  `}\n`\n\nconst Header = styled.h3<{ size?: CollapseSizeType }>`\n  ${({ size }) =>\n    size === 'small'\n      ? css`\n          font-size: 1rem;\n          font-weight: 500;\n        `\n      : css`\n          font-weight: 600;\n          font-size: 1.25rem;\n        `}\n  hyphens: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n`\n\nconst SubTitle = styled.span`\n  font-size: 0.75rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  margin-bottom: 0;\n  display: block;\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_5};\n  `}\n`\n\nconst Button = styled.button<{ expanded: boolean }>`\n  width: 100%;\n  margin-bottom: 0;\n  margin-top: 0;\n\n  border: unset;\n  background: unset;\n  padding: unset;\n  margin: unset;\n  font: unset;\n  text-align: unset;\n  appearance: unset;\n`\n\nconst HeaderContents = styled.span<{ size?: CollapseSizeType }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  vertical-align: baseline;\n\n  ${({ size }) =>\n    size === 'small'\n      ? css`\n          padding: 0.75rem 0;\n        `\n      : css`\n          padding: 1.5rem 0;\n        `}\n\n  ${({ theme }) =>\n    css`\n      color: ${theme.colors.PRIMARY.FOREGROUND};\n    `};\n`\n\nconst Arrow = styled.span<{ expanded: boolean }>`\n  transition: transform 0.2s ease;\n  ${({ expanded }) =>\n    expanded &&\n    css`\n      transform: rotate(180deg);\n    `}\n`\n\nconst Contents = styled.div`\n  font-size: 1rem;\n  line-height: 26px;\n  overflow-y: hidden;\n  will-change: height;\n  transition: height 0.2s ease;\n\n  & > div {\n    margin: 1rem 0;\n  }\n`\n"],"names":["T","g","title","A","subtitle","Z","fold","d","expanded","b","size","I","card","X","children","B","h","l","N","x","i","W","Y","current","clientHeight","m","height","V","s","z","G","p","onClick","e","k","viewBox","width","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","J","o","ref","style","n","F","R","M","r","_ref","H","y","forEach","push","key","props","defaultExpanded","find","state","expandedTarget","setExpandedTarget","a","C","process","env","NODE_ENV","target","label","name","styles","toString","c","_ref2","theme","u","colors","PRIMARY","ACCENT_2","shadows","SMALL","v","t","_ref3","_ref4","ACCENT_5","Q","D","_ref5","_ref6","FOREGROUND","w","_ref7"],"sourceRoot":""}