{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/post.tsx"],"names":["PostHeader","styled","Color","props","backgroundImage","PostContents","data","markdownRemark","html","frontmatter","title","date","image","tags","translateDateFormat","useMemo","toDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","description","excerpt","article","justifyContent","overflow","padding","scrollBehavior","id","flexDirection","width","height","backgroundColor","maxWidth","publicURL","style","marginTop","marginBottom","timeToRead","Link","to","fontWeight","map","it","borderRadius","marginRight","display","color","fontSize","dangerouslySetInnerHTML","__html","paddingBottom"],"mappings":"qNAsDMA,EAAaC,uBAAH,wDAAGA,CAAH,4HAKLC,eAIP,SAACC,GAAD,OAAWA,EAAMC,gBAAN,oDAEWD,EAAMC,gBAFjB,2cA2BAF,cA3BA,yCA+BAA,cA/BA,0BAqCTG,EAAeJ,wBAAH,0DAAGA,CAAH,qFA2DlB,UAnD+C,SAAC,GAAc,IAAZK,EAAW,EAAXA,KACxCC,EAAmBD,EAAnBC,eACAC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACNC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAEtBC,GAAsBC,cAAQ,kBAAMC,QAAOL,KAAO,CAACA,IACnDM,EAAOH,EAAoBI,cAC3BC,GAASL,EAAoBM,WAAa,GAAGC,WAAWC,SAAS,EAAG,KACpEC,EAAMT,EAAoBU,UAAUH,WAAWC,SAAS,EAAG,KAEjE,OACE,gCACE,gBAAC,IAAD,CAAKZ,MAAOH,EAAeE,YAAYC,MAAOe,YAAalB,EAAemB,QAASC,QAASpB,EAAeC,OAC3G,gBAAC,IAAiBF,EAChB,gBAAC,IAAD,CAAQsB,eAAe,SAASC,SAAS,OAAOC,QAAQ,SAASC,eAAe,SAASC,GAAG,YAC1F,gBAAC,IAAD,CAAQC,cAAc,SAASC,MAAM,OAAOC,OAAO,OAAOC,gBAAiBlC,cAAgBmC,SAAS,SAClG,gBAACrC,EAAD,CAAYgC,GAAG,cAAc5B,gBAAiBQ,aAAF,EAAEA,EAAO0B,WACnD,gCACE,2BACE,0BAAK5B,GACL,qBAAG6B,MAAO,CAAEC,UAAW,MAAOC,aAAc,MAAQxB,EAApD,IAA2DE,EAA3D,IAAmEI,EAAnE,YAAiFhB,EAAemC,WAAhG,UACA,qBAAGH,MAAO,CAAEC,UAAW,SAAvB,SAAuC,gBAAC,EAAAG,KAAD,CAAMC,GAAG,IAAIL,MAAO,CAAEM,WAAY,MAAlC,cACvC,yBACGhC,EAAKiC,KAAI,SAAAC,GAAE,OACV,uBAAKR,MAAO,CACVH,gBAAiBlC,aACjB8C,aAAc,OACdlB,QAAS,cACTmB,YAAa,MACbR,aAAc,MACdS,QAAS,eACTC,MAAOjD,cACP2C,WAAY,IACZO,SAAU,KAETL,UAOb,gBAAC1C,EAAD,CAAc2B,GAAG,gBAAgBqB,wBAAyB,CAAEC,OAAQ9C,KACpE,uBAAK+B,MAAO,CAAEgB,cAAe","file":"component---src-pages-post-tsx-9804db209454e84ddd29.js","sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql, Link, PageProps } from 'gatsby';\nimport PageTemplate from '../components/PageTemplate';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout';\nimport { Color, toDate } from '../utils';\n\nimport SEO from '../components/seo'\n\ninterface IDataProps {\n  allMarkdownRemark: {\n    edges: Array<{\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        },\n        frontmatter: {\n          title: string\n          date: string\n          category: string\n          tags: string[]\n          image?: {\n            publicURL: string\n          }\n        }\n      }\n    }>\n    group: Array<{ fieldValue: string; totalCount: number }>\n  }\n  markdownRemark: {\n    html: string\n    fields: {\n      slug: string\n    }\n    excerpt: string\n    timeToRead: number\n    headings: {\n      id: string\n      value: string\n      depth: number\n    }[]\n    frontmatter: {\n      title: string\n      date: string\n      category: string\n      tags: string[]\n      image?: {\n        publicURL: string\n      }\n    }\n  }\n}\n\nconst PostHeader = styled.header<{ backgroundImage: string }>`\n  width: 100%;\n  max-width: 960px;\n  min-height: 240px;\n  height: auto;\n  color: ${Color.GRAY_400};\n  padding: 24px 50px;\n  border-bottom: 1px solid #e2e8f0;\n\n  ${(props) => props.backgroundImage ? `\n  position: relative;\n  background-image: url(${props.backgroundImage});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1;\n  }\n\n  & > div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n    display: flex;\n    flex-direction: column;\n\n    & > h1 {\n      color: ${Color.GRAY_900};\n    }\n\n    & > p {\n      color: ${Color.GRAY_600};\n    }\n  }\n  `: ``}\n`\n\nconst PostContents = styled.section`\n  width: 100%;\n  max-width: 960px;\n  height: auto;\n  box-sizing: border-box;\n  padding: 24px 50px;\n`\n\nconst Post: React.VFC<PageProps<IDataProps>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { html, frontmatter } = markdownRemark\n  const { title, date, image, tags } = frontmatter\n\n  const translateDateFormat = useMemo(() => toDate(date), [date])\n  const year = translateDateFormat.getFullYear()\n  const month = (translateDateFormat.getMonth() + 1).toString().padStart(2, '0')\n  const day = translateDateFormat.getDate().toString().padStart(2, '0')\n\n  return (\n    <>\n      <SEO title={markdownRemark.frontmatter.title} description={markdownRemark.excerpt} article={markdownRemark.html} />\n      <PageTemplate {...data}>\n        <Layout justifyContent='center' overflow='auto' padding='0 48px' scrollBehavior='smooth' id='contents'>\n          <Layout flexDirection='column' width='auto' height='auto' backgroundColor={Color.GRAY_900} maxWidth='960px'>\n            <PostHeader id='post-header' backgroundImage={image?.publicURL}>\n              <>\n                <div>\n                  <h1>{title}</h1>\n                  <p style={{ marginTop: '6px', marginBottom: '0' }}>{year}.{month}.{day} - 읽는데 약 {markdownRemark.timeToRead}분 걸려요!</p>\n                  <p style={{ marginTop: '-2px' }}>글쓴이 - <Link to='/' style={{ fontWeight: 600 }}>@Vallista</Link></p>\n                  <p>\n                    {tags.map(it => (\n                      <div style={{\n                        backgroundColor: Color.RED_100,\n                        borderRadius: '12px',\n                        padding: '5px 8px 6px',\n                        marginRight: '6px',\n                        marginBottom: '6px',\n                        display: 'inline-block',\n                        color: Color.GRAY_900,\n                        fontWeight: 600,\n                        fontSize: 14,\n                      }}>\n                        {it}\n                      </div>\n                    ))}\n                  </p>\n                </div>\n              </>\n            </PostHeader>\n            <PostContents id=\"post-contents\" dangerouslySetInnerHTML={{ __html: html }} />\n            <div style={{ paddingBottom: '30vh' }} />\n          </Layout>\n        </Layout>\n      </PageTemplate>\n    </>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    allMarkdownRemark(\n      sort: {fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              relativePath\n              relativeDirectory\n              root\n              sourceInstanceName\n              publicURL\n            }\n          }\n          html\n        }\n      }\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      excerpt\n      fields {\n        slug\n      }\n      headings {\n        id\n        value\n        depth\n      }\n      timeToRead\n      frontmatter {\n        title\n        tags\n        date\n        image {\n          relativePath\n          relativeDirectory\n          root\n          sourceInstanceName\n          publicURL\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}