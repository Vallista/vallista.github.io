{"version":3,"file":"16afea63-90f3917d5533d87494fb.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/components/Header/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport { Modal, Spacer, Text, Toggle, useTheme } from '@vallista-land/core'\r\nimport { useEffect, useState, VFC } from 'react'\r\n\r\nimport { isDarkMode, onChangeThemeEvent } from '../../utils'\r\n\r\ninterface HeaderProps {\r\n  fold: boolean\r\n  folding: () => void\r\n}\r\n\r\nconst fontSizeControllerMapper = [14, 16, 18, 20]\r\n\r\nexport const Header: VFC<HeaderProps> = (props) => {\r\n  const { fold, folding } = props\r\n  const theme = useTheme()\r\n  const [mode, setMode] = useState<'light' | 'dark'>(() => {\r\n    if (typeof window === 'undefined') return 'light'\r\n    return isDarkMode() ? 'dark' : 'light'\r\n  })\r\n  const [popup, setPopup] = useState(false)\r\n  const [textSize, setTextSize] = useState(16)\r\n\r\n  useEffect(() => {\r\n    onChangeThemeEvent((theme) => {\r\n      setMode(theme)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!mode) return\r\n\r\n    theme.state.changeTheme(mode)\r\n  }, [mode])\r\n\r\n  useEffect(() => {\r\n    if (!document?.body?.parentElement) return\r\n    if (textSize === 16) {\r\n      const { fontSize, ...otherProps } = document.body.parentElement.style\r\n      ;(document.body.parentElement as any).style = otherProps\r\n      return\r\n    }\r\n\r\n    document.body.parentElement.style.fontSize = `${textSize}px`\r\n  }, [textSize])\r\n\r\n  return (\r\n    <Container fold={fold}>\r\n      <div>\r\n        <FoldingButton fold={fold} onClick={folding}>\r\n          <svg\r\n            viewBox='0 0 24 24'\r\n            width='18'\r\n            height='18'\r\n            stroke='currentColor'\r\n            strokeWidth='1.5'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n            fill='none'\r\n            shapeRendering='geometricPrecision'\r\n          >\r\n            <rect x='3' y='3' width='18' height='18' rx='2' ry='2' />\r\n            <path d='M9 3v18' />\r\n          </svg>\r\n        </FoldingButton>\r\n        <Spacer />\r\n        <SettingButton popup={popup} onClick={() => setPopup(!popup)}>\r\n          <svg\r\n            viewBox='0 0 24 24'\r\n            width='18'\r\n            height='18'\r\n            stroke='currentColor'\r\n            strokeWidth='1.5'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n            fill='none'\r\n            shapeRendering='geometricPrecision'\r\n          >\r\n            <circle cx='12' cy='12' r='3' />\r\n            <path d='M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z' />\r\n          </svg>\r\n        </SettingButton>\r\n      </div>\r\n      <ThemeToggleContainer>\r\n        <svg\r\n          viewBox='0 0 24 24'\r\n          width='18'\r\n          height='18'\r\n          stroke='currentColor'\r\n          strokeWidth='1.5'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          fill='none'\r\n          shapeRendering='geometricPrecision'\r\n        >\r\n          <circle cx='12' cy='12' r='5' />\r\n          <path d='M12 1v2' />\r\n          <path d='M12 21v2' />\r\n          <path d='M4.22 4.22l1.42 1.42' />\r\n          <path d='M18.36 18.36l1.42 1.42' />\r\n          <path d='M1 12h2' />\r\n          <path d='M21 12h2' />\r\n          <path d='M4.22 19.78l1.42-1.42' />\r\n          <path d='M18.36 5.64l1.42-1.42' />\r\n        </svg>\r\n        <Toggle toggle={mode === 'dark'} size='medium' onChange={handleDarkModeToggle} color='pink' />\r\n        <svg\r\n          viewBox='0 0 24 24'\r\n          width='18'\r\n          height='18'\r\n          stroke='currentColor'\r\n          strokeWidth='1.5'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          fill='none'\r\n          shapeRendering='geometricPrecision'\r\n        >\r\n          <path d='M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z' />\r\n        </svg>\r\n      </ThemeToggleContainer>\r\n      <Modal.Modal active={popup}>\r\n        <Modal.Body>\r\n          <Modal.Header>\r\n            <Modal.Title>설정</Modal.Title>\r\n            <Spacer y={2} />\r\n            <EnvironmentContainer>\r\n              <Text weight={500}>텍스트 크기</Text>\r\n              <SelectGaugeWrapper>\r\n                {fontSizeControllerMapper.map((it, idx, arr) => (\r\n                  <SelectGauge\r\n                    key={idx}\r\n                    value={it}\r\n                    idx={idx}\r\n                    max={arr.length}\r\n                    onClick={() => changeREM(it)}\r\n                    selected={textSize}\r\n                  />\r\n                ))}\r\n              </SelectGaugeWrapper>\r\n            </EnvironmentContainer>\r\n          </Modal.Header>\r\n        </Modal.Body>\r\n        <Modal.Actions>\r\n          <Modal.Action onClick={() => setPopup(false)}>\r\n            <Text>닫기</Text>\r\n          </Modal.Action>\r\n        </Modal.Actions>\r\n      </Modal.Modal>\r\n    </Container>\r\n  )\r\n\r\n  function handleDarkModeToggle(state: boolean): void {\r\n    if (state) {\r\n      setMode('dark')\r\n    } else {\r\n      setMode('light')\r\n    }\r\n  }\r\n\r\n  function changeREM(size: number): void {\r\n    setTextSize(size)\r\n  }\r\n}\r\n\r\nconst Container = styled.header<{ fold: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 400px;\r\n  top: 0;\r\n  width: calc(100% - 400px);\r\n  height: 43px;\r\n  padding: 0 1rem;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme, fold }) => css`\r\n    z-index: ${theme.layers.AFTER_STANDARD};\r\n    background-color: ${theme.colors.PRIMARY.ACCENT_1};\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n\r\n    ${fold &&\r\n    css`\r\n      width: calc(100% - 80px) !important;\r\n      left: 80px;\r\n    `}\r\n  `}\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    left: 0;\r\n    width: 100% !important;\r\n  }\r\n`\r\n\r\nconst FoldingButton = styled.button<{ fold: boolean }>`\r\n  cursor: pointer;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 18px;\r\n  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n\r\n  ${({ theme, fold }) => css`\r\n    ${fold\r\n      ? css`\r\n          color: ${theme.colors.HIGHLIGHT.PINK};\r\n        `\r\n      : css`\r\n          &:hover {\r\n            color: ${theme.colors.PRIMARY.FOREGROUND};\r\n          }\r\n          color: ${theme.colors.PRIMARY.ACCENT_4};\r\n        `}\r\n  `}\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    display: none;\r\n\r\n    & + span {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst SettingButton = styled.button<{ popup: boolean }>`\r\n  cursor: pointer;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 18px;\r\n  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n\r\n  ${({ theme, popup }) => css`\r\n    ${popup\r\n      ? css`\r\n          color: ${theme.colors.HIGHLIGHT.PINK};\r\n        `\r\n      : css`\r\n          &:hover {\r\n            color: ${theme.colors.PRIMARY.FOREGROUND};\r\n          }\r\n          color: ${theme.colors.PRIMARY.ACCENT_4};\r\n        `}\r\n  `}\r\n`\r\n\r\nconst ThemeToggleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.PRIMARY.FOREGROUND};\r\n  `}\r\n\r\n  & > label {\r\n    margin: 0 12px;\r\n  }\r\n`\r\n\r\nconst EnvironmentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`\r\n\r\nconst SelectGaugeWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 10px;\r\n  border-radius: 5px;\r\n  margin: 0.5rem 0;\r\n  ${({ theme }) => css`\r\n    background-color: ${theme.colors.PRIMARY.ACCENT_2};\r\n  `}\r\n`\r\n\r\nconst SelectGauge = styled.div<{ idx: number; max: number; value: number; selected: number }>`\r\n  position: absolute;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 10px;\r\n  transform: translate(-50%, -50%);\r\n  cursor: pointer;\r\n\r\n  ${({ theme, idx, max, value, selected }) => css`\r\n    left: ${(idx / (max - 1)) * 100}%;\r\n    top: 50%;\r\n    background-color: ${selected === value ? theme.colors.HIGHLIGHT.PINK : theme.colors.PRIMARY.ACCENT_8};\r\n\r\n    &:first-of-type {\r\n      left: 1.5%;\r\n    }\r\n\r\n    &:last-of-type {\r\n      right: 95%;\r\n    }\r\n\r\n    &::after {\r\n      content: '${value}';\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      top: 30px;\r\n    }\r\n  `}\r\n`\r\n"],"names":["fontSizeControllerMapper","Header","props","fold","folding","theme","useTheme","useState","window","isDarkMode","mode","setMode","popup","setPopup","textSize","setTextSize","useEffect","onChangeThemeEvent","state","changeTheme","document","body","parentElement","style","fontSize","otherProps","Container","FoldingButton","onClick","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","x","y","rx","ry","d","SettingButton","cx","cy","r","ThemeToggleContainer","toggle","size","onChange","color","active","EnvironmentContainer","weight","SelectGaugeWrapper","map","it","idx","arr","SelectGauge","value","max","length","selected","css","layers","AFTER_STANDARD","colors","PRIMARY","ACCENT_1","HIGHLIGHT","PINK","FOREGROUND","ACCENT_4","ACCENT_2","ACCENT_8"],"sourceRoot":""}