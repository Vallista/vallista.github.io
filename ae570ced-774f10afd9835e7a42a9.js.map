{"version":3,"file":"ae570ced-774f10afd9835e7a42a9.js","mappings":"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","sources":["webpack://@vallista/blog/./src/pages/resume.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Spacer, Text } from '@vallista/design-system'\nimport { VFC } from 'react'\n\nimport { Seo } from '../components/Seo'\nimport { useConfig } from '../hooks/useConfig'\n\nconst ResumePage: VFC = () => {\n  const { resume } = useConfig()\n\n  return (\n    <Container>\n      <Seo name='이력서' image='/resume.png' />\n      <Header>\n        <Wrapper>\n          <Container>\n            <Title>\n              <Container>\n                <Text as='h2' size={48} weight={800}>\n                  {resume.config.name}\n                </Text>\n                <Text as='h2' size={32} weight={800}>\n                  {resume.config.role}\n                </Text>\n              </Container>\n            </Title>\n            <Spacer y={1} />\n            <SubTitle>\n              {resume.config.bio.map((it) => (\n                <Text as='p' size={20} weight={400} lineHeight={40} key={it}>\n                  <span dangerouslySetInnerHTML={{ __html: it }} />\n                </Text>\n              ))}\n              <Container>\n                <Spacer y={1.5} />\n              </Container>\n              <Container row>\n                <Button size='large' width={220} onClick={() => openNewPage(resume.config.github)}>\n                  <Container row center>\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='30'\n                      height='30'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22' />\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      GitHub 방문하기\n                    </Text>\n                  </Container>\n                </Button>\n                <Button size='large' width={240} onClick={() => openNewPage(resume.config.github)}>\n                  <Container row center>\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='30'\n                      height='30'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M10 13a5 5 0 007.54.54l3-3a5 5 0 00-7.07-7.07l-1.72 1.71' />\n                      <path d='M14 11a5 5 0 00-7.54-.54l-3 3a5 5 0 007.07 7.07l1.71-1.71' />\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      이전 블로그 방문하기\n                    </Text>\n                  </Container>\n                </Button>\n              </Container>\n            </SubTitle>\n          </Container>\n        </Wrapper>\n      </Header>\n      <Spacer />\n      <Box id='career'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.careers.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.careers.list.map((it) => (\n              <TwoColumn key={it.name}>\n                <Container>\n                  <div>\n                    <Text as='h3' size={24} weight={500}>\n                      {it.name}\n                    </Text>\n                    <Spacer y={1} />\n                    <Text as='span' size={16}>\n                      {it.startDate} ~ {it.endDate}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.position}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.department}\n                    </Text>\n                    <Spacer y={1} />\n                    <div>{it.descriptions?.map((it_, idx) => <Text key={idx}>{it_}</Text>)}</div>\n                  </div>\n                </Container>\n                <Container>\n                  <div>\n                    {it.projects?.map((it_, idx) => (\n                      <Container key={idx}>\n                        <Text size={24} weight={600} as='h3'>\n                          {it_.name}\n                        </Text>\n                        <Spacer y={1} />\n                        <Text size={16}>\n                          {it_.startDate} ~ {it_.endDate}\n                        </Text>\n                        {it_.descriptions?.map((it__, idx) => (\n                          <Text size={16} key={idx}>\n                            {it__}\n                          </Text>\n                        ))}\n                        <Spacer y={1} />\n                        <ul>\n                          {it_.which?.map((it__, idx) => (\n                            <li key={idx}>\n                              <Text size={14}>{it__}</Text>\n                            </li>\n                          ))}\n                        </ul>\n                        <Spacer y={2} />\n                      </Container>\n                    ))}\n                  </div>\n                </Container>\n              </TwoColumn>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='skills'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.skills.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.skills.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_.title}</Text>\n                          <SubTitleText>\n                            {it_.subTitle.map((it__, idx) => (\n                              <Text size={14} key={idx}>\n                                {it__}\n                              </Text>\n                            ))}\n                          </SubTitleText>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='hobby'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.hobby.description}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.hobby.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_}</Text>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='speaker'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.speaker.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.speaker.list.map((it, idx) => (\n                <li key={idx}>\n                  <Text size={16}>\n                    <a onClick={() => openNewPage(it.url)}>{it.title}</a>\n                  </Text>\n                </li>\n              ))}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='activities'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.activities.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.activities.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='lectures'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.lectures.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.lectures.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n      <Box id='awards'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.awards.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.awards.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n    </Container>\n  )\n\n  function openNewPage(target: string): void {\n    window.open(target, '_blink')\n  }\n}\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Box = styled.div``\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  max-width: 550px;\n`\n\nconst SubTitle = styled.div`\n  max-width: 550px;\n\n  @media screen and (max-width: 1024px) {\n    & > div:last-of-type {\n      flex-direction: column !important;\n\n      & > * {\n        margin-left: 0;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n`\n\nconst Contents = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n\n  ul {\n    list-style: disc;\n    padding-left: 1.2rem;\n  }\n\n  li {\n    margin-bottom: 0.5rem;\n    padding: 0.2rem 0;\n    line-height: 1.4;\n\n    &::marker {\n      ${({ theme }) => css`\n        color: ${theme.colors.HIGHLIGHT.PINK};\n      `}\n    }\n  }\n`\n\nconst TwoColumn = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n\n  & > div:first-of-type {\n    height: auto;\n    box-sizing: border-box;\n    flex: 3;\n    padding-right: 2rem;\n\n    & > div {\n      display: flex;\n      flex-direction: column;\n      gap: 0;\n      position: sticky;\n      top: 85px;\n\n      & > div:last-of-type {\n        ${({ theme }) => css`\n          color: ${theme.colors.PRIMARY.ACCENT_5};\n\n          & > p {\n            margin-bottom: 0.5rem !important;\n          }\n        `}\n      }\n    }\n  }\n\n  & > div:last-of-type {\n    flex: 7;\n  }\n\n  @media screen and (max-width: 1024px) {\n    flex-direction: column;\n\n    & > div:last-of-type {\n      padding-left: 1rem;\n\n      ${({ theme }) => css`\n        border-left: 3px solid ${theme.colors.HIGHLIGHT.PINK};\n      `}\n    }\n  }\n`\n\nconst SubTitleText = styled.div`\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_5};\n  `}\n`\n\nexport default ResumePage\n"],"names":["Wrapper","_styled","target","name","styles","Box","Header","Title","SubTitle","Contents","_ref","theme","css","colors","HIGHLIGHT","PINK","TwoColumn","_ref2","PRIMARY","ACCENT_5","_ref3","SubTitleText","_ref4","ResumePage","resume","useConfig","_jsxs","Container","children","_jsx","Seo","image","Text","as","size","weight","config","role","Spacer","y","bio","map","it","lineHeight","dangerouslySetInnerHTML","__html","row","Button","width","onClick","openNewPage","github","center","viewBox","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","id","careers","title","list","_it$descriptions","_it$projects","startDate","endDate","position","department","descriptions","it_","idx","projects","_it_$descriptions","_it_$which","it__","which","skills","_it$descriptions2","subTitle","hobby","description","_it$descriptions3","speaker","url","activities","lectures","awards","window","open"],"sourceRoot":""}