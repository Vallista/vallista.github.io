{"version":3,"file":"component---src-pages-posts-tsx-1ff6a41539a3b7a0f927.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/components/ListTable/ListTable.style.tsx","webpack://@vallista-land/blog/./src/components/ListTable/index.tsx","webpack://@vallista-land/blog/./src/pages/posts.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nexport const _TitleWrapper = styled.header<{ underline: boolean }>`\n  ${({ theme, underline }) => css`\n    ${underline &&\n    css`\n      border-bottom: 1px solid ${theme.colors.PRIMARY.ACCENT_4};\n    `}\n  `}\n`\n\nexport const _List = styled.div``\n\nexport const _ListItem = styled.a`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: none !important;\n  border-radius: 6px;\n  padding: 0.625rem 1.5rem;\n  margin: 0 -1.5rem;\n\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_6} !important;\n\n    &:hover {\n      background: ${theme.colors.PRIMARY.ACCENT_2} !important;\n      color: ${theme.colors.PRIMARY.FOREGROUND} !important;\n    }\n\n    & > span:first-of-type {\n      max-width: 85%;\n    }\n\n    & > span:last-of-type {\n      max-width: 15%;\n      white-space: nowrap;\n    }\n\n    &:last-of-type {\n      color: ${theme.colors.PRIMARY.ACCENT_3};\n    }\n  `}\n`\n","import { Container, Spacer, Text } from '@vallista/core'\nimport { navigate } from 'gatsby'\nimport { VFC } from 'react'\n\nimport * as Styled from './ListTable.style'\n\ninterface ListTableProps {\n  title: string\n  list: {\n    name: string\n    slug: string\n    date: string\n  }[]\n  underline?: boolean\n}\n\nexport const ListTable: VFC<ListTableProps> = (props) => {\n  const { title, list, underline = false } = props\n\n  return (\n    <Container>\n      <Styled._TitleWrapper underline={underline}>\n        <Text as='h3' size={32} weight={800}>\n          {title}\n        </Text>\n      </Styled._TitleWrapper>\n      <Spacer y={1} />\n      <Styled._List>\n        {list.map((it) => (\n          <Styled._ListItem key={it.slug} onClick={() => moveToLocation(it.slug)}>\n            <Text as='span' size={16} weight={600}>\n              {it.name}\n            </Text>\n            <Text as='span' size={14} weight={300}>\n              {it.date}\n            </Text>\n          </Styled._ListItem>\n        ))}\n      </Styled._List>\n    </Container>\n  )\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n}\n","import styled from '@emotion/styled'\nimport { Container, Spacer, Text, SearchInput } from '@vallista/core'\nimport { graphql } from 'gatsby'\nimport { useMemo, useState, VFC } from 'react'\n\nimport { ListTable } from '../components/ListTable'\nimport { Seo } from '../components/Seo'\nimport { IndexQuery, PageProps } from '../types/type'\nimport { toDate, getTime, filteredByDraft } from '../utils'\n\nconst PostsPage: VFC<PageProps<IndexQuery>> = (props) => {\n  const { data } = props\n  const { nodes } = data.allMarkdownRemark\n  const [search, setSearch] = useState('')\n\n  const posts = useMemo(\n    () =>\n      filteredByDraft(nodes).sort((a, b) => {\n        const base = toDate(a.frontmatter.date)\n        const target = toDate(b.frontmatter.date)\n\n        return target.getTime() - base.getTime()\n      }),\n    [nodes]\n  )\n\n  const sortPosts = useMemo(\n    () =>\n      posts.map((it) => {\n        const { slug } = it.fields\n        const { date, title: name } = it.frontmatter\n        const [, month, day] = getTime(date)\n        const time = toDate(date)\n\n        return {\n          time: time.getTime(),\n          date: `${Number(month)}월 ${Number(day)}일`,\n          name,\n          slug\n        }\n      }),\n    [posts]\n  )\n\n  const views = useMemo(() => {\n    const remake = posts.reduce<Record<string, Array<{ name: string; date: string; slug: string }>>>((acc, curr) => {\n      const { slug } = curr.fields\n      const { date, title: name } = curr.frontmatter\n      const [year, month, day] = getTime(date)\n\n      if (!acc[year]) acc[year] = []\n\n      acc[year].push({\n        name,\n        date: `${Number(month)}월 ${Number(day)}일`,\n        slug\n      })\n\n      return acc\n    }, {})\n\n    const values = Object.values(remake)\n    return Object.keys(remake)\n      .map((it, idx) => ({\n        year: it,\n        posts: values[idx]\n      }))\n      .sort((a, b) => Number(b.year) - Number(a.year))\n  }, [nodes])\n\n  const filteredSearchPosts = useMemo(\n    () => sortPosts.filter((it) => it.name.toLocaleUpperCase().includes(search.toLocaleUpperCase())),\n    [sortPosts, search]\n  )\n\n  const hasSearchText = search.length !== 0\n\n  return (\n    <Container>\n      <Seo name='글 목록' />\n      <Wrapper>\n        <Container>\n          <div>\n            <SearchInput value={search} onChange={setSearch} size='large' placeholder='검색할 텍스트를 입력하세요.' />\n          </div>\n          <Spacer y={2} />\n        </Container>\n        {hasSearchText ? (\n          filteredSearchPosts.length === 0 ? (\n            <>\n              <Text size={20} weight={600}>\n                검색된 결과가 없어요 :(\n              </Text>\n              <Text size={20} weight={600}>\n                다른 결과를 검색해보시겠어요?\n              </Text>\n            </>\n          ) : (\n            <ListTable underline title='검색결과' list={filteredSearchPosts} />\n          )\n        ) : (\n          views.map((it) => (\n            <Container key={it.year}>\n              <div>\n                <ListTable title={it.year} list={it.posts} underline />\n              </div>\n              <Spacer y={2} />\n            </Container>\n          ))\n        )}\n      </Wrapper>\n    </Container>\n  )\n}\n\nconst Wrapper = styled.section`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 900px;\n  padding: 2rem;\n`\nexport default PostsPage\n\nexport const pageQuery = graphql`\n  query BlogPostsQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          image {\n            publicURL\n          }\n          draft\n        }\n      }\n    }\n  }\n`\n"],"names":["_TitleWrapper","theme","underline","css","colors","PRIMARY","ACCENT_4","_List","_ListItem","ACCENT_6","ACCENT_2","FOREGROUND","ACCENT_3","ListTable","props","title","list","as","size","weight","y","map","it","onClick","target","slug","navigate","name","date","Wrapper","nodes","data","allMarkdownRemark","useState","search","setSearch","posts","useMemo","filteredByDraft","sort","a","b","base","toDate","frontmatter","getTime","sortPosts","fields","month","day","time","Number","views","remake","reduce","acc","curr","year","push","values","Object","keys","idx","filteredSearchPosts","filter","toLocaleUpperCase","includes","hasSearchText","length","value","onChange","placeholder"],"sourceRoot":""}