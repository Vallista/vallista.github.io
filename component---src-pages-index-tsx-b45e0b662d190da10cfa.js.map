{"version":3,"file":"component---src-pages-index-tsx-b45e0b662d190da10cfa.js","mappings":"kQAWA,ICXoDA,EAASC,EDuEvDC,GAAgBC,EAAAA,EAAAA,IAAH,ICvEiCH,EDuEjC,gJCtEZC,IACHA,EAAMD,EAAQI,MAAM,IAGtBJ,EAAQC,IAAMA,EDkEG,ECjEVD,ID+EHK,GAAO,4HAOPC,GAAM,+EAINC,GAAK,wMAaQL,EAbR,+BAkBLM,GAAQ,gGAKRC,GAAQ,4IAQd,EApH8C,SAACC,GAC7C,IA8C6BC,EA7CrBC,EADSF,EAATG,KACeC,kBAAfF,MAER,OACE,UAAC,KAAD,YACE,SAACG,EAAA,EAAD,CAAKC,KAAK,OACV,SAACV,EAAD,WACE,UAACD,EAAD,YACE,UAACE,EAAD,YACE,SAAC,KAAD,CAAMU,GAAG,OAAOC,KAAM,GAAIC,OAAQ,IAAlC,qBAGA,SAAC,KAAD,CAAMF,GAAG,KAAKC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAjD,4BAIF,SAACZ,EAAD,WACE,UAAC,KAAD,CAAMS,GAAG,IAAIC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAhD,wBACY,2CADZ,4JAMF,SAAC,KAAD,CAAQF,KAAK,QAAQG,MAAM,QAAQC,QAAS,kBAmB5BC,EAnBiD,cAoBvEC,EAAAA,EAAAA,UAASD,GADX,IAAwBA,GAnBhB,UACE,SAAC,KAAD,CAAML,KAAM,GAAIC,OAAQ,IAAxB,kCAMN,SAACV,EAAD,WACE,SAACgB,EAAA,EAAD,CAAWC,MAAM,OAAOC,MAeDhB,EAf2BC,GAkB/CgB,EAAAA,EAAAA,IAAgBjB,GACpBkB,QAAO,SAACC,EAAGC,GAAJ,OAAYA,EAAMC,KACzBC,KAAI,SAACC,GAAD,MAAS,CACZlB,KAAMkB,EAAGC,YAAYT,MACrBU,KAAMF,EAAGG,OAAOD,KAChBE,MAlBiBf,EAkBGW,EAAGC,YAAYG,KAjBvC,GAAuBC,EAAAA,EAAAA,IAAQhB,GAAtBiB,EAAT,KAAgBC,EAAhB,KAEUC,OAAOF,GAAjB,KAA4BE,OAAOD,GAAnC,MAHF,IAAuBlB,EACrB,EAASiB,EAAOC","sources":["webpack://@vallista-land/blog/./src/pages/index.tsx","webpack://@vallista-land/blog/../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { keyframes } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Text } from '@vallista-land/core'\nimport { graphql, navigate } from 'gatsby'\nimport { VFC } from 'react'\n\nimport { ListTable } from '../components/ListTable'\nimport { Seo } from '../components/Seo'\nimport { IndexQuery, PageProps, Post } from '../types/type'\nimport { filteredByDraft, getTime } from '../utils'\n\nconst IndexPage: VFC<PageProps<IndexQuery>> = (props) => {\n  const { data } = props\n  const { nodes } = data.allMarkdownRemark\n\n  return (\n    <Container>\n      <Seo name='홈' />\n      <Header>\n        <Wrapper>\n          <Title>\n            <Text as='span' size={48} weight={800}>\n              어서오세요!\n            </Text>\n            <Text as='h1' size={48} weight={800} lineHeight={56}>\n              저는 마광휘입니다.\n            </Text>\n          </Title>\n          <SubTitle>\n            <Text as='p' size={20} weight={400} lineHeight={40}>\n              대한민국 서울에서 <strong>소프트웨어 엔지니어</strong>로 일하고 있어요. 한 분야에 국한되지 않는 여러\n              문제를 해결하는 것에 즐거움을 느낍니다. 공부하고 느낀점을 위주로 블로그에 글을 작성하고 있어요. 최근에는\n              프론트엔드 문제 해결에 관심이 많아, 많은 시간을 쏟고 있어요. 러스트를 기반으로한 웹 생태계가 기대돼요!\n            </Text>\n          </SubTitle>\n          <Button size='large' color='alert' onClick={() => moveToLocation('/posts')}>\n            <Text size={16} weight={800}>\n              블로그 글 보러갈까요?\n            </Text>\n          </Button>\n        </Wrapper>\n      </Header>\n      <Contents>\n        <ListTable title='최근 글' list={filteredNewestPosts(nodes)} />\n      </Contents>\n    </Container>\n  )\n\n  function getSimpleDate(target: string): string {\n    const [, month, day] = getTime(target)\n\n    return `${Number(month)}월 ${Number(day)}일`\n  }\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n\n  function filteredNewestPosts(posts: Post[]): { name: string; slug: string; date: string }[] {\n    const cuttingCount = 5\n\n    return filteredByDraft(posts)\n      .filter((_, idx) => idx < cuttingCount + 1)\n      .map((it) => ({\n        name: it.frontmatter.title,\n        slug: it.fields.slug,\n        date: getSimpleDate(it.frontmatter.date)\n      }))\n  }\n}\n\nconst HandAnimation = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n\n  50% {\n    transform: rotateZ(30deg);\n  }\n\n  100% {\n    transform: rotateZ(0deg);\n  }\n`\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  margin-bottom: 1.5rem;\n  max-width: 550px;\n\n  & > span:first-of-type {\n    position: relative;\n\n    &::after {\n      position: absolute;\n      right: -4rem;\n      top: -0.5rem;\n      content: '✋';\n      display: block;\n      animation: ${HandAnimation} 1s ease-in-out infinite;\n    }\n  }\n`\n\nconst SubTitle = styled.div`\n  max-width: 550px;\n  margin-bottom: 2rem;\n`\n\nconst Contents = styled.section`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["strings","raw","HandAnimation","keyframes","slice","Wrapper","Header","Title","SubTitle","Contents","props","posts","nodes","data","allMarkdownRemark","Seo","name","as","size","weight","lineHeight","color","onClick","target","navigate","ListTable","title","list","filteredByDraft","filter","_","idx","cuttingCount","map","it","frontmatter","slug","fields","date","getTime","month","day","Number"],"sourceRoot":""}