{"version":3,"file":"d6e67148-04d635953a6e6ef8a039.js","mappings":";;;;;;;;;;;;;;kSAsBO,KAAM,CAAAA,CAAA,CAA+CC,CAAA,GACpD,MAAAC,EAAA,CAA8DC,iEAAA,CAAUF,CAAK,EAA7E,CAAEG,IAAA,CAAAC,CAAA,CAAO,QAASC,KAAA,CAAAC,CAAA,CAAQ,OAAQC,QAAA,CAAAC,CAAa,EAAAP,EAAA,CAAAQ,CAAA,CAAAC,4GAAA,CAAAT,EAAA,CAAAU,SAAA,EAErD,qBAAAC,0EAAA,CACGC,CAAA,CACC,CAAAC,QAAA,iBAAAC,wEAAA,CAACC,CAAA,CAAAC,MAAA,CAAAC,MAAA,EACCC,IAAA,CAAK,WACLC,OAAA,CAASX,CAAA,CAAWY,MAAA,CACpBd,QAAA,CAAUA,CAAA,GAAMC,CAAA,CAAS,CAACC,CAAA,CAAWY,MAAM,GACvCZ,CAAA,CAAW,EAEhB,eAAAM,wEAAA,CAAAO,CAAA,CAAAL,MAAA,CAAAC,MAAA,EAAQf,IAAA,CAAAC,CAAA,EAAgBK,CAAA,EAAYJ,KAAA,CAAAC,CAAA,CACnCQ,QAAA,CAAC,eAAAC,wEAAA,CAAAQ,CAAA,CAAAN,MAAA,CAAAC,MAAA,EAAOf,IAAA,CAAAC,CAAA,EAAgBK,CAAA,EAAYJ,KAAA,CAAAC,CAAA,EAAa,GACnD,GACF,EAEJ,EAEMO,CAAA,CAAK,eAAAW,yEAAA,SAAAC,KAAA,EAAAG,MAAA,iBAAAH,KAAA,EAAAK,IAAA,WAAAC,MAAA,qGAMV,EAEKf,CAAA,CAAK,eAAAQ,yEAAA,SAAAC,KAAA,EAAAG,MAAA,iBAAAH,KAAA,EAAAK,IAAA,WAAAC,MAAA,iKAYV,EAEKT,CAAA,CAAO,eAAAE,yEAAA,QAAAC,KAAA,EAAAG,MAAA,iBACTM,IAAA,MAAC,CAAEC,KAAA,CAAAnC,CAAA,CAAOG,IAAA,CAAAC,CAAA,CAAMiB,MAAA,CAAAf,CAAA,CAAQ8B,QAAA,CAAA5B,CAAA,CAAUH,KAAA,CAAAI,CAAM,EAAAyB,IAAA,oBAAM,eAAAG,6DAAA,CAErC,8BAAAC,CAAA,CAAWlC,CAAI,EAAEmC,IAAA,CAAK,CAAC,eACtBD,CAAA,CAAWlC,CAAI,EAAEmC,IAAA,CAAK,CAAC,EAAC,wEAEpBjC,CAAA,CACVG,CAAA,GAAU,OACRT,CAAA,CAAMwC,MAAA,CAAOC,OAAA,CAAQC,OAAA,CACrB1C,CAAA,CAAMwC,MAAA,CAAOG,SAAA,CAAUC,IAAA,CACzB5C,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQC,QAAA,CAAQ,qBAE7BxC,CAAA,CACEG,CAAA,GAAU,OACRT,CAAA,CAAMwC,MAAA,CAAOC,OAAA,CAAQC,OAAA,CACrB1C,CAAA,CAAMwC,MAAA,CAAOG,SAAA,CAAUC,IAAA,CACzB5C,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQC,QAAA,CAMzB,8EAAAtC,CAAA,eACF,eAAA6B,6DAAA,CACgB,cAAArC,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQE,QAAA,CACnB,iBAAA/C,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQC,QAAA,CAAQ,wBAAArB,KAAA,OAAAA,KAAA,MAAAA,KAAA,MAAAA,KAAA,YAE9CA,KAAA,OAAAA,KACF,MAAAA,KAAA,MAAAA,KAAA,cAAAA,KACF,QAEKF,CAAA,CAAM,eAAAC,yEAAA,OAAAC,KAAA,EAAAG,MAAA,iBACRoB,KAAA,MAAC,CAAEb,KAAA,CAAAnC,CAAA,CAAOG,IAAA,CAAAC,CAAA,CAAMiB,MAAA,CAAAf,CAAA,CAAQ8B,QAAA,CAAA5B,CAAS,EAAAwC,KAAA,mCAAAX,6DAAA,CAIxB,0CAAAC,CAAA,CAAWlC,CAAI,EAAE6C,MAAA,CAAO,CAAC,EAAC,aACzBX,CAAA,CAAWlC,CAAI,EAAE6C,MAAA,CAAO,CAAC,EAAC,gFAEb3C,CAAA,CAASgC,CAAA,CAAWlC,CAAI,EAAE8C,GAAA,CAAI,CAAC,EAAIZ,CAAA,CAAWlC,CAAI,EAAE8C,GAAA,CAAI,CAAC,EAClE,wBAAAlD,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQM,UAAA,CAMjC,uIAAA3C,CAAA,eACC,eAAA6B,6DAAA,eACarC,CAAA,CAAMwC,MAAA,CAAOK,OAAA,CAAQC,QAAA,CAAQ,wBAAArB,KAAA,OAAAA,KAAA,MAAAA,KAAA,MAAAA,KAAA,OAE5C,KAAAA,KAAA,OAAAA,KACF,MAAAA,KAAA,MAAAA,KAAA,cAAAA,KACF,QAEKa,CAAA,CAGF,CACFc,KAAA,CAAO,CACLb,IAAA,CAAM,CAAC,GAAI,EAAE,EACbU,MAAA,CAAQ,CAAC,GAAI,EAAE,EACfC,GAAA,CAAK,CAAC,EAAG,EAAE,CACb,EACAG,MAAA,CAAQ,CACNd,IAAA,CAAM,CAAC,GAAI,EAAE,EACbU,MAAA,CAAQ,CAAC,GAAI,EAAE,EACfC,GAAA,CAAK,CAAC,EAAG,EAAE,CACb,EACAI,KAAA,CAAO,CACLf,IAAA,CAAM,CAAC,GAAI,EAAE,EACbU,MAAA,CAAQ,CAAC,GAAI,EAAE,EACfC,GAAA,CAAK,CAAC,EAAG,EAAE,EAEf","sources":["webpack://@vallista/blog/../../../src/components/Toggle/index.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { VFC } from 'react'\n\nimport { StyleParams, ToggleProps } from './type'\nimport { useToggle } from './useToggle'\n\n/**\n * # Toggle\n *\n * @description [vercel design toggle](https://vercel.com/design/toggle)\n *\n * 토글 컴포넌트입니다. 해당 컴포넌트로 토글을 나타냅니다.\n *\n * @param {ToggleProps} {@link ToggleProps} toggle 요소\n *\n * @example ```tsx\n * const [state, setState] = useState(false)\n *\n * <Toggle size=\"small\" toggle={state} onChange={setState} />\n * ```\n */\nexport const Toggle: VFC<Partial<ToggleProps>> = (props) => {\n  const { size = 'small', color = 'blue', onChange, ...otherProps } = useToggle(props)\n\n  return (\n    <Label>\n      <Input\n        type='checkbox'\n        checked={otherProps.toggle}\n        onChange={() => onChange(!otherProps.toggle)}\n        {...otherProps}\n      />\n      <Wrapper size={size} {...otherProps} color={color}>\n        <Circle size={size} {...otherProps} color={color} />\n      </Wrapper>\n    </Label>\n  )\n}\n\nconst Label = styled.label`\n  display: inline-flex;\n  position: relative;\n  vertical-align: middle;\n  white-space: nowrap;\n  user-select: none;\n`\n\nconst Input = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n  opacity: 0;\n  outline: none;\n`\n\nconst Wrapper = styled.span<StyleParams>`\n  ${({ theme, size, toggle, disabled, color }) => css`\n    display: inline-block;\n    width: ${sizeMapper[size].wrap[0]}px;\n    height: ${sizeMapper[size].wrap[1]}px;\n    transition: background 0.15s cubic-bezier(0, 0, 0.2, 1);\n    background: ${toggle\n      ? color === 'blue'\n        ? theme.colors.SUCCESS.DEFAULT\n        : theme.colors.HIGHLIGHT.PINK\n      : theme.colors.PRIMARY.ACCENT_2};\n    border: 1px solid\n      ${toggle\n        ? color === 'blue'\n          ? theme.colors.SUCCESS.DEFAULT\n          : theme.colors.HIGHLIGHT.PINK\n        : theme.colors.PRIMARY.ACCENT_2};\n    border-radius: 14px;\n    cursor: pointer;\n    position: relative;\n    box-sizing: border-box;\n\n    ${disabled &&\n    css`\n      background: ${theme.colors.PRIMARY.ACCENT_1};\n      border-color: ${theme.colors.PRIMARY.ACCENT_2};\n      cursor: not-allowed;\n    `}\n  `}\n`\n\nconst Circle = styled.div<StyleParams>`\n  ${({ theme, size, toggle, disabled }) => css`\n    position: absolute;\n    left: 0;\n    top: 50%;\n    width: ${sizeMapper[size].circle[0]}px;\n    height: ${sizeMapper[size].circle[1]}px;\n    transition: transform 0.15s cubic-bezier(0, 0, 0.2, 1);\n    transform: translate(${toggle ? sizeMapper[size].pos[1] : sizeMapper[size].pos[0]}px, -50%);\n    background: ${theme.colors.PRIMARY.BACKGROUND};\n    cursor: pointer;\n    border-radius: 50%;\n    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%), 0 1px 3px 0 rgb(0 0 0 / 10%);\n    border: 1px solid transparent;\n\n    ${disabled &&\n    css`\n      background: ${theme.colors.PRIMARY.ACCENT_2};\n      cursor: not-allowed;\n    `}\n  `}\n`\n\nconst sizeMapper: Record<\n  ToggleProps['size'],\n  { wrap: [number, number]; circle: [number, number]; pos: [number, number] }\n> = {\n  small: {\n    wrap: [28, 14],\n    circle: [12, 12],\n    pos: [1, 15]\n  },\n  medium: {\n    wrap: [34, 18],\n    circle: [16, 16],\n    pos: [1, 17]\n  },\n  large: {\n    wrap: [40, 24],\n    circle: [22, 22],\n    pos: [1, 17]\n  }\n}\n"],"names":["s","I","_i","i","size","g","color","c","onChange","C","b","_objectWithoutPropertiesLoose","_excluded","d","B","children","X","V","Object","assign","type","checked","toggle","N","u","l","process","env","NODE_ENV","target","label","name","styles","toString","Z","_ref","theme","disabled","A","G","wrap","colors","SUCCESS","DEFAULT","HIGHLIGHT","PINK","PRIMARY","ACCENT_2","ACCENT_1","_ref2","circle","pos","BACKGROUND","small","medium","large"],"sourceRoot":""}